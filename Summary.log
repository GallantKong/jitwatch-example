<?xml version='1.0' encoding='UTF-8'?>
<hotspot_log version='160 1' process='16140' time_ms='1572449967185'>
<vm_version>
<name>
Java HotSpot(TM) 64-Bit Server VM
</name>
<release>
25.131-b11
</release>
<info>
Java HotSpot(TM) 64-Bit Server VM (25.131-b11) for windows-amd64 JRE (1.8.0_131-b11), built on Mar 15 2017 01:23:53 by &quot;java_re&quot; with MS VC++ 10.0 (VS2010)
</info>
</vm_version>
<vm_arguments>
<args>
-XX:+UnlockDiagnosticVMOptions -XX:+TraceClassLoading -XX:+PrintAssembly -XX:+LogCompilation -XX:LogFile=Summary.log -javaagent:D:\Applications\ideaIU-2018.1.3.win\lib\idea_rt.jar=61016:D:\Applications\ideaIU-2018.1.3.win\bin -Dfile.encoding=UTF-8 
</args>
<command>
org.gallant.jitwatch.Summary
</command>
<launcher>
SUN_STANDARD
</launcher>
<properties>
java.vm.specification.name=Java Virtual Machine Specification
java.vm.version=25.131-b11
java.vm.name=Java HotSpot(TM) 64-Bit Server VM
java.vm.info=mixed mode, sharing
java.ext.dirs=D:\Program Files\Java\jdk1.8.0_131\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext
java.endorsed.dirs=D:\Program Files\Java\jdk1.8.0_131\jre\lib\endorsed
sun.boot.library.path=D:\Program Files\Java\jdk1.8.0_131\jre\bin
java.library.path=D:\Program Files\Java\jdk1.8.0_131\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;D:\Applications\apache-maven-3.5.0\bin;D:\Program Files\Java\jdk1.8.0_131\bin;D:\Program Files\Git;D:\Program Files\Git\bin;D:\Applications\pandoc-2.2.2.1;D:\Program Files\nodejs\;D:\Applications\btrace-bin-1.3.8.3\bin;D:\Program Files\TortoiseHg\;D:\cygwin64\bin;D:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin;D:\Ruby22-x64\bin;C:\Users\Gallant\AppData\Local\Microsoft\WindowsApps;D:\Applications\mysql-5.7.19-winx64\bin;D:\Applications\redis-2.4.5-win32-win64\64bit;C:\Users\Gallant\AppData\Roaming\npm;;.
java.home=D:\Program Files\Java\jdk1.8.0_131\jre
java.class.path=D:\Program Files\Java\jdk1.8.0_131\jre\lib\charsets.jar;D:\Program Files\Java\jdk1.8.0_131\jre\lib\deploy.jar;D:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\access-bridge-64.jar;D:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\cldrdata.jar;D:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\dnsns.jar;D:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\jaccess.jar;D:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\jfxrt.jar;D:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\localedata.jar;D:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\nashorn.jar;D:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\sunec.jar;D:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\sunjce_provider.jar;D:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\sunmscapi.jar;D:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\sunpkcs11.jar;D:\Program Files\Java\jdk1.8.0_131\jre\lib\ext\zipfs.jar;D:\Program Files\Java\jdk1.8.0_131\jre\lib\javaws.jar;D:\Program Files\Java\jdk1.8.0_131\jre\lib\jce.jar;D:\Program Files\Java\jdk1.8.0_131\jre\lib\jfr.jar;D:\Program Files\Java\jdk1.8.0_131\jre\lib\jfxswt.jar;D:\Program Files\Java\jdk1.8.0_131\jre\lib\jsse.jar;D:\Program Files\Java\jdk1.8.0_131\jre\lib\management-agent.jar;D:\Program Files\Java\jdk1.8.0_131\jre\lib\plugin.jar;D:\Program Files\Java\jdk1.8.0_131\jre\lib\resources.jar;D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar;D:\git\private\jitwatch\target\classes;D:\Applications\apache-maven-3.5.0\conf\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;D:\Applications\apache-maven-3.5.0\conf\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;D:\Applications\apache-maven-3.5.0\conf\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;D:\Applications\apache-maven-3.5.0\conf\repository\com\chrisnewland\jitwatch\1.1.5\jitwatch-1.1.5.jar;D:\Program Files\Java\jdk1.8.0_131\lib\tools.jar;D:\Applications\apache-maven-3.5.0\conf\repository\com\chrisnewland\jitwatch-ui\1.1.5\jitwatch-ui-1.1.5.jar
sun.boot.class.path=D:\Program Files\Java\jdk1.8.0_131\jre\lib\resources.jar;D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar;D:\Program Files\Java\jdk1.8.0_131\jre\lib\sunrsasign.jar;D:\Program Files\Java\jdk1.8.0_131\jre\lib\jsse.jar;D:\Program Files\Java\jdk1.8.0_131\jre\lib\jce.jar;D:\Program Files\Java\jdk1.8.0_131\jre\lib\charsets.jar;D:\Program Files\Java\jdk1.8.0_131\jre\lib\jfr.jar;D:\Program Files\Java\jdk1.8.0_131\jre\classes
java.vm.specification.vendor=Oracle Corporation
java.vm.specification.version=1.8
java.vm.vendor=Oracle Corporation
file.encoding=UTF-8
sun.java.command=org.gallant.jitwatch.Summary
sun.java.launcher=SUN_STANDARD
</properties>
</vm_arguments>
<tty>
<writer thread='1672'/>
[Opened D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.Object from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.io.Serializable from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.Comparable from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.CharSequence from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.String from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.reflect.AnnotatedElement from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.reflect.GenericDeclaration from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.reflect.Type from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.Class from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.Cloneable from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.ClassLoader from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.System from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.Throwable from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.Error from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.ThreadDeath from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.Exception from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.RuntimeException from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.SecurityManager from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.security.ProtectionDomain from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.security.AccessControlContext from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.security.SecureClassLoader from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.ReflectiveOperationException from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.ClassNotFoundException from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.LinkageError from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.NoClassDefFoundError from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.ClassCastException from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.ArrayStoreException from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.VirtualMachineError from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.OutOfMemoryError from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.StackOverflowError from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.IllegalMonitorStateException from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.ref.Reference from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.ref.SoftReference from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.ref.WeakReference from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.ref.FinalReference from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.ref.PhantomReference from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.misc.Cleaner from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.ref.Finalizer from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.Runnable from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.Thread from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.Thread$UncaughtExceptionHandler from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.ThreadGroup from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.Map from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.Dictionary from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.Hashtable from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.Properties from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.reflect.AccessibleObject from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.reflect.Member from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.reflect.Field from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.reflect.Parameter from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.reflect.Executable from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.reflect.Method from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.reflect.Constructor from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.reflect.MagicAccessorImpl from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.reflect.MethodAccessor from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.reflect.MethodAccessorImpl from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.reflect.ConstructorAccessor from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.reflect.ConstructorAccessorImpl from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.reflect.DelegatingClassLoader from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.reflect.ConstantPool from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.reflect.FieldAccessor from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.reflect.FieldAccessorImpl from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.reflect.UnsafeFieldAccessorImpl from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.reflect.UnsafeStaticFieldAccessorImpl from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.annotation.Annotation from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.reflect.CallerSensitive from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.invoke.MethodHandle from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.invoke.DirectMethodHandle from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.invoke.MemberName from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.invoke.MethodHandleNatives from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.invoke.LambdaForm from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.invoke.MethodType from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.BootstrapMethodError from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.invoke.CallSite from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.invoke.ConstantCallSite from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.invoke.MutableCallSite from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.invoke.VolatileCallSite from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.Appendable from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.AbstractStringBuilder from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.StringBuffer from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.StringBuilder from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.misc.Unsafe from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.AutoCloseable from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.io.Closeable from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.io.InputStream from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.io.ByteArrayInputStream from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.io.File from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.net.URLClassLoader from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.net.URL from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.jar.Manifest from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.misc.Launcher from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.misc.Launcher$AppClassLoader from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.misc.Launcher$ExtClassLoader from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.security.CodeSource from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.StackTraceElement from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.nio.Buffer from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.Boolean from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.Character from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.Number from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.Float from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.Double from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.Byte from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.Short from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.Integer from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.Long from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.NullPointerException from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.ArithmeticException from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.io.ObjectStreamField from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.Comparator from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.String$CaseInsensitiveComparator from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.security.Guard from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.security.Permission from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.security.BasicPermission from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.RuntimePermission from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.security.AccessController from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.reflect.ReflectPermission from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.security.PrivilegedAction from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.reflect.ReflectionFactory$GetReflectionFactoryAction from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.security.cert.Certificate from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.Iterable from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.Collection from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.List from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.RandomAccess from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.AbstractCollection from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.AbstractList from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.Vector from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.Stack from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.reflect.ReflectionFactory from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.ref.Reference$Lock from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.ref.Reference$ReferenceHandler from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.InterruptedException from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.ArrayList from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.Collections from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.Set from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.AbstractSet from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.Collections$EmptySet from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.Collections$EmptyList from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.AbstractMap from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.Collections$EmptyMap from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.Collections$UnmodifiableCollection from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.Collections$UnmodifiableList from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.Collections$UnmodifiableRandomAccessList from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.ref.ReferenceQueue from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.ref.ReferenceQueue$Null from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.ref.ReferenceQueue$Lock from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.misc.JavaLangRefAccess from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.ref.Reference$1 from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.misc.SharedSecrets from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.IncompatibleClassChangeError from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.NoSuchMethodError from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.reflect.Reflection from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.HashMap from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.Map$Entry from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.HashMap$Node from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.misc.VM from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.Hashtable$Entry from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.Math from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.ref.Finalizer$FinalizerThread from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.nio.charset.Charset from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.nio.charset.spi.CharsetProvider from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.nio.cs.FastCharsetProvider from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.nio.cs.StandardCharsets from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.util.PreHashedMap from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.nio.cs.StandardCharsets$Aliases from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.nio.cs.StandardCharsets$Classes from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.nio.cs.StandardCharsets$Cache from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.ThreadLocal from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.concurrent.atomic.AtomicInteger from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.Class$3 from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.Class$ReflectionData from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.Class$Atomic from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.reflect.generics.repository.AbstractRepository from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.reflect.generics.repository.GenericDeclRepository from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.reflect.generics.repository.ClassRepository from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.Class$AnnotationData from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.reflect.annotation.AnnotationType from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.WeakHashMap from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.ClassValue$ClassValueMap from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.reflect.Modifier from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.reflect.LangReflectAccess from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.reflect.ReflectAccess from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.Arrays from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.nio.charset.Charset$ExtendedProviderHolder from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.nio.charset.Charset$ExtendedProviderHolder$1 from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Opened D:\Program Files\Java\jdk1.8.0_131\jre\lib\charsets.jar]
[Loaded sun.nio.cs.AbstractCharsetProvider from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.nio.cs.ext.ExtendedCharsets from D:\Program Files\Java\jdk1.8.0_131\jre\lib\charsets.jar]
[Loaded java.lang.Class$1 from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.reflect.ReflectionFactory$1 from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.reflect.NativeConstructorAccessorImpl from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.reflect.DelegatingConstructorAccessorImpl from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.SortedMap from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.NavigableMap from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.TreeMap from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.misc.ASCIICaseInsensitiveComparator from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.TreeMap$Entry from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.nio.cs.HistoricallyNamedCharset from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.nio.cs.ext.GBK from D:\Program Files\Java\jdk1.8.0_131\jre\lib\charsets.jar]
[Loaded java.lang.StringCoding from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.ThreadLocal$ThreadLocalMap from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.ThreadLocal$ThreadLocalMap$Entry from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.StringCoding$StringDecoder from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.nio.cs.ext.DoubleByte from D:\Program Files\Java\jdk1.8.0_131\jre\lib\charsets.jar]
[Loaded sun.nio.cs.ext.DelegatableDecoder from D:\Program Files\Java\jdk1.8.0_131\jre\lib\charsets.jar]
[Loaded sun.nio.cs.ArrayDecoder from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.nio.charset.CharsetDecoder from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.nio.cs.ext.DoubleByte$Decoder from D:\Program Files\Java\jdk1.8.0_131\jre\lib\charsets.jar]
[Loaded java.nio.charset.CodingErrorAction from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.Hashtable$EntrySet from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.Collections$SynchronizedCollection from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.Collections$SynchronizedSet from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.Objects from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.Enumeration from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.Iterator from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.Hashtable$Enumerator from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.Runtime from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.misc.Version from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.io.FileInputStream from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.io.FileDescriptor from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.misc.JavaIOFileDescriptorAccess from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.io.FileDescriptor$1 from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.io.Flushable from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.io.OutputStream from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.io.FileOutputStream from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.io.FilterInputStream from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.io.BufferedInputStream from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.concurrent.atomic.AtomicReferenceFieldUpdater from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.security.PrivilegedExceptionAction from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl$1 from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.reflect.misc.ReflectUtil from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.io.FilterOutputStream from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.io.PrintStream from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.io.BufferedOutputStream from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.io.Writer from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.io.OutputStreamWriter from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.nio.cs.StreamEncoder from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.security.action.GetPropertyAction from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.nio.cs.Unicode from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.nio.cs.UTF_8 from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.nio.cs.ArrayEncoder from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.nio.charset.CharsetEncoder from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.nio.cs.UTF_8$Encoder from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.nio.ByteBuffer from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.nio.HeapByteBuffer from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.nio.Bits from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.nio.ByteOrder from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.concurrent.atomic.AtomicLong from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.misc.JavaNioAccess from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.nio.Bits$1 from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.io.BufferedWriter from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.io.DefaultFileSystem from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.io.FileSystem from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.io.WinNTFileSystem from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.io.ExpiringCache from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.LinkedHashMap from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.io.ExpiringCache$1 from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.Enum from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.io.File$PathStatus from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.nio.file.Watchable from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.nio.file.Path from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.StringCoding$StringEncoder from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.nio.cs.ext.DoubleByte$Encoder from D:\Program Files\Java\jdk1.8.0_131\jre\lib\charsets.jar]
[Loaded java.lang.Readable from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.nio.CharBuffer from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.nio.HeapCharBuffer from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.nio.charset.CoderResult from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.nio.charset.CoderResult$Cache from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.nio.charset.CoderResult$1 from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.nio.charset.CoderResult$2 from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.ClassLoader$3 from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.io.ExpiringCache$Entry from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.LinkedHashMap$Entry from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.ClassLoader$NativeLibrary from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.Terminator from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.misc.SignalHandler from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.Terminator$1 from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.misc.Signal from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.misc.NativeSignalHandler from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.Integer$IntegerCache from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.misc.OSEnvironment from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.io.Win32ErrorMode from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.misc.JavaLangAccess from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.System$2 from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.IllegalArgumentException from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.Compiler from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.Compiler$1 from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.net.URLStreamHandlerFactory from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.misc.Launcher$Factory from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.security.util.Debug from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.ClassLoader$ParallelLoaders from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.WeakHashMap$Entry from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.Collections$SetFromMap from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.WeakHashMap$KeySet from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.misc.JavaNetAccess from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.net.URLClassLoader$7 from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.StringTokenizer from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.misc.Launcher$ExtClassLoader$1 from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.misc.MetaIndex from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.io.Reader from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.io.BufferedReader from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.io.InputStreamReader from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.io.FileReader from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.nio.cs.StreamDecoder from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.nio.cs.UTF_8$Decoder from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.HashMap$TreeNode from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.reflect.Array from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.Locale from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.util.locale.LocaleObjectCache from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.Locale$Cache from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.concurrent.ConcurrentMap from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.concurrent.locks.Lock from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.concurrent.locks.ReentrantLock from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$Segment from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$Node from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$CounterCell from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$CollectionView from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$KeySetView from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$ValuesView from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$EntrySetView from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.util.locale.BaseLocale from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.util.locale.BaseLocale$Cache from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.util.locale.BaseLocale$Key from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.util.locale.LocaleObjectCache$CacheEntry from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.Locale$LocaleKey from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.util.locale.LocaleUtils from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.CharacterData from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.CharacterDataLatin1 from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.io.FileInputStream$1 from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.net.www.ParseUtil from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.BitSet from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.net.Parts from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.net.URLStreamHandler from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.net.www.protocol.file.Handler from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.misc.JavaSecurityAccess from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.security.ProtectionDomain$JavaSecurityAccessImpl from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.misc.JavaSecurityProtectionDomainAccess from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.security.ProtectionDomain$2 from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.security.ProtectionDomain$Key from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.security.Principal from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.HashSet from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.misc.URLClassPath from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.net.www.protocol.jar.Handler from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.misc.Launcher$AppClassLoader$1 from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.SystemClassLoaderAction from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.InternalError from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.instrument.Instrumentation from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.instrument.InstrumentationImpl from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.instrument.TransformerManager from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.instrument.TransformerManager$TransformerInfo from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.net.URLClassLoader$1 from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.net.util.URLUtil from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.misc.URLClassPath$3 from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.misc.URLClassPath$Loader from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.misc.URLClassPath$JarLoader from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.zip.ZipConstants from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.zip.ZipFile from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.misc.JavaUtilZipFileAccess from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.zip.ZipFile$1 from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.nio.cs.ThreadLocalCoders from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.nio.cs.ThreadLocalCoders$Cache from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.nio.cs.ThreadLocalCoders$1 from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.nio.cs.ThreadLocalCoders$2 from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.misc.URLClassPath$JarLoader$1 from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.misc.FileURLMapper from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.jar.JarFile from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.misc.JavaUtilJarAccess from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.jar.JavaUtilJarAccessImpl from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.nio.charset.StandardCharsets from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.nio.cs.US_ASCII from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.nio.cs.ISO_8859_1 from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.nio.cs.UTF_16BE from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.nio.cs.UTF_16LE from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.nio.cs.UTF_16 from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.Queue from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.Deque from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.ArrayDeque from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.zip.ZipCoder from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.misc.PerfCounter from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.misc.Perf$GetPerfAction from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.misc.Perf from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.misc.PerfCounter$CoreCounters from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.nio.ch.DirectBuffer from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.nio.MappedByteBuffer from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.nio.DirectByteBuffer from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.nio.LongBuffer from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.nio.DirectLongBufferU from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.misc.JarIndex from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.misc.ExtensionDependency from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.zip.ZipEntry from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.jar.JarEntry from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.jar.JarFile$JarFileEntry from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.zip.ZipFile$ZipFileInputStream from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.misc.IOUtils from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.zip.Inflater from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.zip.ZStreamRef from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.zip.InflaterInputStream from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.zip.ZipFile$ZipFileInflaterInputStream from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.AbstractSequentialList from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.LinkedList from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.LinkedList$Node from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.misc.URLClassPath$FileLoader from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.misc.Resource from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.misc.URLClassPath$JarLoader$2 from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.jar.Attributes from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.jar.Manifest$FastInputStream from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.jar.Attributes$Name from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.jar.JarVerifier from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.security.CodeSigner from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.jar.JarVerifier$3 from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.io.ByteArrayOutputStream from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.Package from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.security.util.SignatureFileVerifier from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.security.CryptoPrimitive from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.EnumSet from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.Class$MethodArray from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.Class$4 from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.reflect.NativeMethodAccessorImpl from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.reflect.DelegatingMethodAccessorImpl from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.RegularEnumSet from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.Collections$UnmodifiableSet from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.security.AlgorithmConstraints from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.security.util.AbstractAlgorithmConstraints from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.security.util.DisabledAlgorithmConstraints from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.security.util.AlgorithmDecomposer from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.regex.Pattern from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.regex.Pattern$Node from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.regex.Pattern$4 from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.regex.Pattern$LastNode from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.regex.Pattern$GroupHead from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.regex.Pattern$CharProperty from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.regex.Pattern$BmpCharProperty from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.regex.Pattern$Single from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.regex.Pattern$SliceNode from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.regex.Pattern$Slice from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.regex.Pattern$Begin from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.regex.Pattern$First from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.regex.Pattern$Start from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.regex.Pattern$TreeInfo from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.regex.ASCII from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.regex.Pattern$SliceI from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.regex.Pattern$BranchConn from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.regex.Pattern$Branch from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.security.util.AbstractAlgorithmConstraints$1 from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.security.Security from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.security.Security$1 from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.Properties$LineReader from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.ArrayList$SubList from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.ListIterator from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.ArrayList$SubList$1 from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.security.util.DisabledAlgorithmConstraints$Constraints from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.regex.Pattern$Ctype from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.regex.Pattern$Curly from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.regex.Pattern$GroupTail from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.regex.Pattern$BnM from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.regex.Pattern$SliceS from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.regex.MatchResult from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.regex.Matcher from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.security.util.DisabledAlgorithmConstraints$Constraint from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.security.util.DisabledAlgorithmConstraints$Constraint$Operator from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.security.util.DisabledAlgorithmConstraints$1 from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.security.util.ManifestEntryVerifier from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.nio.ByteBuffered from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.security.PermissionCollection from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.security.Permissions from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.net.URLConnection from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.net.www.URLConnection from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.net.www.protocol.file.FileURLConnection from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.net.www.MessageHeader from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.io.FilePermission from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.io.FilePermission$1 from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.io.FilePermissionCollection from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.security.AllPermission from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.security.UnresolvedPermission from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.security.BasicPermissionCollection from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded com.intellij.rt.execution.application.AppMainV2$Agent from file:/D:/Applications/ideaIU-2018.1.3.win/lib/idea_rt.jar]
[Loaded sun.instrument.InstrumentationImpl$1 from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded com.intellij.rt.execution.application.AppMainV2 from file:/D:/Applications/ideaIU-2018.1.3.win/lib/idea_rt.jar]
[Loaded com.intellij.rt.execution.application.AppMainV2$1 from file:/D:/Applications/ideaIU-2018.1.3.win/lib/idea_rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$ForwardingNode from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.reflect.InvocationTargetException from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.NoSuchMethodException from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
<writer thread='16600'/>
[Loaded java.net.Socket from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.net.SocketAddress from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.net.InetSocketAddress from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
<writer thread='1572'/>
<thread_logfile thread='1572' filename='C:\Users\Gallant\AppData\Local\Temp\\hs_c1572_pid16140.log'/>
<writer thread='1064'/>
<thread_logfile thread='1064' filename='C:\Users\Gallant\AppData\Local\Temp\\hs_c1064_pid16140.log'/>
<writer thread='16600'/>
[Loaded java.net.InetAddress from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.net.InetSocketAddress$InetSocketAddressHolder from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.security.action.GetBooleanAction from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
<writer thread='14520'/>
<thread_logfile thread='14520' filename='C:\Users\Gallant\AppData\Local\Temp\\hs_c14520_pid16140.log'/>
<writer thread='16600'/>
[Loaded java.net.InetAddress$1 from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
<writer thread='1672'/>
[Loaded java.lang.invoke.MethodHandleImpl from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
<writer thread='16600'/>
[Loaded java.net.InetAddress$InetAddressHolder from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
<writer thread='1672'/>
[Loaded java.lang.invoke.MethodHandleImpl$1 from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
<writer thread='16600'/>
[Loaded java.net.InetAddress$Cache from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.net.InetAddress$Cache$Type from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
<writer thread='1672'/>
[Loaded java.util.function.Function from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.invoke.MethodHandleImpl$2 from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
<writer thread='16600'/>
[Loaded java.net.InetAddressImplFactory from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
<writer thread='1672'/>
[Loaded java.lang.invoke.MethodHandleImpl$3 from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.ClassValue from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
<writer thread='16600'/>
[Loaded java.net.InetAddressImpl from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
<writer thread='1672'/>
[Loaded java.lang.invoke.MethodHandleImpl$4 from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
<writer thread='16600'/>
[Loaded java.net.Inet6AddressImpl from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
<writer thread='1672'/>
[Loaded java.lang.ClassValue$Entry from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.ClassValue$Identity from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
<writer thread='16600'/>
[Loaded sun.net.spi.nameservice.NameService from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
<writer thread='1672'/>
[Loaded java.lang.ClassValue$Version from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
<writer thread='16600'/>
[Loaded java.net.InetAddress$2 from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
<task_queued compile_id='1' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='4864' iicount='4864' level='3' stamp='0.285' comment='tiered' hot_count='4864'/>
<writer thread='1672'/>
[Loaded java.lang.invoke.MemberName$Factory from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.invoke.MethodHandleStatics from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
<writer thread='14520'/>
Loaded disassembler from D:\Program Files\Java\jdk1.8.0_131\jre\bin\server\hsdis-amd64.dll
Decoding compiled method 0x0000000002a63550:
Code:
[Disassembling for mach=&apos;i386:x86-64&apos;]
[Entry Point]
[Constants]
  # {method} {0x0000000016a30488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;
  #           [sp+0x60]  (sp of caller)
  0x0000000002a636a0: mov    0x8(%rdx),%r10d
  0x0000000002a636a4: shl    $0x3,%r10
  0x0000000002a636a8: cmp    %rax,%r10
  0x0000000002a636ab: jne    0x00000000029a5f60  ;   {runtime_call}
  0x0000000002a636b1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002a636bc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002a636c0: mov    %eax,-0x6000(%rsp)
  0x0000000002a636c7: push   %rbp
  0x0000000002a636c8: sub    $0x50,%rsp
  0x0000000002a636cc: movabs $0x16b633b0,%rcx   ;   {metadata(method data for {method} {0x0000000016a30488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002a636d6: mov    0xdc(%rcx),%esi
  0x0000000002a636dc: add    $0x8,%esi
  0x0000000002a636df: mov    %esi,0xdc(%rcx)
  0x0000000002a636e5: movabs $0x16a30480,%rcx   ;   {metadata({method} {0x0000000016a30488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002a636ef: and    $0x1ff8,%esi
  0x0000000002a636f5: cmp    $0x0,%esi
  0x0000000002a636f8: je     0x0000000002a63717
  0x0000000002a636fe: mov    %rdx,%rcx          ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)

  0x0000000002a63701: mov    %rdx,0x40(%rsp)
  0x0000000002a63706: callq  0x00000000029d18e0  ; OopMap{[64]=Oop off=107}
                                                ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ;   {runtime_call}
  0x0000000002a6370b: add    $0x50,%rsp
  0x0000000002a6370f: pop    %rbp
  0x0000000002a63710: test   %eax,-0x2873616(%rip)        # 0x00000000001f0100
                                                ;   {poll_return}
  0x0000000002a63716: retq   
  0x0000000002a63717: mov    %rcx,0x8(%rsp)
  0x0000000002a6371c: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002a63724: callq  0x0000000002a5f7a0  ; OopMap{rdx=Oop off=137}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ;   {runtime_call}
  0x0000000002a63729: jmp    0x0000000002a636fe
  0x0000000002a6372b: nop
  0x0000000002a6372c: nop
  0x0000000002a6372d: mov    0x2a8(%r15),%rax
  0x0000000002a63734: movabs $0x0,%r10
  0x0000000002a6373e: mov    %r10,0x2a8(%r15)
  0x0000000002a63745: movabs $0x0,%r10
  0x0000000002a6374f: mov    %r10,0x2b0(%r15)
  0x0000000002a63756: add    $0x50,%rsp
  0x0000000002a6375a: pop    %rbp
  0x0000000002a6375b: jmpq   0x00000000029cf0e0  ;   {runtime_call}
[Exception Handler]
[Stub Code]
  0x0000000002a63760: callq  0x00000000029cfc60  ;   {no_reloc}
  0x0000000002a63765: mov    %rsp,-0x28(%rsp)
  0x0000000002a6376a: sub    $0x80,%rsp
  0x0000000002a63771: mov    %rax,0x78(%rsp)
  0x0000000002a63776: mov    %rcx,0x70(%rsp)
  0x0000000002a6377b: mov    %rdx,0x68(%rsp)
  0x0000000002a63780: mov    %rbx,0x60(%rsp)
  0x0000000002a63785: mov    %rbp,0x50(%rsp)
  0x0000000002a6378a: mov    %rsi,0x48(%rsp)
  0x0000000002a6378f: mov    %rdi,0x40(%rsp)
  0x0000000002a63794: mov    %r8,0x38(%rsp)
  0x0000000002a63799: mov    %r9,0x30(%rsp)
  0x0000000002a6379e: mov    %r10,0x28(%rsp)
  0x0000000002a637a3: mov    %r11,0x20(%rsp)
  0x0000000002a637a8: mov    %r12,0x18(%rsp)
  0x0000000002a637ad: mov    %r13,0x10(%rsp)
  0x0000000002a637b2: mov    %r14,0x8(%rsp)
  0x0000000002a637b7: mov    %r15,(%rsp)
  0x0000000002a637bb: movabs $0x623d8e30,%rcx   ;   {external_word}
  0x0000000002a637c5: movabs $0x2a63765,%rdx    ;   {internal_word}
  0x0000000002a637cf: mov    %rsp,%r8
  0x0000000002a637d2: and    $0xfffffffffffffff0,%rsp
  0x0000000002a637d6: callq  0x0000000062093d40  ;   {runtime_call}
  0x0000000002a637db: hlt    
[Deopt Handler Code]
  0x0000000002a637dc: movabs $0x2a637dc,%r10    ;   {section_word}
  0x0000000002a637e6: push   %r10
  0x0000000002a637e8: jmpq   0x00000000029a7600  ;   {runtime_call}
  0x0000000002a637ed: hlt    
  0x0000000002a637ee: hlt    
  0x0000000002a637ef: hlt    
<nmethod compile_id='1' compiler='C1' level='3' entry='0x0000000002a636a0' size='800' address='0x0000000002a63550' relocation_offset='288' insts_offset='336' stub_offset='528' scopes_data_offset='680' scopes_pcs_offset='712' dependencies_offset='792' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='4868' iicount='4868' stamp='0.290'/>
<writer thread='1672'/>
[Loaded java.lang.invoke.MethodHandleStatics$1 from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
<writer thread='16600'/>
[Loaded sun.net.util.IPAddressUtil from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
<writer thread='1672'/>
<task_queued compile_id='2' method='java/lang/String hashCode ()I' bytes='55' count='839' backedge_count='17408' iicount='839' level='3' stamp='0.291' comment='tiered' hot_count='839'/>
<writer thread='16600'/>
[Loaded java.net.Inet4Address from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
<writer thread='14520'/>
Decoding compiled method 0x0000000002a62f90:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000016a34fc0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000002a63100: mov    0x8(%rdx),%r10d
  0x0000000002a63104: shl    $0x3,%r10
  0x0000000002a63108: cmp    %rax,%r10
  0x0000000002a6310b: jne    0x00000000029a5f60  ;   {runtime_call}
  0x0000000002a63111: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002a6311c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002a63120: mov    %eax,-0x6000(%rsp)
  0x0000000002a63127: push   %rbp
  0x0000000002a63128: sub    $0x30,%rsp
  0x0000000002a6312c: movabs $0x16c14530,%rax   ;   {metadata(method data for {method} {0x0000000016a34fc0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a63136: mov    0xdc(%rax),%esi
  0x0000000002a6313c: add    $0x8,%esi
  0x0000000002a6313f: mov    %esi,0xdc(%rax)
  0x0000000002a63145: movabs $0x16a34fb8,%rax   ;   {metadata({method} {0x0000000016a34fc0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a6314f: and    $0x1ff8,%esi
  0x0000000002a63155: cmp    $0x0,%esi
  0x0000000002a63158: je     0x0000000002a63291  ;*aload_0
                                                ; - java.lang.String::hashCode@0 (line 1466)

  0x0000000002a6315e: mov    0x10(%rdx),%eax    ;*getfield hash
                                                ; - java.lang.String::hashCode@1 (line 1466)

  0x0000000002a63161: cmp    $0x0,%eax
  0x0000000002a63164: movabs $0x16c14530,%rsi   ;   {metadata(method data for {method} {0x0000000016a34fc0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a6316e: movabs $0x108,%rdi
  0x0000000002a63178: jne    0x0000000002a63188
  0x0000000002a6317e: movabs $0x118,%rdi
  0x0000000002a63188: mov    (%rsi,%rdi,1),%rbx
  0x0000000002a6318c: lea    0x1(%rbx),%rbx
  0x0000000002a63190: mov    %rbx,(%rsi,%rdi,1)
  0x0000000002a63194: jne    0x0000000002a63285  ;*ifne
                                                ; - java.lang.String::hashCode@6 (line 1467)

  0x0000000002a6319a: mov    0xc(%rdx),%esi     ;*getfield value
                                                ; - java.lang.String::hashCode@10 (line 1467)

  0x0000000002a6319d: mov    0xc(%rsi),%edi     ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1467)
                                                ; implicit exception: dispatches to 0x0000000002a632a8
  0x0000000002a631a0: cmp    $0x0,%edi
  0x0000000002a631a3: movabs $0x16c14530,%rbx   ;   {metadata(method data for {method} {0x0000000016a34fc0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a631ad: movabs $0x128,%rcx
  0x0000000002a631b7: jle    0x0000000002a631c7
  0x0000000002a631bd: movabs $0x138,%rcx
  0x0000000002a631c7: mov    (%rbx,%rcx,1),%r8
  0x0000000002a631cb: lea    0x1(%r8),%r8
  0x0000000002a631cf: mov    %r8,(%rbx,%rcx,1)
  0x0000000002a631d3: jle    0x0000000002a63285  ;*ifle
                                                ; - java.lang.String::hashCode@14 (line 1467)

  0x0000000002a631d9: mov    $0x0,%ebx
  0x0000000002a631de: jmpq   0x0000000002a6324a  ;*iload_3
                                                ; - java.lang.String::hashCode@24 (line 1470)

  0x0000000002a631e3: nopl   0x0(%rax,%rax,1)
  0x0000000002a631e8: movslq %ebx,%rcx
  0x0000000002a631eb: movzwl 0x10(%rsi,%rcx,2),%ecx  ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)

  0x0000000002a631f0: mov    %rax,%r8
  0x0000000002a631f3: shl    $0x5,%eax
  0x0000000002a631f6: sub    %r8d,%eax
  0x0000000002a631f9: add    %ecx,%eax
  0x0000000002a631fb: inc    %ebx
  0x0000000002a631fd: movabs $0x16c14530,%rcx   ;   {metadata(method data for {method} {0x0000000016a34fc0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a63207: mov    0xe0(%rcx),%r8d
  0x0000000002a6320e: add    $0x8,%r8d
  0x0000000002a63212: mov    %r8d,0xe0(%rcx)
  0x0000000002a63219: movabs $0x16a34fb8,%rcx   ;   {metadata({method} {0x0000000016a34fc0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a63223: and    $0xfff8,%r8d
  0x0000000002a6322a: cmp    $0x0,%r8d
  0x0000000002a6322e: je     0x0000000002a632ad  ; OopMap{rsi=Oop rdx=Oop off=308}
                                                ;*goto
                                                ; - java.lang.String::hashCode@45 (line 1470)

  0x0000000002a63234: test   %eax,-0x287313a(%rip)        # 0x00000000001f0100
                                                ;   {poll}
  0x0000000002a6323a: movabs $0x16c14530,%rcx   ;   {metadata(method data for {method} {0x0000000016a34fc0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a63244: incl   0x168(%rcx)        ;*goto
                                                ; - java.lang.String::hashCode@45 (line 1470)

  0x0000000002a6324a: cmp    %edi,%ebx
  0x0000000002a6324c: movabs $0x16c14530,%rcx   ;   {metadata(method data for {method} {0x0000000016a34fc0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a63256: movabs $0x148,%r8
  0x0000000002a63260: jge    0x0000000002a63270
  0x0000000002a63266: movabs $0x158,%r8
  0x0000000002a63270: mov    (%rcx,%r8,1),%r9
  0x0000000002a63274: lea    0x1(%r9),%r9
  0x0000000002a63278: mov    %r9,(%rcx,%r8,1)
  0x0000000002a6327c: jl     0x0000000002a631e8  ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1470)

  0x0000000002a63282: mov    %eax,0x10(%rdx)    ;*putfield hash
                                                ; - java.lang.String::hashCode@50 (line 1473)

  0x0000000002a63285: add    $0x30,%rsp
  0x0000000002a63289: pop    %rbp
  0x0000000002a6328a: test   %eax,-0x2873190(%rip)        # 0x00000000001f0100
                                                ;   {poll_return}
  0x0000000002a63290: retq   
  0x0000000002a63291: mov    %rax,0x8(%rsp)
  0x0000000002a63296: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002a6329e: callq  0x0000000002a5f7a0  ; OopMap{rdx=Oop off=419}
                                                ;*synchronization entry
                                                ; - java.lang.String::hashCode@-1 (line 1466)
                                                ;   {runtime_call}
  0x0000000002a632a3: jmpq   0x0000000002a6315e
  0x0000000002a632a8: callq  0x00000000029d1b80  ; OopMap{rdx=Oop rsi=Oop off=429}
                                                ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1467)
                                                ;   {runtime_call}
  0x0000000002a632ad: mov    %rcx,0x8(%rsp)
  0x0000000002a632b2: movq   $0x2d,(%rsp)
  0x0000000002a632ba: callq  0x0000000002a5f7a0  ; OopMap{rsi=Oop rdx=Oop off=447}
                                                ;*goto
                                                ; - java.lang.String::hashCode@45 (line 1470)
                                                ;   {runtime_call}
  0x0000000002a632bf: jmpq   0x0000000002a63234
  0x0000000002a632c4: nop
  0x0000000002a632c5: nop
  0x0000000002a632c6: mov    0x2a8(%r15),%rax
  0x0000000002a632cd: movabs $0x0,%r10
  0x0000000002a632d7: mov    %r10,0x2a8(%r15)
  0x0000000002a632de: movabs $0x0,%r10
  0x0000000002a632e8: mov    %r10,0x2b0(%r15)
  0x0000000002a632ef: add    $0x30,%rsp
  0x0000000002a632f3: pop    %rbp
  0x0000000002a632f4: jmpq   0x00000000029cf0e0  ;   {runtime_call}
  0x0000000002a632f9: hlt    
  0x0000000002a632fa: hlt    
  0x0000000002a632fb: hlt    
  0x0000000002a632fc: hlt    
  0x0000000002a632fd: hlt    
  0x0000000002a632fe: hlt    
  0x0000000002a632ff: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002a63300: callq  0x00000000029cfc60  ;   {no_reloc}
  0x0000000002a63305: mov    %rsp,-0x28(%rsp)
  0x0000000002a6330a: sub    $0x80,%rsp
  0x0000000002a63311: mov    %rax,0x78(%rsp)
  0x0000000002a63316: mov    %rcx,0x70(%rsp)
  0x0000000002a6331b: mov    %rdx,0x68(%rsp)
  0x0000000002a63320: mov    %rbx,0x60(%rsp)
  0x0000000002a63325: mov    %rbp,0x50(%rsp)
  0x0000000002a6332a: mov    %rsi,0x48(%rsp)
  0x0000000002a6332f: mov    %rdi,0x40(%rsp)
  0x0000000002a63334: mov    %r8,0x38(%rsp)
  0x0000000002a63339: mov    %r9,0x30(%rsp)
  0x0000000002a6333e: mov    %r10,0x28(%rsp)
  0x0000000002a63343: mov    %r11,0x20(%rsp)
  0x0000000002a63348: mov    %r12,0x18(%rsp)
  0x0000000002a6334d: mov    %r13,0x10(%rsp)
  0x0000000002a63352: mov    %r14,0x8(%rsp)
  0x0000000002a63357: mov    %r15,(%rsp)
  0x0000000002a6335b: movabs $0x623d8e30,%rcx   ;   {external_word}
  0x0000000002a63365: movabs $0x2a63305,%rdx    ;   {internal_word}
  0x0000000002a6336f: mov    %rsp,%r8
  0x0000000002a63372: and    $0xfffffffffffffff0,%rsp
  0x0000000002a63376: callq  0x0000000062093d40  ;   {runtime_call}
  0x0000000002a6337b: hlt    
[Deopt Handler Code]
  0x0000000002a6337c: movabs $0x2a6337c,%r10    ;   {section_word}
  0x0000000002a63386: push   %r10
  0x0000000002a63388: jmpq   0x00000000029a7600  ;   {runtime_call}
  0x0000000002a6338d: hlt    
  0x0000000002a6338e: hlt    
  0x0000000002a6338f: hlt    
<nmethod compile_id='2' compiler='C1' level='3' entry='0x0000000002a63100' size='1448' address='0x0000000002a62f90' relocation_offset='288' insts_offset='368' stub_offset='880' scopes_data_offset='1032' scopes_pcs_offset='1152' dependencies_offset='1424' nul_chk_table_offset='1432' method='java/lang/String hashCode ()I' bytes='55' count='844' backedge_count='17683' iicount='844' stamp='0.299'/>
<blob name='MethodHandlesAdapterBlob' size='32000'>
<sect index='1' size='32000' free='31632'/>
</blob>
<writer thread='16600'/>
[Loaded java.net.SocksConsts from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
<writer thread='1672'/>
[Loaded sun.misc.PostVMInitHook from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.usagetracker.UsageTrackerClient from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.concurrent.atomic.AtomicBoolean from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
<writer thread='16600'/>
[Loaded java.net.SocketOptions from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.net.SocketImpl from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.net.AbstractPlainSocketImpl from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
<writer thread='1672'/>
[Loaded sun.usagetracker.UsageTrackerClient$1 from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
<writer thread='16600'/>
[Loaded java.net.PlainSocketImpl from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.net.SocksSocketImpl from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
<writer thread='1672'/>
[Loaded sun.usagetracker.UsageTrackerClient$4 from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
<writer thread='16600'/>
[Loaded java.net.AbstractPlainSocketImpl$1 from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
<writer thread='1672'/>
[Loaded sun.usagetracker.UsageTrackerClient$2 from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.ProcessEnvironment from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.ProcessEnvironment$NameComparator from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.ProcessEnvironment$EntryComparator from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.Collections$UnmodifiableMap from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
<writer thread='16600'/>
[Loaded java.net.PlainSocketImpl$1 from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
<writer thread='1672'/>
Decoding compiled method 0x0000000002a623d0:
Code:
[Entry Point]
  # {method} {0x0000000016a496c0} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    r8        = int
  # parm2:    r9:r9     = &apos;java/lang/Object&apos;
  # parm3:    rdi       = int
  # parm4:    rsi       = int
  #           [sp+0x90]  (sp of caller)
  0x0000000002a62540: mov    0x8(%rdx),%r10d
  0x0000000002a62544: shl    $0x3,%r10
  0x0000000002a62548: cmp    %r10,%rax
  0x0000000002a6254b: je     0x0000000002a62558
  0x0000000002a62551: jmpq   0x00000000029a5f60  ;   {runtime_call}
  0x0000000002a62556: xchg   %ax,%ax
[Verified Entry Point]
  0x0000000002a62558: mov    %eax,-0x6000(%rsp)
  0x0000000002a6255f: push   %rbp
  0x0000000002a62560: mov    %rsp,%rbp
  0x0000000002a62563: sub    $0x80,%rsp
  0x0000000002a6256a: mov    %rsi,0x30(%rsp)
  0x0000000002a6256f: mov    %rdi,0x28(%rsp)
  0x0000000002a62574: mov    %r9,0x48(%rsp)
  0x0000000002a62579: cmp    $0x0,%r9
  0x0000000002a6257d: lea    0x48(%rsp),%rax
  0x0000000002a62582: cmove  0x48(%rsp),%rax
  0x0000000002a62588: mov    %rax,0x20(%rsp)
  0x0000000002a6258d: mov    %r8,%r9
  0x0000000002a62590: mov    %rdx,0x38(%rsp)
  0x0000000002a62595: cmp    $0x0,%rdx
  0x0000000002a62599: lea    0x38(%rsp),%r8
  0x0000000002a6259e: cmove  0x38(%rsp),%r8
  0x0000000002a625a4: movabs $0xd6500c78,%r14   ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/System&apos;)}
  0x0000000002a625ae: mov    %r14,0x68(%rsp)
  0x0000000002a625b3: lea    0x68(%rsp),%r14
  0x0000000002a625b8: mov    %r14,%rdx          ; OopMap{[72]=Oop [56]=Oop [104]=Oop off=123}
  0x0000000002a625bb: movabs $0x2a625bb,%r10    ;   {section_word}
  0x0000000002a625c5: mov    %r10,0x1e0(%r15)
  0x0000000002a625cc: mov    %rsp,0x1d8(%r15)
  0x0000000002a625d3: cmpb   $0x0,0x5fb4b1e8(%rip)        # 0x00000000625ad7c2
                                                ;   {external_word}
  0x0000000002a625da: je     0x0000000002a62622
  0x0000000002a625e0: push   %rdx
  0x0000000002a625e1: push   %r8
  0x0000000002a625e3: push   %r9
  0x0000000002a625e5: movabs $0x16a496b8,%rdx   ;   {metadata({method} {0x0000000016a496c0} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;)}
  0x0000000002a625ef: mov    %r15,%rcx
  0x0000000002a625f2: sub    $0x20,%rsp
  0x0000000002a625f6: test   $0xf,%esp
  0x0000000002a625fc: je     0x0000000002a62614
  0x0000000002a62602: sub    $0x8,%rsp
  0x0000000002a62606: callq  0x0000000061fccdd0  ;   {runtime_call}
  0x0000000002a6260b: add    $0x8,%rsp
  0x0000000002a6260f: jmpq   0x0000000002a62619
  0x0000000002a62614: callq  0x0000000061fccdd0  ;   {runtime_call}
  0x0000000002a62619: add    $0x20,%rsp
  0x0000000002a6261d: pop    %r9
  0x0000000002a6261f: pop    %r8
  0x0000000002a62621: pop    %rdx
  0x0000000002a62622: lea    0x1f8(%r15),%rcx
  0x0000000002a62629: movl   $0x4,0x270(%r15)
  0x0000000002a62634: callq  0x0000000061d7098a  ;   {runtime_call}
  0x0000000002a62639: vzeroupper 
  0x0000000002a6263c: movl   $0x5,0x270(%r15)
  0x0000000002a62647: mov    %r15d,%ecx
  0x0000000002a6264a: shr    $0x4,%ecx
  0x0000000002a6264d: and    $0xffc,%ecx
  0x0000000002a62653: movabs $0x510000,%r10     ;   {external_word}
  0x0000000002a6265d: mov    %ecx,(%r10,%rcx,1)
  0x0000000002a62661: cmpl   $0x0,0x5fb4bd35(%rip)        # 0x00000000625ae3a0
                                                ;   {external_word}
  0x0000000002a6266b: jne    0x0000000002a6267f
  0x0000000002a62671: cmpl   $0x0,0x30(%r15)
  0x0000000002a62679: je     0x0000000002a62698
  0x0000000002a6267f: mov    %r15,%rcx
  0x0000000002a62682: mov    %rsp,%r12
  0x0000000002a62685: sub    $0x20,%rsp
  0x0000000002a62689: and    $0xfffffffffffffff0,%rsp
  0x0000000002a6268d: callq  0x0000000061fe3f40  ;   {runtime_call}
  0x0000000002a62692: mov    %r12,%rsp
  0x0000000002a62695: xor    %r12,%r12
  0x0000000002a62698: movl   $0x8,0x270(%r15)
  0x0000000002a626a3: cmpl   $0x1,0x29c(%r15)
  0x0000000002a626ae: je     0x0000000002a6273e
  0x0000000002a626b4: cmpb   $0x0,0x5fb4b107(%rip)        # 0x00000000625ad7c2
                                                ;   {external_word}
  0x0000000002a626bb: je     0x0000000002a626f9
  0x0000000002a626c1: movabs $0x16a496b8,%rdx   ;   {metadata({method} {0x0000000016a496c0} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;)}
  0x0000000002a626cb: 
<writer thread='16600'/>
[Loaded sun.misc.FloatingDecimal from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
<writer thread='1672'/>
mov    %r15,%rcx
  0x0000000002a626ce: sub    $0x20,%rsp
  0x0000000002a626d2: test   $0xf,%esp
  0x0000000002a626d8: je     0x0000000002a626f0
  0x0000000002a626de: sub    $0x8,%rsp
  0x0000000002a626e2: callq  0x0000000061fccdd0  ;   {runtime_call}
  0x0000000002a626e7: add    $0x8,%rsp
  0x0000000002a626eb: jmpq   0x0000000002a626f5
  0x0000000002a626f0: callq  0x0000000061fccdd0  ;   {runtime_call}
  0x0000000002a626f5: add    $0x20,%rsp
  0x0000000002a626f9: movabs $0x0,%r10
  0x0000000002a62703: mov    %r10,0x1d8(%r15)
  0x0000000002a6270a: movabs $0x0,%r10
  0x0000000002a62714: mov    %r10,0x1e0(%r15)
  0x0000000002a6271b: mov    0x38(%r15),%rcx
  0x0000000002a6271f: movl   $0x0,0x100(%rcx)
  0x0000000002a62729: leaveq 
  0x0000000002a6272a: cmpq   $0x0,0x8(%r15)
  0x0000000002a62732: jne    0x0000000002a62739
  0x0000000002a62738: retq   
  0x0000000002a62739: jmpq   Stub::forward exception  ;   {runtime_call}
  0x0000000002a6273e: mov    %rsp,%r12
  0x0000000002a62741: sub    $0x20,%rsp
  0x0000000002a62745: and    $0xfffffffffffffff0,%rsp
  0x0000000002a62749: callq  0x0000000061fccdf0  ;   {runtime_call}
  0x0000000002a6274e: mov    %r12,%rsp
  0x0000000002a62751: xor    %r12,%r12
  0x0000000002a62754: jmpq   0x0000000002a626b4
  0x0000000002a62759: hlt    
  0x0000000002a6275a: hlt    
  0x0000000002a6275b: hlt    
  0x0000000002a6275c: hlt    
  0x0000000002a6275d: hlt    
  0x0000000002a6275e: hlt    
  0x0000000002a6275f: hlt    
<nmethod compile_id='3' compile_kind='c2n' level='0' entry='0x0000000002a62540' size='912' address='0x0000000002a623d0' relocation_offset='288' consts_offset='912' insts_offset='368' method='java/lang/System arraycopy (Ljava/lang/Object;ILjava/lang/Object;II)V' bytes='0' count='2944' iicount='2944' stamp='0.307'/>
<task_queued compile_id='4' method='java/lang/String indexOf (II)I' bytes='70' count='581' backedge_count='21504' iicount='581' level='3' stamp='0.307' comment='tiered' hot_count='581'/>
<task_queued compile_id='5' method='java/lang/String &lt;init&gt; ([CII)V' bytes='82' count='896' iicount='896' level='3' stamp='0.308' comment='tiered' hot_count='896'/>
<task_queued compile_id='6' method='java/lang/String substring (II)Ljava/lang/String;' bytes='79' count='256' iicount='256' level='3' stamp='0.308' comment='tiered' hot_count='256'/>
<writer thread='16600'/>
[Loaded sun.misc.FloatingDecimal$BinaryToASCIIConverter from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
<writer thread='1672'/>
<task_queued compile_id='7' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='1024' iicount='1024' level='3' stamp='0.308' comment='tiered' hot_count='1024'/>
<writer thread='16600'/>
[Loaded sun.misc.FloatingDecimal$ExceptionalBinaryToASCIIBuffer from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
<writer thread='1672'/>
<task_queued compile_id='8' method='java/lang/Math min (II)I' bytes='11' count='2048' iicount='2048' level='3' stamp='0.308' comment='tiered' hot_count='2048'/>
<writer thread='16600'/>
[Loaded sun.misc.FloatingDecimal$BinaryToASCIIBuffer from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
<writer thread='14520'/>
Decoding compiled method 0x0000000002a6cb90:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000016a35140} &apos;indexOf&apos; &apos;(I
<writer thread='1672'/>
[Loaded java.lang.ProcessEnvironment$CheckedEntrySet from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
<writer thread='14520'/>
I)I&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8        = int
  # parm1:    r9        = int
  #           [sp+0x40]  (sp of caller)
  0x0000000002a6cd20: mov    0x8(%rdx),%r10d
  0x0000000002a6cd24: shl    $0x3,%r10
  0x0000000002a6cd28: cmp    %rax,%r10
  0x0000000002a6cd2b: jne    0x00000000029a5f60  ;   {runtime_call}
  0x0000000002a6cd31: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002a6cd3c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002a6cd40: mov    %eax,-0x6000(%rsp)
  0x0000000002a6cd47: push   %rbp
  0x0000000002a6cd48: sub    $0x30,%rsp
  0x0000000002a6cd4c: movabs $0x16c1e2b0,%rax   ;   {metadata(method data for {method} {0x0000000016a35140} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a6cd56: mov    0xdc(%rax),%esi
  0x0000000002a6cd5c: add    $0x8,%esi
  0x0000000002a6cd5f: mov    %esi,0xdc(%rax)
  0x0000000002a6cd65: movabs $0x16a35138,%rax   ;   {metadata({method} {0x0000000016a35140} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a6cd6f: and    $0x1ff8,%esi
  0x0000000002a6cd75: cmp    $0x0,%esi
  0x0000000002a6cd78: je     0x0000000002a6cf89  ;*aload_0
                                                ; - java.lang.String::indexOf@0 (line 1546)

  0x0000000002a6cd7e: mov    0xc(%rdx),%eax     ;*getfield value
                                                ; - java.lang.String::indexOf@1 (line 1546)

  0x0000000002a6cd81: mov    0xc(%rax),%esi     ;*arraylength
                                                ; - java.lang.String::indexOf@4 (line 1546)
                                                ; implicit exception: dispatches to 0x0000000002a6cfa0
  0x0000000002a6cd84: cmp    $0x0,%r9d
  0x0000000002a6cd88: movabs $0x16c1e2b0,%rdi   ;   {metadata(method data for {method} {0x0000000016a35140} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a6cd92: movabs $0x108,%rbx
  0x0000000002a6cd9c: jge    0x0000000002a6cdac
  0x0000000002a6cda2: movabs $0x118,%rbx
  0x0000000002a6cdac: mov    (%rdi,%rbx,1),%rcx
  0x0000000002a6cdb0: lea    0x1(%rcx),%rcx
  0x0000000002a6cdb4: mov    %rcx,(%rdi,%rbx,1)
  0x0000000002a6cdb8: jge    0x0000000002a6cdda  ;*ifge
                                                ; - java.lang.String::indexOf@7 (line 1547)

  0x0000000002a6cdbe: movabs $0x16c1e2b0,%r9    ;   {metadata(method data for {method} {0x0000000016a35140} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a6cdc8: incl   0x128(%r9)
  0x0000000002a6cdcf: mov    $0x0,%r9d
  0x0000000002a6cdd5: jmpq   0x0000000002a6ce13  ;*goto
                                                ; - java.lang.String::indexOf@12 (line 1548)

  0x0000000002a6cdda: cmp    %esi,%r9d
  0x0000000002a6cddd: movabs $0x16c1e2b0,%rdi   ;   {metadata(method data for {method} {0x0000000016a35140} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a6cde7: movabs $0x140,%rbx
  0x0000000002a6cdf1: jl     0x0000000002a6ce01
  0x0000000002a6cdf7: movabs $0x150,%rbx
  0x0000000002a6ce01: mov    (%rdi,%rbx,1),%rcx
  0x0000000002a6ce05: lea    0x1(%rcx),%rcx
  0x0000000002a6ce09: mov    %rcx,(%rdi,%rbx,1)
  0x0000000002a6ce0d: jge    0x0000000002a6cf78  ;*if_icmplt
                                                ; - java.lang.String::indexOf@17 (line 1549)

  0x0000000002a6ce13: cmp    $0x10000,%r8d
  0x0000000002a6ce1a: movabs $0x16c1e2b0,%rdi   ;   {metadata(method data for {method} {0x0000000016a35140} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a6ce24: movabs $0x160,%rbx
  0x0000000002a6ce2e: jge    0x0000000002a6ce3e
  0x0000000002a6ce34: movabs $0x170,%rbx
  0x0000000002a6ce3e: mov    (%rdi,%rbx,1),%rcx
  0x0000000002a6ce42: lea    0x1(%rcx),%rcx
  0x0000000002a6ce46: mov    %rcx,(%rdi,%rbx,1)
  0x0000000002a6ce4a: jge    0x0000000002a6cf4c
  0x0000000002a6ce50: jmpq   0x0000000002a6ceee  ;*if_icmpge
                                                ; - java.lang.String::indexOf@25 (line 1554)

  0x0000000002a6ce55: data16 xchg %ax,%ax
  0x0000000002a6ce58: movslq %r9d,%rdx
  0x0000000002a6ce5b: cmp    0xc(%rax),%r9d
  0x0000000002a6ce5f: jae    0x0000000002a6cfa5
  0x0000000002a6ce65: movzwl 0x10(%rax,%rdx,2),%edx  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x0000000002a6ce6a: cmp    %r8d,%edx
  0x0000000002a6ce6d: movabs $0x16c1e2b0,%rdx   ;   {metadata(method data for {method} {0x0000000016a35140} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a6ce77: movabs $0x1a0,%rdi
  0x0000000002a6ce81: jne    0x0000000002a6ce91
  0x0000000002a6ce87: movabs $0x1b0,%rdi
  0x0000000002a6ce91: mov    (%rdx,%rdi,1),%rbx
  0x0000000002a6ce95: lea    0x1(%rbx),%rbx
  0x0000000002a6ce99: mov    %rbx,(%rdx,%rdi,1)
  0x0000000002a6ce9d: je     0x0000000002a6cf2c  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x0000000002a6cea3: inc    %r9d
  0x0000000002a6cea6: movabs $0x16c1e2b0,%rdx   ;   {metadata(method data for {method} {0x0000000016a35140} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a6ceb0: mov    0xe0(%rdx),%edi
  0x0000000002a6ceb6: add    $0x8,%edi
  0x0000000002a6ceb9: mov    %edi,0xe0(%rdx)
  0x0000000002a6cebf: movabs $0x16a35138,%rdx   ;   {metadata({method} {0x0000000016a35140} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a6cec9: and    $0xfff8,%edi
  0x0000000002a6cecf: cmp    $0x0,%edi
  0x0000000002a6ced2: je     0x0000000002a6cfae  ; OopMap{rax=Oop off=440}
                                                ;*goto
                                                ; - java.lang.String::indexOf@58 (line 1558)

  0x0000000002a6ced8: test   %eax,-0x287cdde(%rip)        # 0x00000000001f0100
                                                ;   {poll}
  0x0000000002a6cede: movabs $0x16c1e2b0,%rdx   ;   {metadata(method data for {method} {0x0000000016a35140} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a6cee8: incl   0x1c0(%rdx)        ;*goto
                                                ; - java.lang.String::indexOf@58 (line 1558)

  0x0000000002a6ceee: cmp    %esi,%r9d
  0x0000000002a6cef1: movabs $0x16c1e2b0,%rdx   ;   {metadata(method data for {method} {0x0000000016a35140} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a6cefb: movabs $0x180,%rdi
  0x0000000002a6cf05: jge    0x0000000002a6cf15
  0x0000000002a6cf0b: movabs $0x190,%rdi
  0x0000000002a6cf15: mov    (%rdx,%rdi,1),%rbx
  0x0000000002a6cf19: lea    0x1(%rbx),%rbx
  0x0000000002a6cf1d: mov    %rbx,(%rdx,%rdi,1)
  0x0000000002a6cf21: jge    0x0000000002a6cf3b
  0x0000000002a6cf27: jmpq   0x0000000002a6ce58  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x0000000002a6cf2c: mov    %r9,%rax
  0x0000000002a6cf2f: add    $0x30,%rsp
  0x0000000002a6cf33: pop    %rbp
  0x0000000002a6cf34: test   %eax,-0x287ce3a(%rip)        # 0x00000000001f0100
                                                ;   {poll_return}
  0x0000000002a6cf3a: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@54 (line 1560)

  0x0000000002a6cf3b: mov    $0xffffffff,%eax
  0x0000000002a6cf40: add    $0x30,%rsp
  0x0000000002a6cf44: pop    %rbp
  0x0000000002a6cf45: test   %eax,-0x287ce4b(%rip)        # 0x00000000001f0100
                                                ;   {poll_return}
  0x0000000002a6cf4b: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@62 (line 1563)

  0x0000000002a6cf4c: mov    %rdx,%rsi
  0x0000000002a6cf4f: movabs $0x16c1e2b0,%rdi   ;   {metadata(method data for {method} {0x0000000016a35140} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a6cf59: addq   $0x1,0x1d8(%rdi)
  0x0000000002a6cf61: nop
  0x0000000002a6cf62: nop
  0x0000000002a6cf63: nop
  0x0000000002a6cf64: nop
  0x0000000002a6cf65: nop
  0x0000000002a6cf66: nop
  0x0000000002a6cf67: callq  0x00000000029a61a0  ; OopMap{off=588}
                                                ;*invokespecial indexOfSupplementary
                                                ; - java.lang.String::indexOf@66 (line 1565)
                                                ;   {optimized virtual_call}
  0x0000000002a6cf6c: add    $0x30,%rsp
  0x0000000002a6cf70: pop    %rbp
  0x0000000002a6cf71: test   %eax,-0x287ce77(%rip)        # 0x00000000001f0100
                                                ;   {poll_return}
  0x0000000002a6cf77: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@69 (line 1565)

  0x0000000002a6cf78: mov    $0xffffffff,%eax
  0x0000000002a6cf7d: add    $0x30,%rsp
  0x0000000002a6cf81: pop    %rbp
  0x0000000002a6cf82: test   %eax,-0x287ce88(%rip)        # 0x00000000001f0100
                                                ;   {poll_return}
  0x0000000002a6cf88: retq   
  0x0000000002a6cf89: mov    %rax,0x8(%rsp)
  0x0000000002a6cf8e: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002a6cf96: callq  0x0000000002a5f7a0  ; OopMap{rdx=Oop off=635}
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1546)
                                                ;   {runtime_call}
  0x0000000002a6cf9b: jmpq   0x0000000002a6cd7e
  0x0000000002a6cfa0: callq  0x00000000029d1b80  ; OopMap{rdx=Oop rax=Oop off=645}
                                                ;*arraylength
                                                ; - java.lang.String::indexOf@4 (line 1546)
                                                ;   {runtime_call}
  0x0000000002a6cfa5: mov    %r9,(%rsp)
  0x0000000002a6cfa9: callq  0x00000000029cec40  ; OopMap{rax=Oop off=654}
                                                ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)
                                                ;   {runtime_call}
  0x0000000002a6cfae: mov    %rdx,0x8(%rsp)
  0x0000000002a6cfb3: movq   $0x3a,(%rsp)
  0x0000000002a6cfbb: callq  0x0000000002a5f7a0  ; OopMap{rax=Oop off=672}
                                                ;*goto
                                                ; - java.lang.String::indexOf@58 (line 1558)
                                                ;   {runtime_call}
  0x0000000002a6cfc0: jmpq   0x0000000002a6ced8
  0x0000000002a6cfc5: nop
  0x0000000002a6cfc6: nop
  0x0000000002a6cfc7: mov    0x2a8(%r15),%rax
  0x0000000002a6cfce: movabs $0x0,%r10
  0x0000000002a6cfd8: mov    %r10,0x2a8(%r15)
  0x0000000002a6cfdf: movabs $0x0,%r10
  0x0000000002a6cfe9: mov    %r10,0x2b0(%r15)
  0x0000000002a6cff0: add    $0x30,%rsp
  0x0000000002a6cff4: pop    %rbp
  0x0000000002a6cff5: jmpq   0x00000000029cf0e0  ;   {runtime_call}
  0x0000000002a6cffa: hlt    
  0x0000000002a6cffb: hlt    
  0x0000000002a6cffc: hlt    
  0x0000000002a6cffd: hlt    
  0x0000000002a6cffe: hlt    
  0x0000000002a6cfff: hlt    
[Stub Code]
  0x0000000002a6d000: nop                       ;   {no_reloc}
  0x0000000002a6d001: nop
  0x0000000002a6d002: nop
  0x0000000002a6d003: nop
  0x0000000002a6d004: nop
  0x0000000002a6d005: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002a6d00f: jmpq   0x0000000002a6d00f  ;   {runtime_call}
[Exception Handler]
  0x0000000002a6d014: callq  0x00000000029cfc60  ;   {runtime_call}
  0x0000000002a6d019: mov    %rsp,-0x28(%rsp)
  0x0000000002a6d01e: sub    $0x80,%rsp
  0x0000000002a6d025: mov    %rax,0x78(%rsp)
  0x0000000002a6d02a: mov    %rcx,0x70(%rsp)
  0x0000000002a6d02f: mov    %rdx,0x68(%rsp)
  0x0000000002a6d034: mov    %rbx,0x60(%rsp)
  0x0000000002a6d039: mov    %rbp,0x50(%rsp)
  0x0000000002a6d03e: mov    %rsi,0x48(%rsp)
  0x0000000002a6d043: mov    %rdi,0x40(%rsp)
  0x0000000002a6d048: mov    %r8,0x38(%rsp)
  0x0000000002a6d04d: mov    %r9,0x30(%rsp)
  0x0000000002a6d052: mov    %r10,0x28(%rsp)
  0x0000000002a6d057: mov    %r11,0x20(%rsp)
  0x0000000002a6d05c: mov    %r12,0x18(%rsp)
  0x0000000002a6d061: mov    %r13,0x10(%rsp)
  0x0000000002a6d066: mov    %r14,0x8(%rsp)
  0x0000000002a6d06b: mov    %r15,(%rsp)
  0x0000000002a6d06f: movabs $0x623d8e30,%rcx   ;   {external_word}
  0x0000000002a6d079: movabs $0x2a6d019,%rdx    ;   {internal_word}
  0x0000000002a6d083: mov    %rsp,%r8
  0x0000000002a6d086: and    $0xfffffffffffffff0,%rsp
  0x0000000002a6d08a: callq  0x0000000062093d40  ;   {runtime_call}
  0x0000000002a6d08f: hlt    
[Deopt Handler Code]
  0x0000000002a6d090: movabs $0x2a6d090,%r10    ;   {section_word}
  0x0000000002a6d09a: push   %r10
  0x0000000002a6d09c: jmpq   0x00000000029a7600  ;   {runtime_call}
  0x0000000002a6d0a1: hlt    
  0x0000000002a6d0a2: hlt    
  0x0000000002a6d0a3: hlt    
  0x0000000002a6d0a4: hlt    
  0x0000000002a6d0a5: hlt    
  0x0000000002a6d0a6: hlt    
  0x0000000002a6d0a7: hlt    
<nmethod compile_id='4' compiler='C1' level='3' entry='0x0000000002a6cd20' size='1848' address='0x0000000002a6cb90' relocation_offset='288' insts_offset='400' stub_offset='1136' scopes_data_offset='1312' scopes_pcs_offset='1472' dependencies_offset='1824' nul_chk_table_offset='1832' method='java/lang/String indexOf (II)I' bytes='70' count='788' backedge_count='27533' iicount='788' stamp='0.317'/>
<writer thread='16600'/>
[Loaded sun.misc.FloatingDecimal$1 from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.misc.FloatingDecimal$ASCIIToBinaryConverter from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.misc.FloatingDecimal$PreparedASCIIToBinaryBuffer from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
<writer thread='14520'/>
Decoding compiled method 0x0000000002a6d310:
Code:
<writer thread='1672'/>
[Loaded java.util.HashMap$EntrySet from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
<writer thread='14520'/>
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000016b48fc8} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Array
<writer thread='16600'/>
[Loaded sun.misc.FloatingDecimal$ASCIIToBinaryBuffer from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
<writer thread='14520'/>
s&apos;
  # parm0:    rdx:rdx   = &apos;[C&apos;
  # parm1:    r8        = int
  # parm2:    r9        = int
  #           [sp+0xb0]  (sp of caller)
  0x0000000002a6d520: mov    %eax,-0x6000(%rsp)
  0x0000000002a6d527: push   %rbp
  0x0000000002a6d528: sub    $0xa0,%rsp
  0x0000000002a6d52f: mov    %rdx,%r11
  0x0000000002a6d532: movabs $0x16c33200,%rbx   ;   {metadata(method data for {method} {0x0000000016b48fc8} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002a6d53c: mov    0xdc(%rbx),%edx
  0x0000000002a6d542: add    $0x8,%edx
  0x0000000002a6d545: mov    %edx,0xdc(%rbx)
  0x0000000002a6d54b: movabs $0x16b48fc0,%rbx   ;   {metadata({method} {0x0000000016b48fc8} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002a6d555: and    $0x1ff8,%edx
  0x0000000002a6d55b: cmp    $0x0,%edx
  0x0000000002a6d55e: je     0x0000000002a6ddc1  ;*iload_2
                                                ; - java.util.Arrays::copyOfRange@0 (line 3661)

  0x0000000002a6d564: mov    %r9,%r13
  0x0000000002a6d567: sub    %r8d,%r13d
  0x0000000002a6d56a: cmp    $0x0,%r13d
  0x0000000002a6d56e: movabs $0x16c33200,%rbx   ;   {metadata(method data for {method} {0x0000000016b48fc8} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002a6d578: movabs $0x108,%rdx
  0x0000000002a6d582: jge    0x0000000002a6d592
  0x0000000002a6d588: movabs $0x118,%rdx
  0x0000000002a6d592: mov    (%rbx,%rdx,1),%rsi
  0x0000000002a6d596: lea    0x1(%rsi),%rsi
  0x0000000002a6d59a: mov    %rsi,(%rbx,%rdx,1)
  0x0000000002a6d59e: jl     0x0000000002a6d766  ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)

  0x0000000002a6d5a4: mov    %r13,%rbx
  0x0000000002a6d5a7: movabs $0x100000208,%rdx  ;   {metadata({type array char})}
  0x0000000002a6d5b1: movslq %ebx,%rbx
  0x0000000002a6d5b4: mov    %rbx,%rdi
  0x0000000002a6d5b7: cmp    $0xffffff,%rbx
  0x0000000002a6d5be: ja     0x0000000002a6ddd8
  0x0000000002a6d5c4: movabs $0x17,%rsi
  0x0000000002a6d5ce: lea    (%rsi,%rbx,2),%rsi
  0x0000000002a6d5d2: and    $0xfffffffffffffff8,%rsi
  0x0000000002a6d5d6: mov    0x60(%r15),%rax
  0x0000000002a6d5da: lea    (%rax,%rsi,1),%rsi
  0x0000000002a6d5de: cmp    0x70(%r15),%rsi
  0x0000000002a6d5e2: ja     0x0000000002a6ddd8
  0x0000000002a6d5e8: mov    %rsi,0x60(%r15)
  0x0000000002a6d5ec: sub    %rax,%rsi
  0x0000000002a6d5ef: movq   $0x1,(%rax)
  0x0000000002a6d5f6: mov    %rdx,%rcx
  0x0000000002a6d5f9: shr    $0x3,%rcx
  0x0000000002a6d5fd: mov    %ecx,0x8(%rax)
  0x0000000002a6d600: mov    %ebx,0xc(%rax)
  0x0000000002a6d603: sub    $0x10,%rsi
  0x0000000002a6d607: je     0x0000000002a6d61e
  0x0000000002a6d60d: xor    %rbx,%rbx
  0x0000000002a6d610: shr    $0x3,%rsi
  0x0000000002a6d614: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000002a6d619: dec    %rsi
  0x0000000002a6d61c: jne    0x0000000002a6d614  ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)

  0x0000000002a6d61e: mov    0xc(%r11),%edx     ;*arraylength
                                                ; - java.util.Arrays::copyOfRange@50 (line 3665)
                                                ; implicit exception: dispatches to 0x0000000002a6dde2
  0x0000000002a6d622: sub    %r8d,%edx
  0x0000000002a6d625: movabs $0x16c33200,%r9    ;   {metadata(method data for {method} {0x0000000016b48fc8} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002a6d62f: addq   $0x1,0x208(%r9)
  0x0000000002a6d637: movabs $0x16c1e150,%r9    ;   {metadata(method data for {method} {0x0000000016b242a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002a6d641: mov    0xdc(%r9),%edi
  0x0000000002a6d648: add    $0x8,%edi
  0x0000000002a6d64b: mov    %edi,0xdc(%r9)
  0x0000000002a6d652: movabs $0x16b242a0,%r9    ;   {metadata({method} {0x0000000016b242a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002a6d65c: and    $0x7ffff8,%edi
  0x0000000002a6d662: cmp    $0x0,%edi
  0x0000000002a6d665: je     0x0000000002a6dde7
  0x0000000002a6d66b: cmp    %r13d,%edx
  0x0000000002a6d66e: movabs $0x16c1e150,%r9    ;   {metadata(method data for {method} {0x0000000016b242a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002a6d678: movabs $0x108,%rdi
  0x0000000002a6d682: jg     0x0000000002a6d692
  0x0000000002a6d688: movabs $0x118,%rdi
  0x0000000002a6d692: mov    (%r9,%rdi,1),%rsi
  0x0000000002a6d696: lea    0x1(%rsi),%rsi
  0x0000000002a6d69a: mov    %rsi,(%r9,%rdi,1)
  0x0000000002a6d69e: jg     0x0000000002a6d6bd  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x0000000002a6d6a4: movabs $0x16c1e150,%r9    ;   {metadata(method data for {method} {0x0000000016b242a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002a6d6ae: incl   0x128(%r9)
  0x0000000002a6d6b5: mov    %rdx,%rsi
  0x0000000002a6d6b8: jmpq   0x0000000002a6d6c0  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x0000000002a6d6bd: mov    %r13,%rsi          ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x0000000002a6d6c0: movabs $0x16c33200,%rdx   ;   {metadata(method data for {method} {0x0000000016b48fc8} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002a6d6ca: addq   $0x1,0x218(%rdx)
  0x0000000002a6d6d2: mov    %r11,%rdx
  0x0000000002a6d6d5: mov    %rax,%r9
  0x0000000002a6d6d8: mov    $0x0,%edi
  0x0000000002a6d6dd: mov    %rax,0x70(%rsp)
  0x0000000002a6d6e2: test   %r8d,%r8d
  0x0000000002a6d6e5: jl     0x0000000002a6ddfe
  0x0000000002a6d6eb: lea    (%r8,%rsi,1),%rcx
  0x0000000002a6d6ef: cmp    0xc(%rdx),%ecx
  0x0000000002a6d6f2: ja     0x0000000002a6ddfe
  0x0000000002a6d6f8: lea    (%rdi,%rsi,1),%rcx
  0x0000000002a6d6fc: cmp    0xc(%r9),%ecx
  0x0000000002a6d700: ja     0x0000000002a6ddfe
  0x0000000002a6d706: test   %esi,%esi
  0x0000000002a6d708: jl     0x0000000002a6ddfe
  0x0000000002a6d70e: je     0x0000000002a6d752
  0x0000000002a6d714: movslq %r8d,%r8
  0x0000000002a6d717: movslq %edi,%rdi
  0x0000000002a6d71a: lea    0x10(%rdx,%r8,2),%rcx
  0x0000000002a6d71f: lea    0x10(%r9,%rdi,2),%rdx
  0x0000000002a6d724: mov    %rsi,%r8
  0x0000000002a6d727: sub    $0x20,%rsp
  0x0000000002a6d72b: test   $0xf,%esp
  0x0000000002a6d731: je     0x0000000002a6d749
  0x0000000002a6d737: sub    $0x8,%rsp
  0x0000000002a6d73b: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000000002a6d740: add    $0x8,%rsp
  0x0000000002a6d744: jmpq   0x0000000002a6d74e
  0x0000000002a6d749: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000000002a6d74e: add    $0x20,%rsp         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)

  0x0000000002a6d752: mov    0x70(%rsp),%rax
  0x0000000002a6d757: add    $0xa0,%rsp
  0x0000000002a6d75e: pop    %rbp
  0x0000000002a6d75f: test   %eax,-0x287d665(%rip)        # 0x00000000001f0100
                                                ;   {poll_return}
  0x0000000002a6d765: retq                      ;*areturn
                                                ; - java.util.Arrays::copyOfRange@62 (line 3667)

  0x0000000002a6d766: mov    %r9d,0x80(%rsp)
  0x0000000002a6d76e: xchg   %ax,%ax
  0x0000000002a6d770: jmpq   0x0000000002a6de18  ;   {no_reloc}
  0x0000000002a6d775: add    %al,(%rax)
  0x0000000002a6d777: add    %al,(%rax)
  0x0000000002a6d779: add    %cl,-0x75(%rcx)
  0x0000000002a6d77c: rex.RXB (bad) 
  0x0000000002a6d77e: lea    0x20(%rax),%rdi
  0x0000000002a6d782: cmp    0x70(%r15),%rdi
  0x0000000002a6d786: ja     0x0000000002a6de22
  0x0000000002a6d78c: mov    %rdi,0x60(%r15)
  0x0000000002a6d790: mov    0xa8(%rdx),%rcx
  0x0000000002a6d797: mov    %rcx,(%rax)
  0x0000000002a6d79a: mov    %rdx,%rcx
  0x0000000002a6d79d: shr    $0x3,%rcx
  0x0000000002a6d7a1: mov    %ecx,0x8(%rax)
  0x0000000002a6d7a4: xor    %rcx,%rcx
  0x0000000002a6d7a7: mov    %ecx,0xc(%rax)
  0x0000000002a6d7aa: xor    %rcx,%rcx
  0x0000000002a6d7ad: mov    %rcx,0x10(%rax)
  0x0000000002a6d7b1: mov    %rcx,0x18(%rax)    ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3663)

  0x0000000002a6d7b5: data16 xchg %ax,%ax
  0x0000000002a6d7b8: jmpq   0x0000000002a6de3e  ;   {no_reloc}
  0x0000000002a6d7bd: add    %al,(%rax)
  0x0000000002a6d7bf: add    %al,(%rax)
  0x0000000002a6d7c1: add    %cl,-0x77(%rax)
  0x0000000002a6d7c4: test   %ah,(%rax,%rcx,4)
  0x0000000002a6d7c7: add    %al,(%rax)
  0x0000000002a6d7c9: add    %cl,-0x75(%rcx)
  0x0000000002a6d7cc: rex.RXB (bad) 
  0x0000000002a6d7ce: lea    0x18(%rax),%rdi
  0x0000000002a6d7d2: cmp    0x70(%r15),%rdi
  0x0000000002a6d7d6: ja     0x0000000002a6de48
  0x0000000002a6d7dc: mov    %rdi,0x60(%r15)
  0x0000000002a6d7e0: mov    0xa8(%rdx),%rcx
  0x0000000002a6d7e7: mov    %rcx,(%rax)
  0x0000000002a6d7ea: mov    %rdx,%rcx
  0x0000000002a6d7ed: shr    $0x3,%rcx
  0x0000000002a6d7f1: mov    %ecx,0x8(%rax)
  0x0000000002a6d7f4: xor    %rcx,%rcx
  0x0000000002a6d7f7: mov    %ecx,0xc(%rax)
  0x0000000002a6d7fa: xor    %rcx,%rcx
  0x0000000002a6d7fd: mov    %rcx,0x10(%rax)    ;*new  ; - java.util.Arrays::copyOfRange@12 (line 3663)

  0x0000000002a6d801: mov    %rax,%rbx
  0x0000000002a6d804: movabs $0x16c33200,%rdx   ;   {metadata(method data for {method} {0x0000000016b48fc8} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002a6d80e: addq   $0x1,0x128(%rdx)
  0x0000000002a6d816: movabs $0x16d07fe8,%rbx   ;   {metadata(method data for {method} {0x0000000016aa7650} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002a6d820: mov    0xdc(%rbx),%edx
  0x0000000002a6d826: add    $0x8,%edx
  0x0000000002a6d829: mov    %edx,0xdc(%rbx)
  0x0000000002a6d82f: movabs $0x16aa7648,%rbx   ;   {metadata({method} {0x0000000016aa7650} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002a6d839: and    $0x7ffff8,%edx
  0x0000000002a6d83f: cmp    $0x0,%edx
  0x0000000002a6d842: je     0x0000000002a6de55
  0x0000000002a6d848: mov    %rax,%rbx
  0x0000000002a6d84b: movabs $0x16d07fe8,%rdx   ;   {metadata(method data for {method} {0x0000000016aa7650} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002a6d855: addq   $0x1,0x108(%rdx)
  0x0000000002a6d85d: movabs $0x16d08470,%rbx   ;   {metadata(method data for {method} {0x0000000016aa3980} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002a6d867: mov    0xdc(%rbx),%edx
  0x0000000002a6d86d: add    $0x8,%edx
  0x0000000002a6d870: mov    %edx,0xdc(%rbx)
  0x0000000002a6d876: movabs $0x16aa3978,%rbx   ;   {metadata({method} {0x0000000016aa3980} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002a6d880: and    $0x7ffff8,%edx
  0x0000000002a6d886: cmp    $0x0,%edx
  0x0000000002a6d889: je     0x0000000002a6de6c
  0x0000000002a6d88f: mov    %rax,%rbx
  0x0000000002a6d892: movabs $0x16d08470,%rdx   ;   {metadata(method data for {method} {0x0000000016aa3980} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002a6d89c: addq   $0x1,0x108(%rdx)
  0x0000000002a6d8a4: movabs $0x16b633b0,%rbx   ;   {metadata(method data for {method} {0x0000000016a30488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002a6d8ae: mov    0xdc(%rbx),%edx
  0x0000000002a6d8b4: add    $0x8,%edx
  0x0000000002a6d8b7: mov    %edx,0xdc(%rbx)
  0x0000000002a6d8bd: movabs $0x16a30480,%rbx   ;   {metadata({method} {0x0000000016a30488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002a6d8c7: and    $0x7ffff8,%edx
  0x0000000002a6d8cd: cmp    $0x0,%edx
  0x0000000002a6d8d0: je     0x0000000002a6de83
  0x0000000002a6d8d6: mov    $0x10,%ebx
  0x0000000002a6d8db: movabs $0x100000208,%rdx  ;   {metadata({type array char})}
  0x0000000002a6d8e5: mov    %rax,%r13
  0x0000000002a6d8e8: movslq %ebx,%rbx
  0x0000000002a6d8eb: mov    %rbx,%rdi
  0x0000000002a6d8ee: cmp    $0xffffff,%rbx
  0x0000000002a6d8f5: ja     0x0000000002a6de9a
  0x0000000002a6d8fb: movabs $0x17,%rsi
  0x0000000002a6d905: lea    (%rsi,%rbx,2),%rsi
  0x0000000002a6d909: and    $0xfffffffffffffff8,%rsi
  0x0000000002a6d90d: mov    0x60(%r15),%rax
  0x0000000002a6d911: lea    (%rax,%rsi,1),%rsi
  0x0000000002a6d915: cmp    0x70(%r15),%rsi
  0x0000000002a6d919: ja     0x0000000002a6de9a
  0x0000000002a6d91f: mov    %rsi,0x60(%r15)
  0x0000000002a6d923: sub    %rax,%rsi
  0x0000000002a6d926: movq   $0x1,(%rax)
  0x0000000002a6d92d: mov    %rdx,%rcx
  0x0000000002a6d930: shr    $0x3,%rcx
  0x0000000002a6d934: mov    %ecx,0x8(%rax)
  0x0000000002a6d937: mov    %ebx,0xc(%rax)
  0x0000000002a6d93a: sub    $0x10,%rsi
  0x0000000002a6d93e: je     0x0000000002a6d955
  0x0000000002a6d944: xor    %rbx,%rbx
  0x0000000002a6d947: shr    $0x3,%rsi
  0x0000000002a6d94b: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000002a6d950: dec    %rsi
  0x0000000002a6d953: jne    0x0000000002a6d94b  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)

  0x0000000002a6d955: mov    %rax,%r10
  0x0000000002a6d958: mov    %r10d,0x10(%r13)
  0x0000000002a6d95c: mov    %r13,%rax
  0x0000000002a6d95f: shr    $0x9,%rax
  0x0000000002a6d963: movabs $0x11909000,%rdx
  0x0000000002a6d96d: movb   $0x0,(%rax,%rdx,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)

  0x0000000002a6d971: mov    %r13,%rax
  0x0000000002a6d974: movabs $0x16c33200,%rdx   ;   {metadata(method data for {method} {0x0000000016b48fc8} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002a6d97e: mov    0x8(%rax),%eax
  0x0000000002a6d981: shl    $0x3,%rax
  0x0000000002a6d985: cmp    0x140(%rdx),%rax
  0x0000000002a6d98c: jne    0x0000000002a6d99b
  0x0000000002a6d98e: addq   $0x1,0x148(%rdx)
  0x0000000002a6d996: jmpq   0x0000000002a6da01
  0x0000000002a6d99b: cmp    0x150(%rdx),%rax
  0x0000000002a6d9a2: jne    0x0000000002a6d9b1
  0x0000000002a6d9a4: addq   $0x1,0x158(%rdx)
  0x0000000002a6d9ac: jmpq   0x0000000002a6da01
  0x0000000002a6d9b1: cmpq   $0x0,0x140(%rdx)
  0x0000000002a6d9bc: jne    0x0000000002a6d9d5
  0x0000000002a6d9be: mov    %rax,0x140(%rdx)
  0x0000000002a6d9c5: movq   $0x1,0x148(%rdx)
  0x0000000002a6d9d0: jmpq   0x0000000002a6da01
  0x0000000002a6d9d5: cmpq   $0x0,0x150(%rdx)
  0x0000000002a6d9e0: jne    0x0000000002a6d9f9
  0x0000000002a6d9e2: mov    %rax,0x150(%rdx)
  0x0000000002a6d9e9: movq   $0x1,0x158(%rdx)
  0x0000000002a6d9f4: jmpq   0x0000000002a6da01
  0x0000000002a6d9f9: addq   $0x1,0x138(%rdx)
  0x0000000002a6da01: movabs $0x16d085a8,%rdx   ;   {metadata(method data for {method} {0x0000000016aa7e28} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002a6da0b: mov    0xdc(%rdx),%esi
  0x0000000002a6da11: add    $0x8,%esi
  0x0000000002a6da14: mov    %esi,0xdc(%rdx)
  0x0000000002a6da1a: movabs $0x16aa7e20,%rdx   ;   {metadata({method} {0x0000000016aa7e28} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002a6da24: and    $0x7ffff8,%esi
  0x0000000002a6da2a: cmp    $0x0,%esi
  0x0000000002a6da2d: je     0x0000000002a6dea4
  0x0000000002a6da33: mov    %r13,%rax
  0x0000000002a6da36: movabs $0x16d085a8,%rdx   ;   {metadata(method data for {method} {0x0000000016aa7e28} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002a6da40: addq   $0x1,0x108(%rdx)
  0x0000000002a6da48: mov    %r13,%rdx          ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)

  0x0000000002a6da4b: mov    %r13,0x78(%rsp)
  0x0000000002a6da50: nop
  0x0000000002a6da51: nop
  0x0000000002a6da52: nop
  0x0000000002a6da53: nop
  0x0000000002a6da54: nop
  0x0000000002a6da55: nop
  0x0000000002a6da56: nop
  0x0000000002a6da57: callq  0x00000000029a61a0  ; OopMap{[120]=Oop [136]=Oop off=1340}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)
                                                ;   {optimized virtual_call}
  0x0000000002a6da5c: mov    0x78(%rsp),%rax
  0x0000000002a6da61: movabs $0x16c33200,%r8    ;   {metadata(method data for {method} {0x0000000016b48fc8} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002a6da6b: mov    0x8(%rax),%eax
  0x0000000002a6da6e: shl    $0x3,%rax
  0x0000000002a6da72: cmp    0x170(%r8),%rax
  0x0000000002a6da79: jne    0x0000000002a6da88
  0x0000000002a6da7b: addq   $0x1,0x178(%r8)
  0x0000000002a6da83: jmpq   0x0000000002a6daee
  0x0000000002a6da88: cmp    0x180(%r8),%rax
  0x0000000002a6da8f: jne    0x0000000002a6da9e
  0x0000000002a6da91: addq   $0x1,0x188(%r8)
  0x0000000002a6da99: jmpq   0x0000000002a6daee
  0x0000000002a6da9e: cmpq   $0x0,0x170(%r8)
  0x0000000002a6daa9: jne    0x0000000002a6dac2
  0x0000000002a6daab: mov    %rax,0x170(%r8)
  0x0000000002a6dab2: movq   $0x1,0x178(%r8)
  0x0000000002a6dabd: jmpq   0x0000000002a6daee
  0x0000000002a6dac2: cmpq   $0x0,0x180(%r8)
  0x0000000002a6dacd: jne    0x0000000002a6dae6
  0x0000000002a6dacf: mov    %rax,0x180(%r8)
  0x0000000002a6dad6: movq   $0x1,0x188(%r8)
  0x0000000002a6dae1: jmpq   0x0000000002a6daee
  0x0000000002a6dae6: addq   $0x1,0x168(%r8)
  0x0000000002a6daee: movabs $0x16c62fe8,%r8    ;   {metadata(method data for {method} {0x0000000016aa7968} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002a6daf8: mov    0xdc(%r8),%edx
  0x0000000002a6daff: add    $0x8,%edx
  0x0000000002a6db02: mov    %edx,0xdc(%r8)
  0x0000000002a6db09: movabs $0x16aa7960,%r8    ;   {metadata({method} {0x0000000016aa7968} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002a6db13: and    $0x7ffff8,%edx
  0x0000000002a6db19: cmp    $0x0,%edx
  0x0000000002a6db1c: je     0x0000000002a6debb
  0x0000000002a6db22: mov    0x78(%rsp),%rax
  0x0000000002a6db27: movabs $0x16c62fe8,%r8    ;   {metadata(method data for {method} {0x0000000016aa7968} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002a6db31: addq   $0x1,0x108(%r8)
  0x0000000002a6db39: movabs $0xd67930d0,%r8    ;   {oop(&quot; &gt; &quot;)}
  0x0000000002a6db43: mov    0x78(%rsp),%rdx    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)

  0x0000000002a6db48: nop
  0x0000000002a6db49: nop
  0x0000000002a6db4a: nop
  0x0000000002a6db4b: nop
  0x0000000002a6db4c: nop
  0x0000000002a6db4d: nop
  0x0000000002a6db4e: nop
  0x0000000002a6db4f: callq  0x00000000029a61a0  ; OopMap{[120]=Oop [136]=Oop off=1588}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)
                                                ;   {optimized virtual_call}
  0x0000000002a6db54: mov    0x78(%rsp),%rax
  0x0000000002a6db59: movabs $0x16c33200,%r8    ;   {metadata(method data for {method} {0x0000000016b48fc8} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002a6db63: mov    0x8(%rax),%eax
  0x0000000002a6db66: shl    $0x3,%rax
  0x0000000002a6db6a: cmp    0x1a0(%r8),%rax
  0x0000000002a6db71: jne    0x0000000002a6db80
  0x0000000002a6db73: addq   $0x1,0x1a8(%r8)
  0x0000000002a6db7b: jmpq   0x0000000002a6dbe6
  0x0000000002a6db80: cmp    0x1b0(%r8),%rax
  0x0000000002a6db87: jne    0x0000000002a6db96
  0x0000000002a6db89: addq   $0x1,0x1b8(%r8)
  0x0000000002a6db91: jmpq   0x0000000002a6dbe6
  0x0000000002a6db96: cmpq   $0x0,0x1a0(%r8)
  0x0000000002a6dba1: jne    0x0000000002a6dbba
  0x0000000002a6dba3: mov    %rax,0x1a0(%r8)
  0x0000000002a6dbaa: movq   $0x1,0x1a8(%r8)
  0x0000000002a6dbb5: jmpq   0x0000000002a6dbe6
  0x0000000002a6dbba: cmpq   $0x0,0x1b0(%r8)
  0x0000000002a6dbc5: jne    0x0000000002a6dbde
  0x0000000002a6dbc7: mov    %rax,0x1b0(%r8)
  0x0000000002a6dbce: movq   $0x1,0x1b8(%r8)
  0x0000000002a6dbd9: jmpq   0x0000000002a6dbe6
  0x0000000002a6dbde: addq   $0x1,0x198(%r8)
  0x0000000002a6dbe6: movabs $0x16d085a8,%r8    ;   {metadata(method data for {method} {0x0000000016aa7e28} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002a6dbf0: mov    0xdc(%r8),%edx
  0x0000000002a6dbf7: add    $0x8,%edx
  0x0000000002a6dbfa: mov    %edx,0xdc(%r8)
  0x0000000002a6dc01: movabs $0x16aa7e20,%r8    ;   {metadata({method} {0x0000000016aa7e28} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002a6dc0b: and    $0x7ffff8,%edx
  0x0000000002a6dc11: cmp    $0x0,%edx
  0x0000000002a6dc14: je     0x0000000002a6ded2
  0x0000000002a6dc1a: mov    0x78(%rsp),%rax
  0x0000000002a6dc1f: movabs $0x16d085a8,%r8    ;   {metadata(method data for {method} {0x0000000016aa7e28} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002a6dc29: addq   $0x1,0x108(%r8)
  0x0000000002a6dc31: mov    0x80(%rsp),%r8d
  0x0000000002a6dc39: mov    0x78(%rsp),%rdx    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)

  0x0000000002a6dc3e: nop
  0x0000000002a6dc3f: callq  0x00000000029a61a0  ; OopMap{[120]=Oop [136]=Oop off=1828}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)
                                                ;   {optimized virtual_call}
  0x0000000002a6dc44: mov    0x78(%rsp),%rax
  0x0000000002a6dc49: movabs $0x16c33200,%rdx   ;   {metadata(method data for {method} {0x0000000016b48fc8} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002a6dc53: mov    0x8(%rax),%eax
  0x0000000002a6dc56: shl    $0x3,%rax
  0x0000000002a6dc5a: cmp    0x1d0(%rdx),%rax
  0x0000000002a6dc61: jne    0x0000000002a6dc70
  0x0000000002a6dc63: addq   $0x1,0x1d8(%rdx)
  0x0000000002a6dc6b: jmpq   0x0000000002a6dcd6
  0x0000000002a6dc70: cmp    0x1e0(%rdx),%rax
  0x0000000002a6dc77: jne    0x0000000002a6dc86
  0x0000000002a6dc79: addq   $0x1,0x1e8(%rdx)
  0x0000000002a6dc81: jmpq   0x0000000002a6dcd6
  0x0000000002a6dc86: cmpq   $0x0,0x1d0(%rdx)
  0x0000000002a6dc91: jne    0x0000000002a6dcaa
  0x0000000002a6dc93: mov    %rax,0x1d0(%rdx)
  0x0000000002a6dc9a: movq   $0x1,0x1d8(%rdx)
  0x0000000002a6dca5: jmpq   0x0000000002a6dcd6
  0x0000000002a6dcaa: cmpq   $0x0,0x1e0(%rdx)
  0x0000000002a6dcb5: jne    0x0000000002a6dcce
  0x0000000002a6dcb7: mov    %rax,0x1e0(%rdx)
  0x0000000002a6dcbe: movq   $0x1,0x1e8(%rdx)
  0x0000000002a6dcc9: jmpq   0x0000000002a6dcd6
  0x0000000002a6dcce: addq   $0x1,0x1c8(%rdx)
  0x0000000002a6dcd6: movabs $0x16d088f8,%rdx   ;   {metadata(method data for {method} {0x0000000016aa8d18} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002a6dce0: mov    0xdc(%rdx),%esi
  0x0000000002a6dce6: add    $0x8,%esi
  0x0000000002a6dce9: mov    %esi,0xdc(%rdx)
  0x0000000002a6dcef: movabs $0x16aa8d10,%rdx   ;   {metadata({method} {0x0000000016aa8d18} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002a6dcf9: and    $0x7ffff8,%esi
  0x0000000002a6dcff: cmp    $0x0,%esi
  0x0000000002a6dd02: je     0x0000000002a6dee9
  0x0000000002a6dd08: movabs $0x1000016d0,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x0000000002a6dd12: mov    0x60(%r15),%rax
  0x0000000002a6dd16: lea    0x18(%rax),%rdi
  0x0000000002a6dd1a: cmp    0x70(%r15),%rdi
  0x0000000002a6dd1e: ja     0x0000000002a6df00
  0x0000000002a6dd24: mov    %rdi,0x60(%r15)
  0x0000000002a6dd28: mov    0xa8(%rdx),%rcx
  0x0000000002a6dd2f: mov    %rcx,(%rax)
  0x0000000002a6dd32: mov    %rdx,%rcx
  0x0000000002a6dd35: shr    $0x3,%rcx
  0x0000000002a6dd39: mov    %ecx,0x8(%rax)
  0x0000000002a6dd3c: xor    %rcx,%rcx
  0x0000000002a6dd3f: mov    %ecx,0xc(%rax)
  0x0000000002a6dd42: xor    %rcx,%rcx
  0x0000000002a6dd45: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x0000000002a6dd49: mov    0x78(%rsp),%r8
  0x0000000002a6dd4e: mov    0x10(%r8),%r9d     ;*getfield value
                                                ; - java.lang.StringBuilder::toString@5 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x0000000002a6dd52: mov    0xc(%r8),%edi      ;*getfield count
                                                ; - java.lang.StringBuilder::toString@10 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x0000000002a6dd56: mov    %rax,%r8
  0x0000000002a6dd59: movabs $0x16d088f8,%rdx   ;   {metadata(method data for {method} {0x0000000016aa8d18} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002a6dd63: addq   $0x1,0x108(%rdx)
  0x0000000002a6dd6b: mov    %r9,%r8
  0x0000000002a6dd6e: mov    $0x0,%r9d
  0x0000000002a6dd74: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x0000000002a6dd77: mov    %rax,0x90(%rsp)
  0x0000000002a6dd7f: callq  0x00000000029a61a0  ; OopMap{[136]=Oop [144]=Oop off=2148}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {optimized virtual_call}
  0x0000000002a6dd84: mov    0x88(%rsp),%rax
  0x0000000002a6dd8c: movabs $0x16c33200,%r8    ;   {metadata(method data for {method} {0x0000000016b48fc8} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002a6dd96: addq   $0x1,0x1f8(%r8)
  0x0000000002a6dd9e: mov    0x90(%rsp),%r8
  0x0000000002a6dda6: mov    0x88(%rsp),%rdx    ;*invokespecial &lt;init&gt;
                                                ; - java.util.Arrays::copyOfRange@35 (line 3663)

  0x0000000002a6ddae: nop
  0x0000000002a6ddaf: callq  0x00000000029a61a0  ; OopMap{[136]=Oop off=2196}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.util.Arrays::copyOfRange@35 (line 3663)
                                                ;   {optimized virtual_call}
  0x0000000002a6ddb4: mov    0x88(%rsp),%rax
  0x0000000002a6ddbc: jmpq   0x0000000002a6df38
  0x0000000002a6ddc1: mov    %rbx,0x8(%rsp)
  0x0000000002a6ddc6: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002a6ddce: callq  0x0000000002a5f7a0  ; OopMap{r11=Oop off=2227}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOfRange@-1 (line 3661)
                                                ;   {runtime_call}
  0x0000000002a6ddd3: jmpq   0x0000000002a6d564
  0x0000000002a6ddd8: callq  0x00000000029d0900  ; OopMap{r11=Oop off=2237}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ;   {runtime_call}
  0x0000000002a6dddd: jmpq   0x0000000002a6d61e
  0x0000000002a6dde2: callq  0x00000000029d1b80  ; OopMap{r11=Oop rax=Oop off=2247}
                                                ;*arraylength
                                                ; - java.util.Arrays::copyOfRange@50 (line 3665)
                                                ;   {runtime_call}
  0x0000000002a6dde7: mov    %r9,0x8(%rsp)
  0x0000000002a6ddec: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002a6ddf4: callq  0x0000000002a5f7a0  ; OopMap{r11=Oop rax=Oop off=2265}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)
                                                ;   {runtime_call}
  0x0000000002a6ddf9: jmpq   0x0000000002a6d66b
  0x0000000002a6ddfe: nop
  0x0000000002a6ddff: callq  0x00000000029a6620  ; OopMap{[112]=Oop off=2276}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ;   {static_call}
  0x0000000002a6de04: jmpq   0x0000000002a6d752
  0x0000000002a6de09: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002a6de13: mov    $0xa050f00,%eax
  0x0000000002a6de18: callq  0x0000000002a606a0  ; OopMap{off=2301}
                                                ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3663)
                                                ;   {runtime_call}
  0x0000000002a6de1d: jmpq   0x0000000002a6d770
  0x0000000002a6de22: mov    %rdx,%rdx
  0x0000000002a6de25: callq  0x00000000029d1240  ; OopMap{off=2314}
                                                ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3663)
                                                ;   {runtime_call}
  0x0000000002a6de2a: jmpq   0x0000000002a6d7b5
  0x0000000002a6de2f: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002a6de39: mov    $0xa050f00,%eax
  0x0000000002a6de3e: callq  0x0000000002a606a0  ; OopMap{rax=Oop off=2339}
                                                ;*new  ; - java.util.Arrays::copyOfRange@12 (line 3663)
                                                ;   {runtime_call}
  0x0000000002a6de43: jmpq   0x0000000002a6d7b8
  0x0000000002a6de48: mov    %rdx,%rdx
  0x0000000002a6de4b: callq  0x00000000029d1240  ; OopMap{[136]=Oop off=2352}
                                                ;*new  ; - java.util.Arrays::copyOfRange@12 (line 3663)
                                                ;   {runtime_call}
  0x0000000002a6de50: jmpq   0x0000000002a6d801
  0x0000000002a6de55: mov    %rbx,0x8(%rsp)
  0x0000000002a6de5a: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002a6de62: callq  0x0000000002a5f7a0  ; OopMap{[136]=Oop rax=Oop off=2375}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::&lt;init&gt;@-1 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x0000000002a6de67: jmpq   0x0000000002a6d848
  0x0000000002a6de6c: mov    %rbx,0x8(%rsp)
  0x0000000002a6de71: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002a6de79: callq  0x0000000002a5f7a0  ; OopMap{[136]=Oop rax=Oop off=2398}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@-1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x0000000002a6de7e: jmpq   0x0000000002a6d88f
  0x0000000002a6de83: mov    %rbx,0x8(%rsp)
  0x0000000002a6de88: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002a6de90: callq  0x0000000002a5f7a0  ; OopMap{[136]=Oop rax=Oop off=2421}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x0000000002a6de95: jmpq   0x0000000002a6d8d6
  0x0000000002a6de9a: callq  0x00000000029d0900  ; OopMap{[136]=Oop r13=Oop off=2431}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x0000000002a6de9f: jmpq   0x0000000002a6d955
  0x0000000002a6dea4: mov    %rdx,0x8(%rsp)
  0x0000000002a6dea9: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002a6deb1: callq  0x0000000002a5f7a0  ; OopMap{[136]=Oop r13=Oop off=2454}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)
                                                ;   {runtime_call}
  0x0000000002a6deb6: jmpq   0x0000000002a6da33
  0x0000000002a6debb: mov    %r8,0x8(%rsp)
  0x0000000002a6dec0: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002a6dec8: callq  0x0000000002a5f7a0  ; OopMap{[120]=Oop [136]=Oop off=2477}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)
                                                ;   {runtime_call}
  0x0000000002a6decd: jmpq   0x0000000002a6db22
  0x0000000002a6ded2: mov    %r8,0x8(%rsp)
  0x0000000002a6ded7: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002a6dedf: callq  0x0000000002a5f7a0  ; OopMap{[120]=Oop [136]=Oop off=2500}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)
                                                ;   {runtime_call}
  0x0000000002a6dee4: jmpq   0x0000000002a6dc1a
  0x0000000002a6dee9: mov    %rdx,0x8(%rsp)
  0x0000000002a6deee: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002a6def6: callq  0x0000000002a5f7a0  ; OopMap{[120]=Oop [136]=Oop off=2523}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {runtime_call}
  0x0000000002a6defb: jmpq   0x0000000002a6dd08
  0x0000000002a6df00: mov    %rdx,%rdx
  0x0000000002a6df03: callq  0x00000000029d1240  ; OopMap{[120]=Oop [136]=Oop off=2536}
                                                ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {runtime_call}
  0x0000000002a6df08: jmpq   0x0000000002a6dd49
  0x0000000002a6df0d: nop
  0x0000000002a6df0e: nop
  0x0000000002a6df0f: mov    0x2a8(%r15),%rax
  0x0000000002a6df16: movabs $0x0,%r10
  0x0000000002a6df20: mov    %r10,0x2a8(%r15)
  0x0000000002a6df27: movabs $0x0,%r10
  0x0000000002a6df31: mov    %r10,0x2b0(%r15)
  0x0000000002a6df38: add    $0xa0,%rsp
  0x0000000002a6df3f: pop    %rbp
  0x0000000002a6df40: jmpq   0x00000000029cf0e0  ;   {runtime_call}
  0x0000000002a6df45: hlt    
  0x0000000002a6df46: hlt    
  0x0000000002a6df47: hlt    
  0x0000000002a6df48: hlt    
  0x0000000002a6df49: hlt    
  0x0000000002a6df4a: hlt    
  0x0000000002a6df4b: hlt    
  0x0000000002a6df4c: hlt    
  0x0000000002a6df4d: hlt    
  0x0000000002a6df4e: hlt    
  0x0000000002a6df4f: hlt    
  0x0000000002a6df50: hlt    
  0x0000000002a6df51: hlt    
  0x0000000002a6df52: hlt    
  0x0000000002a6df53: hlt    
  0x0000000002a6df54: hlt    
  0x0000000002a6df55: hlt    
  0x0000000002a6df56: hlt    
  0x0000000002a6df57: hlt    
  0x0000000002a6df58: hlt    
  0x0000000002a6df59: hlt    
  0x0000000002a6df5a: hlt    
  0x0000000002a6df5b: hlt    
  0x0000000002a6df5c: hlt    
  0x0000000002a6df5d: hlt    
  0x0000000002a6df5e: hlt    
  0x0000000002a6df5f: hlt    
[Stub Code]
  0x0000000002a6df60: nop                       ;   {no_reloc}
  0x0000000002a6df61: nop
  0x0000000002a6df62: nop
  0x0000000002a6df63: nop
  0x0000000002a6df64: nop
  0x0000000002a6df65: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002a6df6f: jmpq   0x0000000002a6df6f  ;   {runtime_call}
  0x0000000002a6df74: nop
  0x0000000002a6df75: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002a6df7f: jmpq   0x0000000002a6df7f  ;   {runtime_call}
  0x0000000002a6df84: nop
  0x0000000002a6df85: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002a6df8f: jmpq   0x0000000002a6df8f  ;   {runtime_call}
  0x0000000002a6df94: nop
  0x0000000002a6df95: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002a6df9f: jmpq   0x0000000002a6df9f  ;   {runtime_call}
  0x0000000002a6dfa4: nop
  0x0000000002a6dfa5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002a6dfaf: jmpq   0x0000000002a6dfaf  ;   {runtime_call}
  0x0000000002a6dfb4: nop
  0x0000000002a6dfb5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002a6dfbf: jmpq   0x0000000002a6dfbf  ;   {runtime_call}
[Exception Handler]
  0x0000000002a6dfc4: callq  0x00000000029cfc60  ;   {runtime_call}
  0x0000000002a6dfc9: mov    %rsp,-0x28(%rsp)
  0x0000000002a6dfce: sub    $0x80,%rsp
  0x0000000002a6dfd5: mov    %rax,0x78(%rsp)
  0x0000000002a6dfda: mov    %rcx,0x70(%rsp)
  0x0000000002a6dfdf: mov    %rdx,0x68(%rsp)
  0x0000000002a6dfe4: mov    %rbx,0x60(%rsp)
  0x0000000002a6dfe9: mov    %rbp,0x50(%rsp)
  0x0000000002a6dfee: mov    %rsi,0x48(%rsp)
  0x0000000002a6dff3: mov    %rdi,0x40(%rsp)
  0x0000000002a6dff8: mov    %r8,0x38(%rsp)
  0x0000000002a6dffd: mov    %r9,0x30(%rsp)
  0x0000000002a6e002: mov    %r10,0x28(%rsp)
  0x0000000002a6e007: mov    %r11,0x20(%rsp)
  0x0000000002a6e00c: mov    %r12,0x18(%rsp)
  0x0000000002a6e011: mov    %r13,0x10(%rsp)
  0x0000000002a6e016: mov    %r14,0x8(%rsp)
  0x0000000002a6e01b: mov    %r15,(%rsp)
  0x0000000002a6e01f: movabs $0x623d8e30,%rcx   ;   {external_word}
  0x0000000002a6e029: movabs $0x2a6dfc9,%rdx    ;   {internal_word}
  0x0000000002a6e033: mov    %rsp,%r8
  0x0000000002a6e036: and    $0xfffffffffffffff0,%rsp
  0x0000000002a6e03a: callq  0x0000000062093d40  ;   {runtime_call}
  0x0000000002a6e03f: hlt    
[Deopt Handler Code]
  0x0000000002a6e040: movabs $0x2a6e040,%r10    ;   {section_word}
  0x0000000002a6e04a: push   %r10
  0x0000000002a6e04c: jmpq   0x00000000029a7600  ;   {runtime_call}
  0x0000000002a6e051: hlt    
  0x0000000002a6e052: hlt    
  0x0000000002a6e053: hlt    
  0x0000000002a6e054: hlt    
  0x0000000002a6e055: hlt    
  0x0000000002a6e056: hlt    
  0x0000000002a6e057: hlt    
<nmethod compile_id='7' compiler='C1' level='3' entry='0x0000000002a6d520' size='4856' address='0x0000000002a6d310' relocation_offset='288' insts_offset='528' stub_offset='3152' scopes_data_offset='3472' scopes_pcs_offset='4096' dependencies_offset='4832' nul_chk_table_offset='4840' oops_offset='3400' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='1071' iicount='1071' stamp='0.347'/>
Decoding compiled method 0x0000000002a6e650:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000016b242a8} &apos;min
<writer thread='16600'/>
[Loaded java.net.DualStackPlainSocketImpl from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
<writer thread='14520'/>
&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;
  # parm0:    rdx       = int
  # parm1:    r8        = int
  #           [sp+0x40]  (sp of caller)
  0x0000000002a6e7a0: mov    %eax,-0x6000(%rsp)
  0x0000000002a6e7a7: push   %rbp
  0x0000000002a6e7a8: sub    $0x30,%rsp
  0x0000000002a6e7ac: movabs $0x16c1e150,%rax   ;   {metadata(method data for {method} {0x0000000016b242a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002a6e7b6: mov    0xdc(%rax),%esi
  0x0000000002a6e7bc: add    $0x8,%esi
  0x0000000002a6e7bf: mov    %esi,0xdc(%rax)
  0x0000000002a6e7c5: movabs $0x16b242a0,%rax   ;   {metadata({method} {0x0000000016b242a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002a6e7cf: and    $0x1ff8,%esi
  0x0000000002a6e7d5: cmp    $0x0,%esi
  0x0000000002a6e7d8: je     0x0000000002a6e83e  ;*iload_0
                                                ; - java.lang.Math::min@0 (line 1336)

  0x0000000002a6e7de: cmp    %r8d,%edx
  0x0000000002a6e7e1: movabs $0x16c1e150,%rax   ;   {metadata(method data for {method} {0x0000000016b242a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002a6e7eb: movabs $0x108,%rsi
  0x0000000002a6e7f5: jg     0x0000000002a6e805
  0x0000000002a6e7fb: movabs $0x118,%rsi
  0x0000000002a6e805: mov    (%rax,%rsi,1),%rdi
  0x0000000002a6e809: lea    0x1(%rdi),%rdi
  0x0000000002a6e80d: mov    %rdi,(%rax,%rsi,1)
  0x0000000002a6e811: jg     0x0000000002a6e82c  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)

  0x0000000002a6e817: movabs $0x16c1e150,%rax   ;   {metadata(method data for {method} {0x0000000016b242a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002a6e821: incl   0x128(%rax)
  0x0000000002a6e827: jmpq   0x0000000002a6e82f  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)

  0x0000000002a6e82c: mov    %r8,%rdx           ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)

  0x0000000002a6e82f: mov    %rdx,%rax
  0x0000000002a6e832: add    $0x30,%rsp
  0x0000000002a6e836: pop    %rbp
  0x0000000002a6e837: test   %eax,-0x287e73d(%rip)        # 0x00000000001f0100
                                                ;   {poll_return}
  0x0000000002a6e83d: retq   
  0x0000000002a6e83e: mov    %rax,0x8(%rsp)
  0x0000000002a6e843: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002a6e84b: callq  0x0000000002a5f7a0  ; OopMap{off=176}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ;   {runtime_call}
  0x0000000002a6e850: jmp    0x0000000002a6e7de
  0x0000000002a6e852: nop
  0x0000000002a6e853: nop
  0x0000000002a6e854: mov    0x2a8(%r15),%rax
  0x0000000002a6e85b: movabs $0x0,%r10
  0x0000000002a6e865: mov    %r10,0x2a8(%r15)
  0x0000000002a6e86c: movabs $0x0,%r10
  0x0000000002a6e876: mov    %r10,0x2b0(%r15)
  0x0000000002a6e87d: add    $0x30,%rsp
  0x0000000002a6e881: pop    %rbp
  0x0000000002a6e882: jmpq   0x00000000029cf0e0  ;   {runtime_call}
  0x0000000002a6e887: hlt    
  0x0000000002a6e888: hlt    
  0x0000000002a6e889: hlt    
  0x0000000002a6e88a: hlt    
  0x0000000002a6e88b: hlt    
  0x0000000002a6e88c: hlt    
  0x0000000002a6e88d: hlt    
  0x0000000002a6e88e: hlt    
  0x0000000002a6e88f: hlt    
  0x0000000002a6e890: hlt    
  0x0000000002a6e891: hlt    
  0x0000000002a6e892: hlt    
  0x0000000002a6e893: hlt    
  0x0000000002a6e894: hlt    
  0x0000000002a6e895: hlt    
  0x0000000002a6e896: hlt    
  0x0000000002a6e897: hlt    
  0x0000000002a6e898: hlt    
  0x0000000002a6e899: hlt    
  0x0000000002a6e89a: hlt    
  0x0000000002a6e89b: hlt    
  0x0000000002a6e89c: hlt    
  0x0000000002a6e89d: hlt    
  0x0000000002a6e89e: hlt    
  0x0000000002a6e89f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002a6e8a0: callq  0x00000000029cfc60  ;   {no_reloc}
  0x0000000002a6e8a5: mov    %rsp,-0x28(%rsp)
  0x0000000002a6e8aa: sub    $0x80,%rsp
  0x0000000002a6e8b1: mov    %rax,0x78(%rsp)
  0x0000000002a6e8b6: mov    %rcx,0x70(%rsp)
  0x0000000002a6e8bb: mov    %rdx,0x68(%rsp)
  0x0000000002a6e8c0: mov    %rbx,0x60(%rsp)
  0x0000000002a6e8c5: mov    %rbp,0x50(%rsp)
  0x0000000002a6e8ca: mov    %rsi,0x48(%rsp)
  0x0000000002a6e8cf: mov    %rdi,0x40(%rsp)
  0x0000000002a6e8d4: mov    %r8,0x38(%rsp)
  0x0000000002a6e8d9: mov    %r9,0x30(%rsp)
  0x0000000002a6e8de: mov    %r10,0x28(%rsp)
  0x0000000002a6e8e3: mov    %r11,0x20(%rsp)
  0x0000000002a6e8e8: mov    %r12,0x18(%rsp)
  0x0000000002a6e8ed: mov    %r13,0x10(%rsp)
  0x0000000002a6e8f2: mov    %r14,0x8(%rsp)
  0x0000000002a6e8f7: mov    %r15,(%rsp)
  0x0000000002a6e8fb: movabs $0x623d8e30,%rcx   ;   {external_word}
  0x0000000002a6e905: movabs $0x2a6e8a5,%rdx    ;   {internal_word}
  0x0000000002a6e90f: mov    %rsp,%r8
  0x0000000002a6e912: and    $0xfffffffffffffff0,%rsp
  0x0000000002a6e916: callq  0x0000000062093d40  ;   {runtime_call}
  0x0000000002a6e91b: hlt    
[Deopt Handler Code]
  0x0000000002a6e91c: movabs $0x2a6e91c,%r10    ;   {section_word}
  0x0000000002a6e926: push   %r10
  0x0000000002a6e928: jmpq   0x00000000029a7600  ;   {runtime_call}
  0x0000000002a6e92d: hlt    
  0x0000000002a6e92e: hlt    
  0x0000000002a6e92f: hlt    
<nmethod compile_id='8' compiler='C1' level='3' entry='0x0000000002a6e7a0' size='904' address='0x0000000002a6e650' relocation_offset='288' insts_offset='336' stub_offset='592' scopes_data_offset='744' scopes_pcs_offset='784' dependencies_offset='896' method='java/lang/Math min (II)I' bytes='11' count='2065' iicount='2065' stamp='0.351'/>
<writer thread='1672'/>
[Loaded java.lang.ProcessEnvironment$CheckedEntrySet$1 from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.HashMap$HashIterator from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.util.HashMap$EntryIterator from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.ProcessEnvironment$CheckedEntry from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
<writer thread='14520'/>
Decoding compiled method 0x0000000002a6ea10:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000016a33160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8:r8     = &apos;[C&apos;
  # parm1:    r9        = int
  # parm2:    rdi       = int
  #           [sp+0x70]  (sp of caller)
  0x0000000002a6ebe0: mov    0x8(%rdx),%r10d
  0x0000000002a6ebe4: shl    $0x3,%r10
  0x0000000002a6ebe8: cmp    %rax,%r10
  0x0000000002a6ebeb: jne    0x00000000029a5f60  ;   {runtime_call}
  0x0000000002a6ebf1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002a6ebfc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002a6ec00: mov    %eax,-0x6000(%rsp)
  0x0000000002a6ec07: push   %rbp
  0x0000000002a6ec08: sub    $0x60,%rsp
  0x0000000002a6ec0c: movabs $0x16c58b98,%rsi   ;   {metadata(method data for {method} {0x0000000016a33160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a6ec16: mov    0xdc(%rsi),%ebx
  0x0000000002a6ec1c: add    $0x8,%ebx
  0x0000000002a6ec1f: mov    %ebx,0xdc(%rsi)
  0x0000000002a6ec25: movabs $0x16a33158,%rsi   ;   {metadata({method} {0x0000000016a33160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a6ec2f: and    $0x1ff8,%ebx
  0x0000000002a6ec35: cmp    $0x0,%ebx
  0x0000000002a6ec38: je     0x0000000002a6eefe  ;*aload_0
                                                ; - java.lang.String::&lt;init&gt;@0 (line 190)

  0x0000000002a6ec3e: mov    %rdx,%rsi
  0x0000000002a6ec41: movabs $0x16c58b98,%rbx   ;   {metadata(method data for {method} {0x0000000016a33160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a6ec4b: addq   $0x1,0x108(%rbx)
  0x0000000002a6ec53: movabs $0x16b633b0,%rsi   ;   {metadata(method data for {method} {0x0000000016a30488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002a6ec5d: mov    0xdc(%rsi),%ebx
  0x0000000002a6ec63: add    $0x8,%ebx
  0x0000000002a6ec66: mov    %ebx,0xdc(%rsi)
  0x0000000002a6ec6c: movabs $0x16a30480,%rsi   ;   {metadata({method} {0x0000000016a30488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002a6ec76: and    $0x7ffff8,%ebx
  0x0000000002a6ec7c: cmp    $0x0,%ebx
  0x0000000002a6ec7f: je     0x0000000002a6ef15
  0x0000000002a6ec85: cmp    $0x0,%r9d
  0x0000000002a6ec89: movabs $0x16c58b98,%rsi   ;   {metadata(method data for {method} {0x0000000016a33160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a6ec93: movabs $0x118,%rbx
  0x0000000002a6ec9d: jge    0x0000000002a6ecad
  0x0000000002a6eca3: movabs $0x128,%rbx
  0x0000000002a6ecad: mov    (%rsi,%rbx,1),%rax
  0x0000000002a6ecb1: lea    0x1(%rax),%rax
  0x0000000002a6ecb5: mov    %rax,(%rsi,%rbx,1)
  0x0000000002a6ecb9: jl     0x0000000002a6eebe  ;*ifge
                                                ; - java.lang.String::&lt;init&gt;@5 (line 191)

  0x0000000002a6ecbf: cmp    $0x0,%edi
  0x0000000002a6ecc2: movabs $0x16c58b98,%rsi   ;   {metadata(method data for {method} {0x0000000016a33160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a6eccc: movabs $0x148,%rbx
  0x0000000002a6ecd6: jg     0x0000000002a6ece6
  0x0000000002a6ecdc: movabs $0x158,%rbx
  0x0000000002a6ece6: mov    (%rsi,%rbx,1),%rax
  0x0000000002a6ecea: lea    0x1(%rax),%rax
  0x0000000002a6ecee: mov    %rax,(%rsi,%rbx,1)
  0x0000000002a6ecf2: jg     0x0000000002a6ed6e  ;*ifgt
                                                ; - java.lang.String::&lt;init&gt;@18 (line 194)

  0x0000000002a6ecf8: cmp    $0x0,%edi
  0x0000000002a6ecfb: movabs $0x16c58b98,%rsi   ;   {metadata(method data for {method} {0x0000000016a33160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a6ed05: movabs $0x168,%rbx
  0x0000000002a6ed0f: jge    0x0000000002a6ed1f
  0x0000000002a6ed15: movabs $0x178,%rbx
  0x0000000002a6ed1f: mov    (%rsi,%rbx,1),%rax
  0x0000000002a6ed23: lea    0x1(%rax),%rax
  0x0000000002a6ed27: mov    %rax,(%rsi,%rbx,1)
  0x0000000002a6ed2b: jl     0x0000000002a6ee7e  ;*ifge
                                                ; - java.lang.String::&lt;init&gt;@22 (line 195)

  0x0000000002a6ed31: mov    0xc(%r8),%esi      ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@36 (line 198)
                                                ; implicit exception: dispatches to 0x0000000002a6ef2c
  0x0000000002a6ed35: cmp    %esi,%r9d
  0x0000000002a6ed38: movabs $0x16c58b98,%rsi   ;   {metadata(method data for {method} {0x0000000016a33160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a6ed42: movabs $0x198,%rbx
  0x0000000002a6ed4c: jg     0x0000000002a6ed5c
  0x0000000002a6ed52: movabs $0x1a8,%rbx
  0x0000000002a6ed5c: mov    (%rsi,%rbx,1),%rax
  0x0000000002a6ed60: lea    0x1(%rax),%rax
  0x0000000002a6ed64: mov    %rax,(%rsi,%rbx,1)
  0x0000000002a6ed68: jle    0x0000000002a6ee06  ;*if_icmpgt
                                                ; - java.lang.String::&lt;init&gt;@37 (line 198)

  0x0000000002a6ed6e: mov    0xc(%r8),%esi      ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@52 (line 204)
                                                ; implicit exception: dispatches to 0x0000000002a6ef31
  0x0000000002a6ed72: sub    %edi,%esi
  0x0000000002a6ed74: cmp    %esi,%r9d
  0x0000000002a6ed77: movabs $0x16c58b98,%rsi   ;   {metadata(method data for {method} {0x0000000016a33160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a6ed81: movabs $0x1b8,%rbx
  0x0000000002a6ed8b: jle    0x0000000002a6ed9b
  0x0000000002a6ed91: movabs $0x1c8,%rbx
  0x0000000002a6ed9b: mov    (%rsi,%rbx,1),%rax
  0x0000000002a6ed9f: lea    0x1(%rax),%rax
  0x0000000002a6eda3: mov    %rax,(%rsi,%rbx,1)
  0x0000000002a6eda7: jg     0x0000000002a6ee38  ;*if_icmple
                                                ; - java.lang.String::&lt;init&gt;@55 (line 204)

  0x0000000002a6edad: mov    %rdx,0x38(%rsp)
  0x0000000002a6edb2: movabs $0x16c58b98,%rsi   ;   {metadata(method data for {method} {0x0000000016a33160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a6edbc: addq   $0x1,0x1e8(%rsi)
  0x0000000002a6edc4: add    %r9d,%edi
  0x0000000002a6edc7: mov    %r8,%rdx
  0x0000000002a6edca: mov    %r9,%r8
  0x0000000002a6edcd: mov    %rdi,%r9           ;*invokestatic copyOfRange
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)

  0x0000000002a6edd0: nop
  0x0000000002a6edd1: nop
  0x0000000002a6edd2: nop
  0x0000000002a6edd3: nop
  0x0000000002a6edd4: nop
  0x0000000002a6edd5: nop
  0x0000000002a6edd6: nop
  0x0000000002a6edd7: callq  0x00000000029a6620  ; OopMap{[56]=Oop off=508}
                                                ;*invokestatic copyOfRange
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ;   {static_call}
  0x0000000002a6eddc: mov    0x38(%rsp),%rdx
  0x0000000002a6ede1: mov    %rax,%r10
  0x0000000002a6ede4: mov    %r10d,0xc(%rdx)
  0x0000000002a6ede8: shr    $0x9,%rdx
  0x0000000002a6edec: movabs $0x11909000,%rax
  0x0000000002a6edf6: movb   $0x0,(%rdx,%rax,1)  ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@78 (line 207)

  0x0000000002a6edfa: add    $0x60,%rsp
  0x0000000002a6edfe: pop    %rbp
  0x0000000002a6edff: test   %eax,-0x287ed05(%rip)        # 0x00000000001f0100
                                                ;   {poll_return}
  0x0000000002a6ee05: retq                      ;*return
                                                ; - java.lang.String::&lt;init&gt;@81 (line 208)

  0x0000000002a6ee06: movabs $0xd650aa88,%rax   ;   {oop(&quot;&quot;)}
  0x0000000002a6ee10: mov    0xc(%rax),%eax     ;*getfield value
                                                ; - java.lang.String::&lt;init&gt;@43 (line 199)
                                                ; implicit exception: dispatches to 0x0000000002a6ef36
  0x0000000002a6ee13: mov    %rax,%r10
  0x0000000002a6ee16: mov    %r10d,0xc(%rdx)
  0x0000000002a6ee1a: shr    $0x9,%rdx
  0x0000000002a6ee1e: movabs $0x11909000,%rax
  0x0000000002a6ee28: movb   $0x0,(%rdx,%rax,1)  ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@46 (line 199)

  0x0000000002a6ee2c: add    $0x60,%rsp
  0x0000000002a6ee30: pop    %rbp
  0x0000000002a6ee31: test   %eax,-0x287ed37(%rip)        # 0x00000000001f0100
                                                ;   {poll_return}
  0x0000000002a6ee37: retq                      ;*return
                                                ; - java.lang.String::&lt;init&gt;@49 (line 200)

  0x0000000002a6ee38: jmpq   0x0000000002a6ef4a  ;   {no_reloc}
  0x0000000002a6ee3d: add    %al,(%rax)
  0x0000000002a6ee3f: add    %al,(%rax)
  0x0000000002a6ee41: add    %ch,%cl
  0x0000000002a6ee43: or     $0x4c000001,%eax   ;*new  ; - java.lang.String::&lt;init&gt;@58 (line 205)

  0x0000000002a6ee48: mov    %eax,%eax
  0x0000000002a6ee4a: movabs $0x16c58b98,%rdx   ;   {metadata(method data for {method} {0x0000000016a33160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a6ee54: addq   $0x1,0x1d8(%rdx)
  0x0000000002a6ee5c: add    %r9d,%edi
  0x0000000002a6ee5f: mov    %rdi,%r8
  0x0000000002a6ee62: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@65 (line 205)

  0x0000000002a6ee65: mov    %rax,0x40(%rsp)
  0x0000000002a6ee6a: nop
  0x0000000002a6ee6b: nop
  0x0000000002a6ee6c: nop
  0x0000000002a6ee6d: nop
  0x0000000002a6ee6e: nop
  0x0000000002a6ee6f: callq  0x00000000029a61a0  ; OopMap{[64]=Oop off=660}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@65 (line 205)
                                                ;   {optimized virtual_call}
  0x0000000002a6ee74: mov    0x40(%rsp),%rax
  0x0000000002a6ee79: jmpq   0x0000000002a6efd8  ;*athrow
                                                ; - java.lang.String::&lt;init&gt;@68 (line 205)

  0x0000000002a6ee7e: xchg   %ax,%ax
  0x0000000002a6ee80: jmpq   0x0000000002a6ef70  ;   {no_reloc}
  0x0000000002a6ee85: add    %al,(%rax)
  0x0000000002a6ee87: add    %al,(%rax)
  0x0000000002a6ee89: add    %ch,%cl
  0x0000000002a6ee8b: jmp    0x0000000002a6ee8d
  0x0000000002a6ee8d: add    %al,(%rax)         ;*new  ; - java.lang.String::&lt;init&gt;@25 (line 196)

  0x0000000002a6ee8f: mov    %rax,%r8
  0x0000000002a6ee92: movabs $0x16c58b98,%rdx   ;   {metadata(method data for {method} {0x0000000016a33160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a6ee9c: addq   $0x1,0x188(%rdx)
  0x0000000002a6eea4: mov    %rdi,%r8
  0x0000000002a6eea7: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@30 (line 196)

  0x0000000002a6eeaa: mov    %rax,0x48(%rsp)
  0x0000000002a6eeaf: callq  0x00000000029a61a0  ; OopMap{[72]=Oop off=724}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@30 (line 196)
                                                ;   {optimized virtual_call}
  0x0000000002a6eeb4: mov    0x48(%rsp),%rax
  0x0000000002a6eeb9: jmpq   0x0000000002a6efd8  ;*athrow
                                                ; - java.lang.String::&lt;init&gt;@33 (line 196)

  0x0000000002a6eebe: xchg   %ax,%ax
  0x0000000002a6eec0: jmpq   0x0000000002a6ef96  ;   {no_reloc}
  0x0000000002a6eec5: add    %al,(%rax)
  0x0000000002a6eec7: add    %al,(%rax)
  0x0000000002a6eec9: add    %ch,%cl
  0x0000000002a6eecb: roll   (%rax)
  0x0000000002a6eecd: add    %al,(%rax)         ;*new  ; - java.lang.String::&lt;init&gt;@8 (line 192)

  0x0000000002a6eecf: mov    %rax,%r8
  0x0000000002a6eed2: movabs $0x16c58b98,%rdx   ;   {metadata(method data for {method} {0x0000000016a33160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a6eedc: addq   $0x1,0x138(%rdx)
  0x0000000002a6eee4: mov    %r9,%r8
  0x0000000002a6eee7: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@13 (line 192)

  0x0000000002a6eeea: mov    %rax,0x50(%rsp)
  0x0000000002a6eeef: callq  0x00000000029a61a0  ; OopMap{[80]=Oop off=788}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@13 (line 192)
                                                ;   {optimized virtual_call}
  0x0000000002a6eef4: mov    0x50(%rsp),%rax
  0x0000000002a6eef9: jmpq   0x0000000002a6efd8
  0x0000000002a6eefe: mov    %rsi,0x8(%rsp)
  0x0000000002a6ef03: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002a6ef0b: callq  0x0000000002a5f7a0  ; OopMap{rdx=Oop r8=Oop off=816}
                                                ;*synchronization entry
                                                ; - java.lang.String::&lt;init&gt;@-1 (line 190)
                                                ;   {runtime_call}
  0x0000000002a6ef10: jmpq   0x0000000002a6ec3e
  0x0000000002a6ef15: mov    %rsi,0x8(%rsp)
  0x0000000002a6ef1a: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002a6ef22: callq  0x0000000002a5f7a0  ; OopMap{rdx=Oop r8=Oop off=839}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.String::&lt;init&gt;@1 (line 190)
                                                ;   {runtime_call}
  0x0000000002a6ef27: jmpq   0x0000000002a6ec85
  0x0000000002a6ef2c: callq  0x00000000029d1b80  ; OopMap{rdx=Oop r8=Oop off=849}
                                                ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@36 (line 198)
                                                ;   {runtime_call}
  0x0000000002a6ef31: callq  0x00000000029d1b80  ; OopMap{rdx=Oop r8=Oop off=854}
                                                ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@52 (line 204)
                                                ;   {runtime_call}
  0x0000000002a6ef36: callq  0x00000000029d1b80  ; OopMap{rdx=Oop off=859}
                                                ;*getfield value
                                                ; - java.lang.String::&lt;init&gt;@43 (line 199)
                                                ;   {runtime_call}
  0x0000000002a6ef3b: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002a6ef45: mov    $0xa050f00,%eax
  0x0000000002a6ef4a: callq  0x0000000002a606a0  ; OopMap{off=879}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@58 (line 205)
                                                ;   {runtime_call}
  0x0000000002a6ef4f: jmpq   0x0000000002a6ee38
  0x0000000002a6ef54: mov    %rdx,%rdx
  0x0000000002a6ef57: callq  0x00000000029d1660  ; OopMap{off=892}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@58 (line 205)
                                                ;   {runtime_call}
  0x0000000002a6ef5c: jmpq   0x0000000002a6ee47
  0x0000000002a6ef61: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002a6ef6b: mov    $0xa050f00,%eax
  0x0000000002a6ef70: callq  0x0000000002a606a0  ; OopMap{off=917}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@25 (line 196)
                                                ;   {runtime_call}
  0x0000000002a6ef75: jmpq   0x0000000002a6ee80
  0x0000000002a6ef7a: mov    %rdx,%rdx
  0x0000000002a6ef7d: callq  0x00000000029d1660  ; OopMap{off=930}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@25 (line 196)
                                                ;   {runtime_call}
  0x0000000002a6ef82: jmpq   0x0000000002a6ee8f
  0x0000000002a6ef87: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002a6ef91: mov    $0xa050f00,%eax
  0x0000000002a6ef96: callq  0x0000000002a606a0  ; OopMap{off=955}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@8 (line 192)
                                                ;   {runtime_call}
  0x0000000002a6ef9b: jmpq   0x0000000002a6eec0
  0x0000000002a6efa0: mov    %rdx,%rdx
  0x0000000002a6efa3: callq  0x00000000029d1660  ; OopMap{off=968}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@8 (line 192)
                                                ;   {runtime_call}
  0x0000000002a6efa8: jmpq   0x0000000002a6eecf
  0x0000000002a6efad: nop
  0x0000000002a6efae: nop
  0x0000000002a6efaf: mov    0x2a8(%r15),%rax
  0x0000000002a6efb6: movabs $0x0,%r10
  0x0000000002a6efc0: mov    %r10,0x2a8(%r15)
  0x0000000002a6efc7: movabs $0x0,%r10
  0x0000000002a6efd1: mov    %r10,0x2b0(%r15)
  0x0000000002a6efd8: add    $0x60,%rsp
  0x0000000002a6efdc: pop    %rbp
  0x0000000002a6efdd: jmpq   0x00000000029cf0e0  ;   {runtime_call}
  0x0000000002a6efe2: hlt    
  0x0000000002a6efe3: hlt    
  0x0000000002a6efe4: hlt    
  0x0000000002a6efe5: hlt    
  0x0000000002a6efe6: hlt    
  0x0000000002a6efe7: hlt    
  0x0000000002a6efe8: hlt    
  0x0000000002a6efe9: hlt    
  0x0000000002a6efea: hlt    
  0x0000000002a6efeb: hlt    
  0x0000000002a6efec: hlt    
  0x0000000002a6efed: hlt    
  0x0000000002a6efee: hlt    
  0x0000000002a6efef: hlt    
  0x0000000002a6eff0: hlt    
  0x0000000002a6eff1: hlt    
  0x0000000002a6eff2: hlt    
  0x0000000002a6eff3: hlt    
  0x0000000002a6eff4: hlt    
  0x0000000002a6eff5: hlt    
  0x0000000002a6eff6: hlt    
  0x0000000002a6eff7: hlt    
  0x0000000002a6eff8: hlt    
  0x0000000002a6eff9: hlt    
  0x0000000002a6effa: hlt    
  0x0000000002a6effb: hlt    
  0x0000000002a6effc: hlt    
  0x0000000002a6effd: hlt    
  0x0000000002a6effe: hlt    
  0x0000000002a6efff: hlt    
[Stub Code]
  0x0000000002a6f000: nop                       ;   {no_reloc}
  0x0000000002a6f001: nop
  0x0000000002a6f002: nop
  0x0000000002a6f003: nop
  0x0000000002a6f004: nop
  0x0000000002a6f005: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002a6f00f: jmpq   0x0000000002a6f00f  ;   {runtime_call}
  0x0000000002a6f014: nop
  0x0000000002a6f015: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002a6f01f: jmpq   0x0000000002a6f01f  ;   {runtime_call}
  0x0000000002a6f024: nop
  0x0000000002a6f025: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002a6f02f: jmpq   0x0000000002a6f02f  ;   {runtime_call}
  0x0000000002a6f034: nop
  0x0000000002a6f035: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002a6f03f: jmpq   0x0000000002a6f03f  ;   {runtime_call}
[Exception Handler]
  0x0000000002a6f044: callq  0x00000000029cfc60  ;   {runtime_call}
  0x0000000002a6f049: mov    %rsp,-0x28(%rsp)
  0x0000000002a6f04e: sub    $0x80,%rsp
  0x0000000002a6f055: mov    %rax,0x78(%rsp)
  0x0000000002a6f05a: mov    %rcx,0x70(%rsp)
  0x0000000002a6f05f: mov    %rdx,0x68(%rsp)
  0x0000000002a6f064: mov    %rbx,0x60(%rsp)
  0x0000000002a6f069: mov    %rbp,0x50(%rsp)
  0x0000000002a6f06e: mov    %rsi,0x48(%rsp)
  0x0000000002a6f073: mov    %rdi,0x40(%rsp)
  0x0000000002a6f078: mov    %r8,0x38(%rsp)
  0x0000000002a6f07d: mov    %r9,0x30(%rsp)
  0x0000000002a6f082: mov    %r10,0x28(%rsp)
  0x0000000002a6f087: mov    %r11,0x20(%rsp)
  0x0000000002a6f08c: mov    %r12,0x18(%rsp)
  0x0000000002a6f091: mov    %r13,0x10(%rsp)
  0x0000000002a6f096: mov    %r14,0x8(%rsp)
  0x0000000002a6f09b: mov    %r15,(%rsp)
  0x0000000002a6f09f: movabs $0x623d8e30,%rcx   ;   {external_word}
  0x0000000002a6f0a9: movabs $0x2a6f049,%rdx    ;   {internal_word}
  0x0000000002a6f0b3: mov    %rsp,%r8
  0x0000000002a6f0b6: and    $0xfffffffffffffff0,%rsp
  0x0000000002a6f0ba: callq  0x0000000062093d40  ;   {runtime_call}
  0x0000000002a6f0bf: hlt    
[Deopt Handler Code]
  0x0000000002a6f0c0: movabs $0x2a6f0c0,%r10    ;   {section_word}
  0x0000000002a6f0ca: push   %r10
  0x0000000002a6f0cc: jmpq   0x00000000029a7600  ;   {runtime_call}
  0x0000000002a6f0d1: hlt    
  0x0000000002a6f0d2: hlt    
  0x0000000002a6f0d3: hlt    
  0x0000000002a6f0d4: hlt    
  0x0000000002a6f0d5: hlt    
  0x0000000002a6f0d6: hlt    
  0x0000000002a6f0d7: hlt    
<nmethod compile_id='5' compiler='C1' level='3' entry='0x0000000002a6ebe0' size='2704' address='0x0000000002a6ea10' relocation_offset='288' insts_offset='464' stub_offset='1520' scopes_data_offset='1752' scopes_pcs_offset='2040' dependencies_offset='2664' nul_chk_table_offset='2672' method='java/lang/String &lt;init&gt; ([CII)V' bytes='82' count='947' iicount='947' stamp='0.367'/>
<writer thread='1672'/>
<task_queued compile_id='9' method='java/lang/CharacterData of (I)Ljava/lang/CharacterData;' bytes='120' count='4224' iicount='4224' level='3' stamp='0.367' comment='tiered' hot_count='4224'/>
<task_queued compile_id='10' method='java/lang/CharacterDataLatin1 getProperties (I)I' bytes='11' count='4224' iicount='4224' level='3' stamp='0.367' comment='tiered' hot_count='4224'/>
<task_queued compile_id='11' method='java/util/TreeMap parentOf (Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;' bytes='13' count='9984' iicount='9984' stamp='0.367' comment='tiered' hot_count='9984'/>
<task_queued compile_id='12' method='java/lang/String charAt (I)C' bytes='29' count='105728' iicount='105728' stamp='0.367' comment='tiered' hot_count='105728'/>
<writer thread='14520'/>
Decoding compiled method 0x0000000002a6f6d0:
<writer thread='16600'/>
[Loaded java.net.SocksSocketImpl$3 from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
<writer thread='14520'/>
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000016c036c0} &apos;of&apos; &apos;(I)Ljava/lang/CharacterData;&apos; in &apos;java/lang/CharacterData&apos;
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x0000000002a6f880: mov    %eax,-0x6000(%rsp)
  0x0000000002a6f887: push   %rbp
  0x0000000002a6f888: sub    $0x30,%rsp
  0x0000000002a6f88c: movabs $0x16c05290,%rax   ;   {metadata(method data for {method} {0x0000000016c036c0} &apos;of&apos; &apos;(I)Ljava/lang/CharacterData;&apos; in &apos;java/lang/CharacterData&apos;)}
  0x0000000002a6f896: mov    0xdc(%rax),%esi
  0x0000000002a6f89c: add    $0x8,%esi
  0x0000000002a6f89f: mov    %esi,0xdc(%rax)
  0x0000000002a6f8a5: movabs $0x16c036b8,%rax   ;   {metadata({method} {0x0000000016c036c0} &apos;of&apos; &apos;(I)Ljava/lang/CharacterData;&apos; in &apos;java/lang/CharacterData&apos;)}
  0x0000000002a6f8af: and    $0x1ff8,%esi
  0x0000000002a6f8b5: cmp    $0x0,%esi
  0x0000000002a6f8b8: je     0x0000000002a6fa38  ;*iload_0
                                                ; - java.lang.CharacterData::of@0 (line 77)

  0x0000000002a6f8be: mov    %rdx,%rax
  0x0000000002a6f8c1: shr    $0x8,%eax
  0x0000000002a6f8c4: cmp    $0x0,%eax
  0x0000000002a6f8c7: movabs $0x16c05290,%rax   ;   {metadata(method data for {method} {0x0000000016c036c0} &apos;of&apos; &apos;(I)Ljava/lang/CharacterData;&apos; in &apos;java/lang/CharacterData&apos;)}
  0x0000000002a6f8d1: movabs $0x108,%rsi
  0x0000000002a6f8db: jne    0x0000000002a6f8eb
  0x0000000002a6f8e1: movabs $0x118,%rsi
  0x0000000002a6f8eb: mov    (%rax,%rsi,1),%rdi
  0x0000000002a6f8ef: lea    0x1(%rdi),%rdi
  0x0000000002a6f8f3: mov    %rdi,(%rax,%rsi,1)
  0x0000000002a6f8f7: je     0x0000000002a6fa22  ;*ifne
                                                ; - java.lang.CharacterData::of@4 (line 77)

  0x0000000002a6f8fd: shr    $0x10,%edx
  0x0000000002a6f900: cmp    $0x0,%edx
  0x0000000002a6f903: je     0x0000000002a6f9fa
  0x0000000002a6f909: cmp    $0x1,%edx
  0x0000000002a6f90c: je     0x0000000002a6f9d2
  0x0000000002a6f912: cmp    $0x2,%edx
  0x0000000002a6f915: je     0x0000000002a6f9aa
  0x0000000002a6f91b: cmp    $0xe,%edx
  0x0000000002a6f91e: je     0x0000000002a6f982
  0x0000000002a6f924: cmp    $0xf,%edx
  0x0000000002a6f927: je     0x0000000002a6f936
  0x0000000002a6f92d: cmp    $0x10,%edx
  0x0000000002a6f930: jne    0x0000000002a6f95a  ;*tableswitch
                                                ; - java.lang.CharacterData::of@15 (line 80)

  0x0000000002a6f936: xchg   %ax,%ax
  0x0000000002a6f938: jmpq   0x0000000002a6faac  ;   {no_reloc}
  0x0000000002a6f93d: add    %al,(%rax)
  0x0000000002a6f93f: add    %al,(%rax)
  0x0000000002a6f941: add    %ah,0xf(%rsi)
  0x0000000002a6f944: (bad)  
  0x0000000002a6f945: add    %r8b,(%rax)
  0x0000000002a6f948: jmpq   0x0000000002a6fac6  ; implicit exception: dispatches to 0x0000000002a6fab6
  0x0000000002a6f94d: nop                       ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112 (line 91)

  0x0000000002a6f94e: add    $0x30,%rsp
  0x0000000002a6f952: pop    %rbp
  0x0000000002a6f953: test   %eax,-0x287f859(%rip)        # 0x00000000001f0100
                                                ;   {poll_return}
  0x0000000002a6f959: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@115 (line 91)

  0x0000000002a6f95a: nopw   0x0(%rax,%rax,1)
  0x0000000002a6f960: jmpq   0x0000000002a6fb2d  ;   {no_reloc}
  0x0000000002a6f965: add    %al,(%rax)
  0x0000000002a6f967: add    %al,(%rax)
  0x0000000002a6f969: add    %ah,0xf(%rsi)
  0x0000000002a6f96c: (bad)  
  0x0000000002a6f96d: add    %r8b,(%rax)
  0x0000000002a6f970: jmpq   0x0000000002a6fb47  ; implicit exception: dispatches to 0x0000000002a6fb37
  0x0000000002a6f975: nop                       ;*getstatic instance
                                                ; - java.lang.CharacterData::of@116 (line 93)

  0x0000000002a6f976: add    $0x30,%rsp
  0x0000000002a6f97a: pop    %rbp
  0x0000000002a6f97b: test   %eax,-0x287f881(%rip)        # 0x00000000001f0100
                                                ;   {poll_return}
  0x0000000002a6f981: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@119 (line 93)

  0x0000000002a6f982: nopw   0x0(%rax,%rax,1)
  0x0000000002a6f988: jmpq   0x0000000002a6fbae  ;   {no_reloc}
  0x0000000002a6f98d: add    %al,(%rax)
  0x0000000002a6f98f: add    %al,(%rax)
  0x0000000002a6f991: add    %ah,0xf(%rsi)
  0x0000000002a6f994: (bad)  
  0x0000000002a6f995: add    %r8b,(%rax)
  0x0000000002a6f998: jmpq   0x0000000002a6fbc8  ; implicit exception: dispatches to 0x0000000002a6fbb8
  0x0000000002a6f99d: nop                       ;*getstatic instance
                                                ; - java.lang.CharacterData::of@108 (line 88)

  0x0000000002a6f99e: add    $0x30,%rsp
  0x0000000002a6f9a2: pop    %rbp
  0x0000000002a6f9a3: test   %eax,-0x287f8a9(%rip)        # 0x00000000001f0100
                                                ;   {poll_return}
  0x0000000002a6f9a9: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@111 (line 88)

  0x0000000002a6f9aa: nopw   0x0(%rax,%rax,1)
  0x0000000002a6f9b0: jmpq   0x0000000002a6fc2f  ;   {no_reloc}
  0x0000000002a6f9b5: add    %al,(%rax)
  0x0000000002a6f9b7: add    %al,(%rax)
  0x0000000002a6f9b9: add    %ah,0xf(%rsi)
  0x0000000002a6f9bc: (bad)  
  0x0000000002a6f9bd: add    %r8b,(%rax)
  0x0000000002a6f9c0: jmpq   0x0000000002a6fc49  ; implicit exception: dispatches to 0x0000000002a6fc39
  0x0000000002a6f9c5: nop                       ;*getstatic instance
                                                ; - java.lang.CharacterData::of@104 (line 86)

  0x0000000002a6f9c6: add    $0x30,%rsp
  0x0000000002a6f9ca: pop    %rbp
  0x0000000002a6f9cb: test   %eax,-0x287f8d1(%rip)        # 0x00000000001f0100
                                                ;   {poll_return}
  0x0000000002a6f9d1: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@107 (line 86)

  0x0000000002a6f9d2: nopw   0x0(%rax,%rax,1)
  0x0000000002a6f9d8: jmpq   0x0000000002a6fcb0  ;   {no_reloc}
  0x0000000002a6f9dd: add    %al,(%rax)
  0x0000000002a6f9df: add    %al,(%rax)
  0x0000000002a6f9e1: add    %ah,0xf(%rsi)
  0x0000000002a6f9e4: (bad)  
  0x0000000002a6f9e5: add    %r8b,(%rax)
  0x0000000002a6f9e8: jmpq   0x0000000002a6fcca  ; implicit exception: dispatches to 0x0000000002a6fcba
  0x0000000002a6f9ed: nop                       ;*getstatic instance
                                                ; - java.lang.CharacterData::of@100 (line 84)

  0x0000000002a6f9ee: add    $0x30,%rsp
  0x0000000002a6f9f2: pop    %rbp
  0x0000000002a6f9f3: test   %eax,-0x287f8f9(%rip)        # 0x00000000001f0100
                                                ;   {poll_return}
  0x0000000002a6f9f9: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@103 (line 84)

  0x0000000002a6f9fa: nopw   0x0(%rax,%rax,1)
  0x0000000002a6fa00: jmpq   0x0000000002a6fd31  ;   {no_reloc}
  0x0000000002a6fa05: add    %al,(%rax)
  0x0000000002a6fa07: add    %al,(%rax)
  0x0000000002a6fa09: add    %ah,0xf(%rsi)
  0x0000000002a6fa0c: (bad)  
  0x0000000002a6fa0d: add    %r8b,(%rax)
  0x0000000002a6fa10: jmpq   0x0000000002a6fd4b  ; implicit exception: dispatches to 0x0000000002a6fd3b
  0x0000000002a6fa15: nop                       ;*getstatic instance
                                                ; - java.lang.CharacterData::of@96 (line 82)

  0x0000000002a6fa16: add    $0x30,%rsp
  0x0000000002a6fa1a: pop    %rbp
  0x0000000002a6fa1b: test   %eax,-0x287f921(%rip)        # 0x00000000001f0100
                                                ;   {poll_return}
  0x0000000002a6fa21: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@99 (line 82)

  0x0000000002a6fa22: movabs $0xd658bcd8,%rax   ;   {oop(a &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000002a6fa2c: add    $0x30,%rsp
  0x0000000002a6fa30: pop    %rbp
  0x0000000002a6fa31: test   %eax,-0x287f937(%rip)        # 0x00000000001f0100
                                                ;   {poll_return}
  0x0000000002a6fa37: retq   
  0x0000000002a6fa38: mov    %rax,0x8(%rsp)
  0x0000000002a6fa3d: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002a6fa45: callq  0x0000000002a5f7a0  ; OopMap{off=458}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterData::of@-1 (line 77)
                                                ;   {runtime_call}
  0x0000000002a6fa4a: jmpq   0x0000000002a6f8be
  0x0000000002a6fa4f: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000000002a6fa59: push   %rax
  0x0000000002a6fa5a: push   %rbx
  0x0000000002a6fa5b: mov    0x48(%rax),%rbx
  0x0000000002a6fa5f: push   %rdi
  0x0000000002a6fa60: push   %rsi
  0x0000000002a6fa61: push   %rdx
  0x0000000002a6fa62: push   %rcx
  0x0000000002a6fa63: push   %r8
  0x0000000002a6fa65: push   %r9
  0x0000000002a6fa67: push   %r10
  0x0000000002a6fa69: mov    %rsp,%r10
  0x0000000002a6fa6c: and    $0xfffffffffffffff0,%rsp
  0x0000000002a6fa70: push   %r10
  0x0000000002a6fa72: push   %r11
  0x0000000002a6fa74: mov    $0x7,%ecx
  0x0000000002a6fa79: movabs $0x7ff855285e40,%r10  ;   {runtime_call}
  0x0000000002a6fa83: callq  *%r10
  0x0000000002a6fa86: pop    %r11
  0x0000000002a6fa88: pop    %rsp
  0x0000000002a6fa89: pop    %r10
  0x0000000002a6fa8b: pop    %r9
  0x0000000002a6fa8d: pop    %r8
  0x0000000002a6fa8f: pop    %rcx
  0x0000000002a6fa90: pop    %rdx
  0x0000000002a6fa91: pop    %rsi
  0x0000000002a6fa92: pop    %rdi
  0x0000000002a6fa93: cmp    0x118(%rbx),%rax
  0x0000000002a6fa9a: pop    %rbx
  0x0000000002a6fa9b: pop    %rax
  0x0000000002a6fa9c: jne    0x0000000002a6faac
  0x0000000002a6faa2: jmpq   0x0000000002a6f942
  0x0000000002a6faa7: mov    $0xa535d00,%eax
  0x0000000002a6faac: callq  0x0000000002a60260  ; OopMap{off=561}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112 (line 91)
                                                ;   {runtime_call}
  0x0000000002a6fab1: jmpq   0x0000000002a6f938
  0x0000000002a6fab6: callq  0x00000000029d1b80  ; OopMap{rax=Oop off=571}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112 (line 91)
                                                ;   {runtime_call}
  0x0000000002a6fabb: mov    0x0(%rax),%eax
  0x0000000002a6fac1: mov    $0x6050b00,%eax
  0x0000000002a6fac6: callq  0x0000000002a60ae0  ; OopMap{rax=Oop off=587}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112 (line 91)
                                                ;   {runtime_call}
  0x0000000002a6facb: jmpq   0x0000000002a6f948
  0x0000000002a6fad0: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000000002a6fada: push   %rax
  0x0000000002a6fadb: push   %rbx
  0x0000000002a6fadc: mov    0x48(%rax),%rbx
  0x0000000002a6fae0: push   %rdi
  0x0000000002a6fae1: push   %rsi
  0x0000000002a6fae2: push   %rdx
  0x0000000002a6fae3: push   %rcx
  0x0000000002a6fae4: push   %r8
  0x0000000002a6fae6: push   %r9
  0x0000000002a6fae8: push   %r10
  0x0000000002a6faea: mov    %rsp,%r10
  0x0000000002a6faed: and    $0xfffffffffffffff0,%rsp
  0x0000000002a6faf1: push   %r10
  0x0000000002a6faf3: push   %r11
  0x0000000002a6faf5: mov    $0x7,%ecx
  0x0000000002a6fafa: movabs $0x7ff855285e40,%r10  ;   {runtime_call}
  0x0000000002a6fb04: callq  *%r10
  0x0000000002a6fb07: pop    %r11
  0x0000000002a6fb09: pop    %rsp
  0x0000000002a6fb0a: pop    %r10
  0x0000000002a6fb0c: pop    %r9
  0x0000000002a6fb0e: pop    %r8
  0x0000000002a6fb10: pop    %rcx
  0x0000000002a6fb11: pop    %rdx
  0x0000000002a6fb12: pop    %rsi
  0x0000000002a6fb13: pop    %rdi
  0x0000000002a6fb14: cmp    0x118(%rbx),%rax
  0x0000000002a6fb1b: pop    %rbx
  0x0000000002a6fb1c: pop    %rax
  0x0000000002a6fb1d: jne    0x0000000002a6fb2d
  0x0000000002a6fb23: jmpq   0x0000000002a6f96a
  0x0000000002a6fb28: mov    $0xa535d00,%eax
  0x0000000002a6fb2d: callq  0x0000000002a60260  ; OopMap{off=690}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@116 (line 93)
                                                ;   {runtime_call}
  0x0000000002a6fb32: jmpq   0x0000000002a6f960
  0x0000000002a6fb37: callq  0x00000000029d1b80  ; OopMap{rax=Oop off=700}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@116 (line 93)
                                                ;   {runtime_call}
  0x0000000002a6fb3c: mov    0x0(%rax),%eax
  0x0000000002a6fb42: mov    $0x6050b00,%eax
  0x0000000002a6fb47: callq  0x0000000002a60ae0  ; OopMap{rax=Oop off=716}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@116 (line 93)
                                                ;   {runtime_call}
  0x0000000002a6fb4c: jmpq   0x0000000002a6f970
  0x0000000002a6fb51: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000000002a6fb5b: push   %rax
  0x0000000002a6fb5c: push   %rbx
  0x0000000002a6fb5d: mov    0x48(%rax),%rbx
  0x0000000002a6fb61: push   %rdi
  0x0000000002a6fb62: push   %rsi
  0x0000000002a6fb63: push   %rdx
  0x0000000002a6fb64: push   %rcx
  0x0000000002a6fb65: push   %r8
  0x0000000002a6fb67: push   %r9
  0x0000000002a6fb69: push   %r10
  0x0000000002a6fb6b: mov    %rsp,%r10
  0x0000000002a6fb6e: and    $0xfffffffffffffff0,%rsp
  0x0000000002a6fb72: push   %r10
  0x0000000002a6fb74: push   %r11
  0x0000000002a6fb76: mov    $0x7,%ecx
  0x0000000002a6fb7b: movabs $0x7ff855285e40,%r10  ;   {runtime_call}
  0x0000000002a6fb85: callq  *%r10
  0x0000000002a6fb88: pop    %r11
  0x0000000002a6fb8a: pop    %rsp
  0x0000000002a6fb8b: pop    %r10
  0x0000000002a6fb8d: pop    %r9
  0x0000000002a6fb8f: pop    %r8
  0x0000000002a6fb91: pop    %rcx
  0x0000000002a6fb92: pop    %rdx
  0x0000000002a6fb93: pop    %rsi
  0x0000000002a6fb94: pop    %rdi
  0x0000000002a6fb95: cmp    0x118(%rbx),%rax
  0x0000000002a6fb9c: pop    %rbx
  0x0000000002a6fb9d: pop    %rax
  0x0000000002a6fb9e: jne    0x0000000002a6fbae
  0x0000000002a6fba4: jmpq   0x0000000002a6f992
  0x0000000002a6fba9: mov    $0xa535d00,%eax
  0x0000000002a6fbae: callq  0x0000000002a60260  ; OopMap{off=819}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@108 (line 88)
                                                ;   {runtime_call}
  0x0000000002a6fbb3: jmpq   0x0000000002a6f988
  0x0000000002a6fbb8: callq  0x00000000029d1b80  ; OopMap{rax=Oop off=829}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@108 (line 88)
                                                ;   {runtime_call}
  0x0000000002a6fbbd: mov    0x0(%rax),%eax
  0x0000000002a6fbc3: mov    $0x6050b00,%eax
  0x0000000002a6fbc8: callq  0x0000000002a60ae0  ; OopMap{rax=Oop off=845}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@108 (line 88)
                                                ;   {runtime_call}
  0x0000000002a6fbcd: jmpq   0x0000000002a6f998
  0x0000000002a6fbd2: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000000002a6fbdc: push   %rax
  0x0000000002a6fbdd: push   %rbx
  0x0000000002a6fbde: mov    0x48(%rax),%rbx
  0x0000000002a6fbe2: push   %rdi
  0x0000000002a6fbe3: push   %rsi
  0x0000000002a6fbe4: push   %rdx
  0x0000000002a6fbe5: push   %rcx
  0x0000000002a6fbe6: push   %r8
  0x0000000002a6fbe8: push   %r9
  0x0000000002a6fbea: push   %r10
  0x0000000002a6fbec: mov    %rsp,%r10
  0x0000000002a6fbef: and    $0xfffffffffffffff0,%rsp
  0x0000000002a6fbf3: push   %r10
  0x0000000002a6fbf5: push   %r11
  0x0000000002a6fbf7: mov    $0x7,%ecx
  0x0000000002a6fbfc: movabs $0x7ff855285e40,%r10  ;   {runtime_call}
  0x0000000002a6fc06: callq  *%r10
  0x0000000002a6fc09: pop    %r11
  0x0000000002a6fc0b: pop    %rsp
  0x0000000002a6fc0c: pop    %r10
  0x0000000002a6fc0e: pop    %r9
  0x0000000002a6fc10: pop    %r8
  0x0000000002a6fc12: pop    %rcx
  0x0000000002a6fc13: pop    %rdx
  0x0000000002a6fc14: pop    %rsi
  0x0000000002a6fc15: pop    %rdi
  0x0000000002a6fc16: cmp    0x118(%rbx),%rax
  0x0000000002a6fc1d: pop    %rbx
  0x0000000002a6fc1e: pop    %rax
  0x0000000002a6fc1f: jne    0x0000000002a6fc2f
  0x0000000002a6fc25: jmpq   0x0000000002a6f9ba
  0x0000000002a6fc2a: mov    $0xa535d00,%eax
  0x0000000002a6fc2f: callq  0x0000000002a60260  ; OopMap{off=948}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@104 (line 86)
                                                ;   {runtime_call}
  0x0000000002a6fc34: jmpq   0x0000000002a6f9b0
  0x0000000002a6fc39: callq  0x00000000029d1b80  ; OopMap{rax=Oop off=958}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@104 (line 86)
                                                ;   {runtime_call}
  0x0000000002a6fc3e: mov    0x0(%rax),%eax
  0x0000000002a6fc44: mov    $0x6050b00,%eax
  0x0000000002a6fc49: callq  0x0000000002a60ae0  ; OopMap{rax=Oop off=974}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@104 (line 86)
                                                ;   {runtime_call}
  0x0000000002a6fc4e: jmpq   0x0000000002a6f9c0
  0x0000000002a6fc53: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000000002a6fc5d: push   %rax
  0x0000000002a6fc5e: push   %rbx
  0x0000000002a6fc5f: mov    0x48(%rax),%rbx
  0x0000000002a6fc63: push   %rdi
  0x0000000002a6fc64: push   %rsi
  0x0000000002a6fc65: push   %rdx
  0x0000000002a6fc66: push   %rcx
  0x0000000002a6fc67: push   %r8
  0x0000000002a6fc69: push   %r9
  0x0000000002a6fc6b: push   %r10
  0x0000000002a6fc6d: mov    %rsp,%r10
  0x0000000002a6fc70: and    $0xfffffffffffffff0,%rsp
  0x0000000002a6fc74: push   %r10
  0x0000000002a6fc76: push   %r11
  0x0000000002a6fc78: mov    $0x7,%ecx
  0x0000000002a6fc7d: movabs $0x7ff855285e40,%r10  ;   {runtime_call}
  0x0000000002a6fc87: callq  *%r10
  0x0000000002a6fc8a: pop    %r11
  0x0000000002a6fc8c: pop    %rsp
  0x0000000002a6fc8d: pop    %r10
  0x0000000002a6fc8f: pop    %r9
  0x0000000002a6fc91: pop    %r8
  0x0000000002a6fc93: pop    %rcx
  0x0000000002a6fc94: pop    %rdx
  0x0000000002a6fc95: pop    %rsi
  0x0000000002a6fc96: pop    %rdi
  0x0000000002a6fc97: cmp    0x118(%rbx),%rax
  0x0000000002a6fc9e: pop    %rbx
  0x0000000002a6fc9f: pop    %rax
  0x0000000002a6fca0: jne    0x0000000002a6fcb0
  0x0000000002a6fca6: jmpq   0x0000000002a6f9e2
  0x0000000002a6fcab: mov    $0xa535d00,%eax
  0x0000000002a6fcb0: callq  0x0000000002a60260  ; OopMap{off=1077}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@100 (line 84)
                                                ;   {runtime_call}
  0x0000000002a6fcb5: jmpq   0x0000000002a6f9d8
  0x0000000002a6fcba: callq  0x00000000029d1b80  ; OopMap{rax=Oop off=1087}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@100 (line 84)
                                                ;   {runtime_call}
  0x0000000002a6fcbf: mov    0x0(%rax),%eax
  0x0000000002a6fcc5: mov    $0x6050b00,%eax
  0x0000000002a6fcca: callq  0x0000000002a60ae0  ; OopMap{rax=Oop off=1103}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@100 (line 84)
                                                ;   {runtime_call}
  0x0000000002a6fccf: jmpq   0x0000000002a6f9e8
  0x0000000002a6fcd4: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000000002a6fcde: push   %rax
  0x0000000002a6fcdf: push   %rbx
  0x0000000002a6fce0: mov    0x48(%rax),%rbx
  0x0000000002a6fce4: push   %rdi
  0x0000000002a6fce5: push   %rsi
  0x0000000002a6fce6: push   %rdx
  0x0000000002a6fce7: push   %rcx
  0x0000000002a6fce8: push   %r8
  0x0000000002a6fcea: push   %r9
  0x0000000002a6fcec: push   %r10
  0x0000000002a6fcee: mov    %rsp,%r10
  0x0000000002a6fcf1: and    $0xfffffffffffffff0,%rsp
  0x0000000002a6fcf5: push   %r10
  0x0000000002a6fcf7: push   %r11
  0x0000000002a6fcf9: mov    $0x7,%ecx
  0x0000000002a6fcfe: movabs $0x7ff855285e40,%r10  ;   {runtime_call}
  0x0000000002a6fd08: callq  *%r10
  0x0000000002a6fd0b: pop    %r11
  0x0000000002a6fd0d: pop    %rsp
  0x0000000002a6fd0e: pop    %r10
  0x0000000002a6fd10: pop    %r9
  0x0000000002a6fd12: pop    %r8
  0x0000000002a6fd14: pop    %rcx
  0x0000000002a6fd15: pop    %rdx
  0x0000000002a6fd16: pop    %rsi
  0x0000000002a6fd17: pop    %rdi
  0x0000000002a6fd18: cmp    0x118(%rbx),%rax
  0x0000000002a6fd1f: pop    %rbx
  0x0000000002a6fd20: pop    %rax
  0x0000000002a6fd21: jne    0x0000000002a6fd31
  0x0000000002a6fd27: jmpq   0x0000000002a6fa0a
  0x0000000002a6fd2c: mov    $0xa535d00,%eax
  0x0000000002a6fd31: callq  0x0000000002a60260  ; OopMap{off=1206}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@96 (line 82)
                                                ;   {runtime_call}
  0x0000000002a6fd36: jmpq   0x0000000002a6fa00
  0x0000000002a6fd3b: callq  0x00000000029d1b80  ; OopMap{rax=Oop off=1216}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@96 (line 82)
                                                ;   {runtime_call}
  0x0000000002a6fd40: mov    0x0(%rax),%eax
  0x0000000002a6fd46: mov    $0x6050b00,%eax
  0x0000000002a6fd4b: callq  0x0000000002a60ae0  ; OopMap{rax=Oop off=1232}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@96 (line 82)
                                                ;   {runtime_call}
  0x0000000002a6fd50: jmpq   0x0000000002a6fa10
  0x0000000002a6fd55: nop
  0x0000000002a6fd56: nop
  0x0000000002a6fd57: mov    0x2a8(%r15),%rax
  0x0000000002a6fd5e: movabs $0x0,%r10
  0x0000000002a6fd68: mov    %r10,0x2a8(%r15)
  0x0000000002a6fd6f: movabs $0x0,%r10
  0x0000000002a6fd79: mov    %r10,0x2b0(%r15)
  0x0000000002a6fd80: add    $0x30,%rsp
  0x0000000002a6fd84: pop    %rbp
  0x0000000002a6fd85: jmpq   0x00000000029cf0e0  ;   {runtime_call}
  0x0000000002a6fd8a: hlt    
  0x0000000002a6fd8b: hlt    
  0x0000000002a6fd8c: hlt    
  0x0000000002a6fd8d: hlt    
  0x0000000002a6fd8e: hlt    
  0x0000000002a6fd8f: hlt    
  0x0000000002a6fd90: hlt    
  0x0000000002a6fd91: hlt    
  0x0000000002a6fd92: hlt    
  0x0000000002a6fd93: hlt    
  0x0000000002a6fd94: hlt    
  0x0000000002a6fd95: hlt    
  0x0000000002a6fd96: hlt    
  0x0000000002a6fd97: hlt    
  0x0000000002a6fd98: hlt    
  0x0000000002a6fd99: hlt    
  0x0000000002a6fd9a: hlt    
  0x0000000002a6fd9b: hlt    
  0x0000000002a6fd9c: hlt    
  0x0000000002a6fd9d: hlt    
  0x0000000002a6fd9e: hlt    
  0x0000000002a6fd9f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002a6fda0: callq  0x00000000029cfc60  ;   {no_reloc}
  0x0000000002a6fda5: mov    %rsp,-0x28(%rsp)
  0x0000000002a6fdaa: sub    $0x80,%rsp
  0x0000000002a6fdb1: mov    %rax,0x78(%rsp)
  0x0000000002a6fdb6: mov    %rcx,0x70(%rsp)
  0x0000000002a6fdbb: mov    %rdx,0x68(%rsp)
  0x0000000002a6fdc0: mov    %rbx,0x60(%rsp)
  0x0000000002a6fdc5: mov    %rbp,0x50(%rsp)
  0x0000000002a6fdca: mov    %rsi,0x48(%rsp)
  0x0000000002a6fdcf: mov    %rdi,0x40(%rsp)
  0x0000000002a6fdd4: mov    %r8,0x38(%rsp)
  0x0000000002a6fdd9: mov    %r9,0x30(%rsp)
  0x0000000002a6fdde: mov    %r10,0x28(%rsp)
  0x0000000002a6fde3: mov    %r11,0x20(%rsp)
  0x0000000002a6fde8: mov    %r12,0x18(%rsp)
  0x0000000002a6fded: mov    %r13,0x10(%rsp)
  0x0000000002a6fdf2: mov    %r14,0x8(%rsp)
  0x0000000002a6fdf7: mov    %r15,(%rsp)
  0x0000000002a6fdfb: movabs $0x623d8e30,%rcx   ;   {external_word}
  0x0000000002a6fe05: movabs $0x2a6fda5,%rdx    ;   {internal_word}
  0x0000000002a6fe0f: mov    %rsp,%r8
  0x0000000002a6fe12: and    $0xfffffffffffffff0,%rsp
  0x0000000002a6fe16: callq  0x0000000062093d40  ;   {runtime_call}
  0x0000000002a6fe1b: hlt    
[Deopt Handler Code]
  0x0000000002a6fe1c: movabs $0x2a6fe1c,%r10    ;   {section_word}
  0x0000000002a6fe26: push   %r10
  0x0000000002a6fe28: jmpq   0x00000000029a7600  ;   {runtime_call}
  0x0000000002a6fe2d: hlt    
  0x0000000002a6fe2e: hlt    
  0x0000000002a6fe2f: hlt    
<nmethod compile_id='9' compiler='C1' level='3' entry='0x0000000002a6f880' size='2680' address='0x0000000002a6f6d0' relocation_offset='288' insts_offset='432' stub_offset='1744' scopes_data_offset='1896' scopes_pcs_offset='2040' dependencies_offset='2616' nul_chk_table_offset='2624' method='java/lang/CharacterData of (I)Ljava/lang/CharacterData;' bytes='120' count='4242' iicount='4242' stamp='0.385'/>
<writer thread='1572'/>
Decoding compiled method 0x0000000002a72dd0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000016b5e730} &apos;parentOf&apos; &apos;(Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;&apos; in &apos;java/util/TreeMap&apos;
  # parm0:    rdx:rdx   = &apos;java/util/TreeMap$Entry&apos;
  #           [sp+0x30]  (sp of caller)
  0x0000000002a72f00: mov    %eax,-0x6000(%rsp)
  0x0000000002a72f07: push   %rbp
  0x0000000002a72f08: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.util.TreeMap::parentOf@-1 (line 2204)

  0x0000000002a72f0c: mov    0x20(%rdx),%r10d   ; implicit exception: dispatches to 0x0000000002a72f1f
  0x0000000002a72f10: mov    %r10,%rax          ;*getfield parent
                                                ; - java.util.TreeMap::parentOf@9 (line 2204)

  0x0000000002a72f13: add    $0x20,%rsp
  0x0000000002a72f17: pop    %rbp
  0x0000000002a72f18: test   %eax,-0x2882f1e(%rip)        # 0x00000000001f0000
                                                ;   {poll_return}
  0x0000000002a72f1e: retq   
  0x0000000002a72f1f: mov    %rdx,(%rsp)
  0x0000000002a72f23: mov    $0xffffff65,%edx
  0x0000000002a72f28: data16 xchg %ax,%ax
  0x0000000002a72f2b: callq  0x00000000029a57a0  ; OopMap{[0]=Oop off=48}
                                                ;*ifnonnull
                                                ; - java.util.TreeMap::parentOf@1 (line 2204)
                                                ;   {runtime_call}
  0x0000000002a72f30: int3                      ;*ifnonnull
                                                ; - java.util.TreeMap::parentOf@1 (line 2204)

  0x0000000002a72f31: hlt    
  0x0000000002a72f32: hlt    
  0x0000000002a72f33: hlt    
  0x0000000002a72f34: hlt    
  0x0000000002a72f35: hlt    
  0x0000000002a72f36: hlt    
  0x0000000002a72f37: hlt    
  0x0000000002a72f38: hlt    
  0x0000000002a72f39: hlt    
  0x0000000002a72f3a: hlt    
  0x0000000002a72f3b: hlt    
  0x0000000002a72f3c: hlt    
  0x0000000002a72f3d: hlt    
  0x0000000002a72f3e: hlt    
  0x0000000002a72f3f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002a72f40: jmpq   0x00000000029cf4a0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000002a72f45: callq  0x0000000002a72f4a
  0x0000000002a72f4a: subq   $0x5,(%rsp)
  0x0000000002a72f4f: jmpq   0x00000000029a7600  ;   {runtime_call}
  0x0000000002a72f54: hlt    
  0x0000000002a72f55: hlt    
  0x0000000002a72f56: hlt    
  0x0000000002a72f57: hlt    
<nmethod compile_id='11' compiler='C2' level='4' entry='0x0000000002a72f00' size='552' address='0x0000000002a72dd0' relocation_offset='288' insts_offset='304' stub_offset='368' scopes_data_offset='400' scopes_pcs_offset='432' dependencies_offset='528' nul_chk_table_offset='536' method='java/util/TreeMap parentOf (Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;' bytes='13' count='10022' iicount='10022' stamp='0.387'/>
<writer thread='1672'/>
<task_queued compile_id='13' method='java/lang/String length ()I' bytes='6' count='27904' iicount='27904' stamp='0.387' comment='tiered' hot_count='27904'/>
<task_queued compile_id='14' method='java/lang/Character toUpperCase (C)C' bytes='6' count='256' iicount='256' level='3' stamp='0.388' comment='tiered' hot_count='256'/>
<writer thread='14520'/>
Decoding compiled method 0x0000000002a729d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000016c03d80} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;
  # this:     rdx:rdx   = &apos;java/lang/CharacterDataLatin1&apos;
  # parm0:    r8        = int
  #           [sp+0x40]  (sp of caller)
  0x0000000002a72b20: mov    0x8(%rdx),%r10d
  0x0000000002a72b24: shl    $0x3,%r10
  0x0000000002a72b28: cmp    %rax,%r10
  0x0000000002a72b2b: jne    0x00000000029a5f60  ;   {runtime_call}
  0x0000000002a72b31: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002a72b3c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002a72b40: mov    %eax,-0x6000(%rsp)
  0x0000000002a72b47: push   %rbp
  0x0000000002a72b48: sub    $0x30,%rsp
  0x0000000002a72b4c: movabs $0x16c056c0,%rax   ;   {metadata(method data for {method} {0x0000000016c03d80} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000002a72b56: mov    0xdc(%rax),%esi
  0x0000000002a72b5c: add    $0x8,%esi
  0x0000000002a72b5f: mov    %esi,0xdc(%rax)
  0x0000000002a72b65: movabs $0x16c03d78,%rax   ;   {metadata({method} {0x0000000016c03d80} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000002a72b6f: and    $0x1ff8,%esi
  0x0000000002a72b75: cmp    $0x0,%esi
  0x0000000002a72b78: je     0x0000000002a72bac  ;*iload_1
                                                ; - java.lang.CharacterDataLatin1::getProperties@0 (line 71)

  0x0000000002a72b7e: and    $0xffff,%r8d
  0x0000000002a72b85: movabs $0xd658bce8,%rax   ;   {oop([I)}
  0x0000000002a72b8f: movslq %r8d,%rsi
  0x0000000002a72b92: cmp    0xc(%rax),%r8d     ; implicit exception: dispatches to 0x0000000002a72bc0
  0x0000000002a72b96: jae    0x0000000002a72bca
  0x0000000002a72b9c: mov    0x10(%rax,%rsi,4),%eax  ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)

  0x0000000002a72ba0: add    $0x30,%rsp
  0x0000000002a72ba4: pop    %rbp
  0x0000000002a72ba5: test   %eax,-0x2882aab(%rip)        # 0x00000000001f0100
                                                ;   {poll_return}
  0x0000000002a72bab: retq   
  0x0000000002a72bac: mov    %rax,0x8(%rsp)
  0x0000000002a72bb1: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002a72bb9: callq  0x0000000002a5f7a0  ; OopMap{rdx=Oop off=158}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::getProperties@-1 (line 71)
                                                ;   {runtime_call}
  0x0000000002a72bbe: jmp    0x0000000002a72b7e
  0x0000000002a72bc0: callq  0x00000000029d1b80  ; OopMap{rax=Oop off=165}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ;   {runtime_call}
  0x0000000002a72bc5: callq  0x00000000029d1b80  ; OopMap{rax=Oop off=170}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ;   {runtime_call}
  0x0000000002a72bca: mov    %r8,(%rsp)
  0x0000000002a72bce: callq  0x00000000029cec40  ; OopMap{rax=Oop off=179}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ;   {runtime_call}
  0x0000000002a72bd3: nop
  0x0000000002a72bd4: nop
  0x0000000002a72bd5: mov    0x2a8(%r15),%rax
  0x0000000002a72bdc: movabs $0x0,%r10
  0x0000000002a72be6: mov    %r10,0x2a8(%r15)
  0x0000000002a72bed: movabs $0x0,%r10
  0x0000000002a72bf7: mov    %r10,0x2b0(%r15)
  0x0000000002a72bfe: add    $0x30,%rsp
  0x0000000002a72c02: pop    %rbp
  0x0000000002a72c03: jmpq   0x00000000029cf0e0  ;   {runtime_call}
  0x0000000002a72c08: hlt    
  0x0000000002a72c09: hlt    
  0x0000000002a72c0a: hlt    
  0x0000000002a72c0b: hlt    
  0x0000000002a72c0c: hlt    
  0x0000000002a72c0d: hlt    
  0x0000000002a72c0e: hlt    
  0x0000000002a72c0f: hlt    
  0x0000000002a72c10: hlt    
  0x0000000002a72c11: hlt    
  0x0000000002a72c12: hlt    
  0x0000000002a72c13: hlt    
  0x0000000002a72c14: hlt    
  0x0000000002a72c15: hlt    
  0x0000000002a72c16: hlt    
  0x0000000002a72c17: hlt    
  0x0000000002a72c18: hlt    
  0x0000000002a72c19: hlt    
  0x0000000002a72c1a: hlt    
  0x0000000002a72c1b: hlt    
  0x0000000002a72c1c: hlt    
  0x0000000002a72c1d: hlt    
  0x0000000002a72c1e: hlt    
  0x0000000002a72c1f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002a72c20: callq  0x00000000029cfc60  ;   {no_reloc}
  0x0000000002a72c25: mov    %rsp,-0x28(%rsp)
  0x0000000002a72c2a: sub    $0x80,%rsp
  0x0000000002a72c31: mov    %rax,0x78(%rsp)
  0x0000000002a72c36: mov    %rcx,0x70(%rsp)
  0x0000000002a72c3b: mov    %rdx,0x68(%rsp)
  0x0000000002a72c40: mov    %rbx,0x60(%rsp)
  0x0000000002a72c45: mov    %rbp,0x50(%rsp)
  0x0000000002a72c4a: mov    %rsi,0x48(%rsp)
  0x0000000002a72c4f: mov    %rdi,0x40(%rsp)
  0x0000000002a72c54: mov    %r8,0x38(%rsp)
  0x0000000002a72c59: mov    %r9,0x30(%rsp)
  0x0000000002a72c5e: mov    %r10,0x28(%rsp)
  0x0000000002a72c63: mov    %r11,0x20(%rsp)
  0x0000000002a72c68: mov    %r12,0x18(%rsp)
  0x0000000002a72c6d: mov    %r13,0x10(%rsp)
  0x0000000002a72c72: mov    %r14,0x8(%rsp)
  0x0000000002a72c77: mov    %r15,(%rsp)
  0x0000000002a72c7b: movabs $0x623d8e30,%rcx   ;   {external_word}
  0x0000000002a72c85: movabs $0x2a72c25,%rdx    ;   {internal_word}
  0x0000000002a72c8f: mov    %rsp,%r8
  0x0000000002a72c92: and    $0xfffffffffffffff0,%rsp
  0x0000000002a72c96: callq  0x0000000062093d40  ;   {runtime_call}
  0x0000000002a72c9b: hlt    
[Deopt Handler Code]
  0x0000000002a72c9c: movabs $0x2a72c9c,%r10    ;   {section_word}
  0x0000000002a72ca6: push   %r10
  0x0000000002a72ca8: jmpq   0x00000000029a7600  ;   {runtime_call}
  0x0000000002a72cad: hlt    
  0x0000000002a72cae: hlt    
  0x0000000002a72caf: hlt    
<nmethod compile_id='10' compiler='C1' level='3' entry='0x0000000002a72b20' size='952' address='0x0000000002a729d0' relocation_offset='288' insts_offset='336' stub_offset='592' scopes_data_offset='744' scopes_pcs_offset='792' dependencies_offset='920' nul_chk_table_offset='928' method='java/lang/CharacterDataLatin1 getProperties (I)I' bytes='11' count='4581' iicount='4581' stamp='0.392'/>
<writer thread='1572'/>
Decoding compiled method 0x0000000002a71250:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000016a33c20} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  #           [sp+0x20]  (sp of caller)
  0x0000000002a71380: mov    0x8(%rdx),%r10d
  0x0000000002a71384: shl    $0x3,%r10
  0x0000000002a71388: cmp    %r10,%rax
  0x0000000002a7138b: jne    0x00000000029a5f60  ;   {runtime_call}
  0x0000000002a71391: data16 xchg %ax,%ax
  0x0000000002a71394: nopl   0x0(%rax,%rax,1)
  0x0000000002a7139c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002a713a0: mov    %eax,-0x6000(%rsp)
  0x0000000002a713a7: push   %rbp
  0x0000000002a713a8: sub    $0x10,%rsp         ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 623)

  0x0000000002a713ac: mov    0xc(%rdx),%r11d    ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)

  0x0000000002a713b0: mov    0xc(%r11),%eax     ; implicit exception: dispatches to 0x0000000002a713c0
  0x0000000002a713b4: add    $0x10,%rsp
  0x0000000002a713b8: pop    %rbp
  0x0000000002a713b9: test   %eax,-0x28813bf(%rip)        # 0x00000000001f0000
                                                ;   {poll_return}
  0x0000000002a713bf: retq   
  0x0000000002a713c0: mov    $0xfffffff6,%edx
  0x0000000002a713c5: xchg   %ax,%ax
  0x0000000002a713c7: callq  0x00000000029a57a0  ; OopMap{off=76}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ;   {runtime_call}
  0x0000000002a713cc: int3                      ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)

  0x0000000002a713cd: hlt    
  0x0000000002a713ce: hlt    
  0x0000000002a713cf: hlt    
  0x0000000002a713d0: hlt    
  0x0000000002a713d1: hlt    
  0x0000000002a713d2: hlt    
  0x0000000002a713d3: hlt    
  0x0000000002a713d4: hlt    
  0x0000000002a713d5: hlt    
  0x0000000002a713d6: hlt    
  0x0000000002a713d7: hlt    
  0x0000000002a713d8: hlt    
  0x0000000002a713d9: hlt    
  0x0000000002a713da: hlt    
  0x0000000002a713db: hlt    
  0x0000000002a713dc: hlt    
  0x0000000002a713dd: hlt    
  0x0000000002a713de: hlt    
  0x0000000002a713df: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002a713e0: jmpq   0x00000000029cf4a0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000002a713e5: callq  0x0000000002a713ea
  0x0000000002a713ea: subq   $0x5,(%rsp)
  0x0000000002a713ef: jmpq   0x00000000029a7600  ;   {runtime_call}
  0x0000000002a713f4: hlt    
  0x0000000002a713f5: hlt    
  0x0000000002a713f6: hlt    
  0x0000000002a713f7: hlt    
<nmethod compile_id='13' compiler='C2' level='4' entry='0x0000000002a71380' size='584' address='0x0000000002a71250' relocation_offset='288' insts_offset='304' stub_offset='400' scopes_data_offset='432' scopes_pcs_offset='464' dependencies_offset='560' nul_chk_table_offset='568' method='java/lang/String length ()I' bytes='6' count='28194' iicount='28194' stamp='0.394'/>
<writer thread='16600'/>
[Loaded java.net.ProxySelector from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.net.spi.DefaultProxySelector from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.net.spi.DefaultProxySelector$1 from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.net.NetProperties from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded sun.net.NetProperties$1 from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
<task_queued compile_id='15' method='java/lang/AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='50' count='768' iicount='768' level='3' stamp='0.396' comment='tiered' hot_count='768'/>
<writer thread='1672'/>
<task_queued compile_id='16' method='java/lang/Character toUpperCase (I)I' bytes='9' count='384' iicount='384' level='3' stamp='0.397' comment='tiered' hot_count='384'/>
<writer thread='1064'/>
Decoding compiled method 0x0000000002a70e90:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000016a33d70} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8        = int
  #           [sp+0x30]  (sp of caller)
  0x0000000002a70fe0: mov    0x8(%rdx),%r10d
  0x0000000002a70fe4: shl    $0x3,%r10
  0x0000000002a70fe8: cmp    %r10,%rax
  0x0000000002a70feb: jne    0x00000000029a5f60  ;   {runtime_call}
  0x0000000002a70ff1: data16 xchg %ax,%ax
  0x0000000002a70ff4: nopl   0x0(%rax,%rax,1)
  0x0000000002a70ffc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002a71000: mov    %eax,-0x6000(%rsp)
  0x0000000002a71007: push   %rbp
  0x0000000002a71008: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)

  0x0000000002a7100c: test   %r8d,%r8d
  0x0000000002a7100f: jl     0x0000000002a71049  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)

  0x0000000002a71011: mov    0xc(%rdx),%r10d    ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)

  0x0000000002a71015: mov    0xc(%r10),%ebp     ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; implicit exception: dispatches to 0x0000000002a71071
  0x0000000002a71019: cmp    %ebp,%r8d
  0x0000000002a7101c: jge    0x0000000002a7105d  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)

  0x0000000002a7101e: cmp    %ebp,%r8d
  0x0000000002a71021: jae    0x0000000002a71035
  0x0000000002a71023: movzwl 0x10(%r10,%r8,2),%eax
  0x0000000002a71029: add    $0x20,%rsp
  0x0000000002a7102d: pop    %rbp
  0x0000000002a7102e: test   %eax,-0x2881034(%rip)        # 0x00000000001f0000
                                                ;   {poll_return}
  0x0000000002a71034: retq   
  0x0000000002a71035: mov    $0xffffffe4,%edx
  0x0000000002a7103a: mov    %r8d,%ebp
  0x0000000002a7103d: mov    %r10d,(%rsp)
  0x0000000002a71041: xchg   %ax,%ax
  0x0000000002a71043: callq  0x00000000029a57a0  ; OopMap{[0]=NarrowOop off=104}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ;   {runtime_call}
  0x0000000002a71048: int3                      ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)

  0x0000000002a71049: mov    %rdx,%rbp
  0x0000000002a7104c: mov    %r8d,0x4(%rsp)
  0x0000000002a71051: mov    $0xffffff65,%edx
  0x0000000002a71056: nop
  0x0000000002a71057: callq  0x00000000029a57a0  ; OopMap{rbp=Oop off=124}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ;   {runtime_call}
  0x0000000002a7105c: int3                      ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)

  0x0000000002a7105d: mov    %rdx,(%rsp)
  0x0000000002a71061: mov    %r8d,0xc(%rsp)
  0x0000000002a71066: mov    $0xffffff65,%edx
  0x0000000002a7106b: callq  0x00000000029a57a0  ; OopMap{[0]=Oop off=144}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ;   {runtime_call}
  0x0000000002a71070: int3                      ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)

  0x0000000002a71071: mov    $0xfffffff6,%edx
  0x0000000002a71076: nop
  0x0000000002a71077: callq  0x00000000029a57a0  ; OopMap{off=156}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ;   {runtime_call}
  0x0000000002a7107c: int3                      ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)

  0x0000000002a7107d: hlt    
  0x0000000002a7107e: hlt    
  0x0000000002a7107f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002a71080: jmpq   0x00000000029cf4a0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000002a71085: callq  0x0000000002a7108a
  0x0000000002a7108a: subq   $0x5,(%rsp)
  0x0000000002a7108f: jmpq   0x00000000029a7600  ;   {runtime_call}
  0x0000000002a71094: hlt    
  0x0000000002a71095: hlt    
  0x0000000002a71096: hlt    
  0x0000000002a71097: hlt    
<nmethod compile_id='12' compiler='C2' level='4' entry='0x0000000002a70fe0' size='896' address='0x0000000002a70e90' relocation_offset='288' insts_offset='336' stub_offset='496' scopes_data_offset='528' scopes_pcs_offset='632' dependencies_offset='872' nul_chk_table_offset='880' method='java/lang/String charAt (I)C' bytes='29' count='106497' iicount='106497' stamp='0.401'/>
<writer thread='16600'/>
[Loaded java.net.Inet6Address from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.net.URI from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
<writer thread='14520'/>
Decoding compiled method 0x0000000002a70950:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000016aca450} &apos;toUpperCase&apos; &apos;(C)C&apos; in &apos;java/lang/Character&apos;
  # parm0:    rdx       = char
  #           [sp+0x50]  (sp of caller)
  0x0000000002a70ac0: mov    %eax,-0x6000(%rsp)
  0x0000000002a70ac7: push   %rbp
  0x0000000002a70ac8: sub    $0x40,%rsp
  0x0000000002a70acc: movabs $0x16d17188,%rsi   ;   {metadata(method data for {method} {0x0000000016aca450} &apos;toUpperCase&apos; &apos;(C)C&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002a70ad6: mov    0xdc(%rsi),%edi
  0x0000000002a70adc: add    $0x8,%edi
  0x0000000002a70adf: mov    %edi,0xdc(%rsi)
  0x0000000002a70ae5: movabs $0x16aca448,%rsi   ;   {metadata({method} {0x0000000016aca450} &apos;toUpperCase&apos; &apos;(C)C&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002a70aef: and    $0x1ff8,%edi
  0x0000000002a70af5: cmp    $0x0,%edi
  0x0000000002a70af8: je     0x0000000002a70c2c  ;*iload_0
                                                ; - java.lang.Character::toUpperCase@0 (line 6369)

  0x0000000002a70afe: movabs $0x16d17188,%rsi   ;   {metadata(method data for {method} {0x0000000016aca450} &apos;toUpperCase&apos; &apos;(C)C&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002a70b08: addq   $0x1,0x108(%rsi)
  0x0000000002a70b10: movabs $0x16d172e0,%rsi   ;   {metadata(method data for {method} {0x0000000016aca4e8} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002a70b1a: mov    0xdc(%rsi),%edi
  0x0000000002a70b20: add    $0x8,%edi
  0x0000000002a70b23: mov    %edi,0xdc(%rsi)
  0x0000000002a70b29: movabs $0x16aca4e0,%rsi   ;   {metadata({method} {0x0000000016aca4e8} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002a70b33: and    $0x7ffff8,%edi
  0x0000000002a70b39: cmp    $0x0,%edi
  0x0000000002a70b3c: je     0x0000000002a70c43
  0x0000000002a70b42: movabs $0x16d172e0,%rsi   ;   {metadata(method data for {method} {0x0000000016aca4e8} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002a70b4c: addq   $0x1,0x108(%rsi)
  0x0000000002a70b54: mov    %rdx,%rsi
  0x0000000002a70b57: mov    %rsi,%rdx          ;*invokestatic of
                                                ; - java.lang.Character::toUpperCase@1 (line 6398)
                                                ; - java.lang.Character::toUpperCase@1 (line 6369)

  0x0000000002a70b5a: mov    %esi,0x28(%rsp)
  0x0000000002a70b5e: nop
  0x0000000002a70b5f: callq  0x00000000029a6620  ; OopMap{off=164}
                                                ;*invokestatic of
                                                ; - java.lang.Character::toUpperCase@1 (line 6398)
                                                ; - java.lang.Character::toUpperCase@1 (line 6369)
                                                ;   {static_call}
  0x0000000002a70b64: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x0000000002a70c5a
  0x0000000002a70b67: mov    %rax,%r8
  0x0000000002a70b6a: movabs $0x16d172e0,%rdx   ;   {metadata(method data for {method} {0x0000000016aca4e8} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002a70b74: mov    0x8(%r8),%r8d
  0x0000000002a70b78: shl    $0x3,%r8
  0x0000000002a70b7c: cmp    0x120(%rdx),%r8
  0x0000000002a70b83: jne    0x0000000002a70b92
  0x0000000002a70b85: addq   $0x1,0x128(%rdx)
  0x0000000002a70b8d: jmpq   0x0000000002a70bf8
  0x0000000002a70b92: cmp    0x130(%rdx),%r8
  0x0000000002a70b99: jne    0x0000000002a70ba8
  0x0000000002a70b9b: addq   $0x1,0x138(%rdx)
  0x0000000002a70ba3: jmpq   0x0000000002a70bf8
  0x0000000002a70ba8: cmpq   $0x0,0x120(%rdx)
  0x0000000002a70bb3: jne    0x0000000002a70bcc
  0x0000000002a70bb5: mov    %r8,0x120(%rdx)
  0x0000000002a70bbc: movq   $0x1,0x128(%rdx)
  0x0000000002a70bc7: jmpq   0x0000000002a70bf8
  0x0000000002a70bcc: cmpq   $0x0,0x130(%rdx)
  0x0000000002a70bd7: jne    0x0000000002a70bf0
  0x0000000002a70bd9: mov    %r8,0x130(%rdx)
  0x0000000002a70be0: movq   $0x1,0x138(%rdx)
  0x0000000002a70beb: jmpq   0x0000000002a70bf8
  0x0000000002a70bf0: addq   $0x1,0x118(%rdx)
  0x0000000002a70bf8: mov    0x28(%rsp),%r8d
  0x0000000002a70bfd: mov    %rax,%rdx          ;*invokevirtual toUpperCase
                                                ; - java.lang.Character::toUpperCase@5 (line 6398)
                                                ; - java.lang.Character::toUpperCase@1 (line 6369)

  0x0000000002a70c00: nop
  0x0000000002a70c01: nop
  0x0000000002a70c02: nop
  0x0000000002a70c03: nop
  0x0000000002a70c04: nop
  0x0000000002a70c05: movabs $0xffffffffffffffff,%rax
  0x0000000002a70c0f: callq  0x00000000029a63e0  ; OopMap{off=340}
                                                ;*invokevirtual toUpperCase
                                                ; - java.lang.Character::toUpperCase@5 (line 6398)
                                                ; - java.lang.Character::toUpperCase@1 (line 6369)
                                                ;   {virtual_call}
  0x0000000002a70c14: and    $0xffff,%eax
  0x0000000002a70c1a: and    $0xffff,%eax
  0x0000000002a70c20: add    $0x40,%rsp
  0x0000000002a70c24: pop    %rbp
  0x0000000002a70c25: test   %eax,-0x2880b2b(%rip)        # 0x00000000001f0100
                                                ;   {poll_return}
  0x0000000002a70c2b: retq   
  0x0000000002a70c2c: mov    %rsi,0x8(%rsp)
  0x0000000002a70c31: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002a70c39: callq  0x0000000002a5f7a0  ; OopMap{off=382}
                                                ;*synchronization entry
                                                ; - java.lang.Character::toUpperCase@-1 (line 6369)
                                                ;   {runtime_call}
  0x0000000002a70c3e: jmpq   0x0000000002a70afe
  0x0000000002a70c43: mov    %rsi,0x8(%rsp)
  0x0000000002a70c48: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002a70c50: callq  0x0000000002a5f7a0  ; OopMap{off=405}
                                                ;*synchronization entry
                                                ; - java.lang.Character::toUpperCase@-1 (line 6398)
                                                ; - java.lang.Character::toUpperCase@1 (line 6369)
                                                ;   {runtime_call}
  0x0000000002a70c55: jmpq   0x0000000002a70b42
  0x0000000002a70c5a: callq  0x00000000029d1b80  ; OopMap{rax=Oop off=415}
                                                ;*invokevirtual toUpperCase
                                                ; - java.lang.Character::toUpperCase@5 (line 6398)
                                                ; - java.lang.Character::toUpperCase@1 (line 6369)
                                                ;   {runtime_call}
  0x0000000002a70c5f: nop
  0x0000000002a70c60: nop
  0x0000000002a70c61: mov    0x2a8(%r15),%rax
  0x0000000002a70c68: movabs $0x0,%r10
  0x0000000002a70c72: mov    %r10,0x2a8(%r15)
  0x0000000002a70c79: movabs $0x0,%r10
  0x0000000002a70c83: mov    %r10,0x2b0(%r15)
  0x0000000002a70c8a: add    $0x40,%rsp
  0x0000000002a70c8e: pop    %rbp
  0x0000000002a70c8f: jmpq   0x00000000029cf0e0  ;   {runtime_call}
  0x0000000002a70c94: hlt    
  0x0000000002a70c95: hlt    
  0x0000000002a70c96: hlt    
  0x0000000002a70c97: hlt    
  0x0000000002a70c98: hlt    
  0x0000000002a70c99: hlt    
  0x0000000002a70c9a: hlt    
  0x0000000002a70c9b: hlt    
  0x0000000002a70c9c: hlt    
  0x0000000002a70c9d: hlt    
  0x0000000002a70c9e: hlt    
  0x0000000002a70c9f: hlt    
[Stub Code]
  0x0000000002a70ca0: nop                       ;   {no_reloc}
  0x0000000002a70ca1: nop
  0x0000000002a70ca2: nop
  0x0000000002a70ca3: nop
  0x0000000002a70ca4: nop
  0x0000000002a70ca5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002a70caf: jmpq   0x0000000002a70caf  ;   {runtime_call}
  0x0000000002a70cb4: nop
  0x0000000002a70cb5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002a70cbf: jmpq   0x0000000002a70cbf  ;   {runtime_call}
[Exception Handler]
  0x0000000002a70cc4: callq  0x00000000029cfc60  ;   {runtime_call}
  0x0000000002a70cc9: mov    %rsp,-0x28(%rsp)
  0x0000000002a70cce: sub    $0x80,%rsp
  0x0000000002a70cd5: mov    %rax,0x78(%rsp)
  0x0000000002a70cda: mov    %rcx,0x70(%rsp)
  0x0000000002a70cdf: mov    %rdx,0x68(%rsp)
  0x0000000002a70ce4: mov    %rbx,0x60(%rsp)
  0x0000000002a70ce9: mov    %rbp,0x50(%rsp)
  0x0000000002a70cee: mov    %rsi,0x48(%rsp)
  0x0000000002a70cf3: mov    %rdi,0x40(%rsp)
  0x0000000002a70cf8: mov    %r8,0x38(%rsp)
  0x0000000002a70cfd: mov    %r9,0x30(%rsp)
  0x0000000002a70d02: mov    %r10,0x28(%rsp)
  0x0000000002a70d07: mov    %r11,0x20(%rsp)
  0x0000000002a70d0c: mov    %r12,0x18(%rsp)
  0x0000000002a70d11: mov    %r13,0x10(%rsp)
  0x0000000002a70d16: mov    %r14,0x8(%rsp)
  0x0000000002a70d1b: mov    %r15,(%rsp)
  0x0000000002a70d1f: movabs $0x623d8e30,%rcx   ;   {external_word}
  0x0000000002a70d29: movabs $0x2a70cc9,%rdx    ;   {internal_word}
  0x0000000002a70d33: mov    %rsp,%r8
  0x0000000002a70d36: and    $0xfffffffffffffff0,%rsp
  0x0000000002a70d3a: callq  0x0000000062093d40  ;   {runtime_call}
  0x0000000002a70d3f: hlt    
[Deopt Handler Code]
  0x0000000002a70d40: movabs $0x2a70d40,%r10    ;   {section_word}
  0x0000000002a70d4a: push   %r10
  0x0000000002a70d4c: jmpq   0x00000000029a7600  ;   {runtime_call}
  0x0000000002a70d51: hlt    
  0x0000000002a70d52: hlt    
  0x0000000002a70d53: hlt    
  0x0000000002a70d54: hlt    
  0x0000000002a70d55: hlt    
  0x0000000002a70d56: hlt    
  0x0000000002a70d57: hlt    
<nmethod compile_id='14' compiler='C1' level='3' entry='0x0000000002a70ac0' size='1304' address='0x0000000002a70950' relocation_offset='288' insts_offset='368' stub_offset='848' scopes_data_offset='1048' scopes_pcs_offset='1120' dependencies_offset='1280' nul_chk_table_offset='1288' method='java/lang/Character toUpperCase (C)C' bytes='6' count='384' iicount='384' stamp='0.407'/>
<writer thread='16600'/>
<task_queued compile_id='17' method='java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder;' bytes='8' count='640' iicount='640' level='3' stamp='0.408' comment='tiered' hot_count='640'/>
[Loaded java.net.URI$Parser from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
<task_queued compile_id='18' method='java/lang/String indexOf (I)I' bytes='7' count='640' iicount='640' level='3' stamp='0.408' comment='tiered' hot_count='640'/>
<writer thread='14520'/>
Decoding compiled method 0x0000000002a71610:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000016aa4558} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/Abs
<writer thread='16600'/>
[Loaded sun.net.spi.DefaultProxySelector$NonProxyInfo from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
<writer thread='14520'/>
tractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rdx:rdx   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    r8:r8     = &apos;java/lang/String&apos;
  #           [sp+0xf0]  (sp of caller)
  0x0000000002a717e0: mov    0x8(%rdx),%r10d
  0x0000000002a717e4: shl    $0x3,%r10
  0x0000000002a717e8: cmp    %rax,%r10
  0x0000000002a717eb: jne    0x00000000029a5f60  ;   {runtime_call}
  0x0000000002a717f1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002a717fc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002a71800: mov    %eax,-0x6000(%rsp)
  0x0000000002a71807: push   %rbp
  0x0000000002a71808: sub    $0xe0,%rsp
  0x0000000002a7180f: mov    %rdx,0xb8(%rsp)
  0x0000000002a71817: movabs $0x16c58ff0,%rsi   ;   {metadata(method data for {method} {0x0000000016aa4558} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002a71821: mov    0xdc(%rsi),%edi
  0x0000000002a71827: add    $0x8,%edi
  0x0000000002a7182a: mov    %edi,0xdc(%rsi)
  0x0000000002a71830: movabs $0x16aa4550,%rsi   ;   {metadata({method} {0x0000000016aa4558} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002a7183a: and    $0x1ff8,%edi
  0x0000000002a71840: cmp    $0x0,%edi
  0x0000000002a71843: je     0x0000000002a71d73  ;*aload_1
                                                ; - java.lang.AbstractStringBuilder::append@0 (line 445)

  0x0000000002a71849: cmp    $0x0,%r8
  0x0000000002a7184d: movabs $0x16c58ff0,%rsi   ;   {metadata(method data for {method} {0x0000000016aa4558} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002a71857: movabs $0x108,%rdi
  0x0000000002a71861: jne    0x0000000002a71871
  0x0000000002a71867: movabs $0x118,%rdi
  0x0000000002a71871: mov    (%rsi,%rdi,1),%rbx
  0x0000000002a71875: lea    0x1(%rbx),%rbx
  0x0000000002a71879: mov    %rbx,(%rsi,%rdi,1)
  0x0000000002a7187d: je     0x0000000002a71d43  ;*ifnonnull
                                                ; - java.lang.AbstractStringBuilder::append@1 (line 445)

  0x0000000002a71883: cmp    (%r8),%rax         ;*invokevirtual length
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ; implicit exception: dispatches to 0x0000000002a71d8a
  0x0000000002a71886: mov    %r8,%rsi
  0x0000000002a71889: movabs $0x16c58ff0,%rdi   ;   {metadata(method data for {method} {0x0000000016aa4558} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002a71893: mov    0x8(%rsi),%esi
  0x0000000002a71896: shl    $0x3,%rsi
  0x0000000002a7189a: cmp    0x140(%rdi),%rsi
  0x0000000002a718a1: jne    0x0000000002a718b0
  0x0000000002a718a3: addq   $0x1,0x148(%rdi)
  0x0000000002a718ab: jmpq   0x0000000002a71916
  0x0000000002a718b0: cmp    0x150(%rdi),%rsi
  0x0000000002a718b7: jne    0x0000000002a718c6
  0x0000000002a718b9: addq   $0x1,0x158(%rdi)
  0x0000000002a718c1: jmpq   0x0000000002a71916
  0x0000000002a718c6: cmpq   $0x0,0x140(%rdi)
  0x0000000002a718d1: jne    0x0000000002a718ea
  0x0000000002a718d3: mov    %rsi,0x140(%rdi)
  0x0000000002a718da: movq   $0x1,0x148(%rdi)
  0x0000000002a718e5: jmpq   0x0000000002a71916
  0x0000000002a718ea: cmpq   $0x0,0x150(%rdi)
  0x0000000002a718f5: jne    0x0000000002a7190e
  0x0000000002a718f7: mov    %rsi,0x150(%rdi)
  0x0000000002a718fe: movq   $0x1,0x158(%rdi)
  0x0000000002a71909: jmpq   0x0000000002a71916
  0x0000000002a7190e: addq   $0x1,0x138(%rdi)
  0x0000000002a71916: movabs $0x16b62670,%rsi   ;   {metadata(method data for {method} {0x0000000016a33c20} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a71920: mov    0xdc(%rsi),%edi
  0x0000000002a71926: add    $0x8,%edi
  0x0000000002a71929: mov    %edi,0xdc(%rsi)
  0x0000000002a7192f: movabs $0x16a33c18,%rsi   ;   {metadata({method} {0x0000000016a33c20} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a71939: and    $0x7ffff8,%edi
  0x0000000002a7193f: cmp    $0x0,%edi
  0x0000000002a71942: je     0x0000000002a71d8f
  0x0000000002a71948: mov    0xc(%r8),%esi      ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)

  0x0000000002a7194c: mov    0xc(%rsi),%esi     ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ; implicit exception: dispatches to 0x0000000002a71da6
  0x0000000002a7194f: mov    %esi,0xac(%rsp)
  0x0000000002a71956: mov    0xc(%rdx),%edi     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 448)

  0x0000000002a71959: add    %esi,%edi
  0x0000000002a7195b: mov    %rdx,%rbx
  0x0000000002a7195e: movabs $0x16c58ff0,%rax   ;   {metadata(method data for {method} {0x0000000016aa4558} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002a71968: addq   $0x1,0x168(%rax)
  0x0000000002a71970: movabs $0x16c314b8,%rbx   ;   {metadata(method data for {method} {0x0000000016aa3c00} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002a7197a: mov    0xdc(%rbx),%eax
  0x0000000002a71980: add    $0x8,%eax
  0x0000000002a71983: mov    %eax,0xdc(%rbx)
  0x0000000002a71989: movabs $0x16aa3bf8,%rbx   ;   {metadata({method} {0x0000000016aa3c00} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002a71993: and    $0x7ffff8,%eax
  0x0000000002a71999: cmp    $0x0,%eax
  0x0000000002a7199c: je     0x0000000002a71dab
  0x0000000002a719a2: mov    0x10(%rdx),%ebx    ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x0000000002a719a5: mov    0xc(%rbx),%eax     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; implicit exception: dispatches to 0x0000000002a71dc2
  0x0000000002a719a8: mov    %rdi,%rcx
  0x0000000002a719ab: sub    %eax,%ecx
  0x0000000002a719ad: cmp    $0x0,%ecx
  0x0000000002a719b0: movabs $0x16c314b8,%rcx   ;   {metadata(method data for {method} {0x0000000016aa3c00} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002a719ba: movabs $0x108,%r9
  0x0000000002a719c4: jle    0x0000000002a719d4
  0x0000000002a719ca: movabs $0x118,%r9
  0x0000000002a719d4: mov    (%rcx,%r9,1),%r11
  0x0000000002a719d8: lea    0x1(%r11),%r11
  0x0000000002a719dc: mov    %r11,(%rcx,%r9,1)
  0x0000000002a719e0: jg     0x0000000002a719f3  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x0000000002a719e6: mov    %r8,0xc0(%rsp)
  0x0000000002a719ee: jmpq   0x0000000002a71c61  ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x0000000002a719f3: mov    %eax,0xa8(%rsp)
  0x0000000002a719fa: mov    %rbx,0xb0(%rsp)
  0x0000000002a71a02: mov    %r8,0xc0(%rsp)
  0x0000000002a71a0a: mov    %rdx,%rcx
  0x0000000002a71a0d: movabs $0x16c314b8,%r9    ;   {metadata(method data for {method} {0x0000000016aa3c00} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002a71a17: addq   $0x1,0x128(%r9)
  0x0000000002a71a1f: mov    %rdi,%r8
  0x0000000002a71a22: mov    %rdx,%rdi
  0x0000000002a71a25: mov    %rdi,%rdx          ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x0000000002a71a28: nop
  0x0000000002a71a29: nop
  0x0000000002a71a2a: nop
  0x0000000002a71a2b: nop
  0x0000000002a71a2c: nop
  0x0000000002a71a2d: nop
  0x0000000002a71a2e: nop
  0x0000000002a71a2f: callq  0x00000000029a61a0  ; OopMap{[184]=Oop [192]=Oop [176]=Oop off=596}
                                                ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {optimized virtual_call}
  0x0000000002a71a34: mov    %rax,%r8           ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x0000000002a71a37: movabs $0x16c314b8,%rbx   ;   {metadata(method data for {method} {0x0000000016aa3c00} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002a71a41: addq   $0x1,0x138(%rbx)
  0x0000000002a71a49: movabs $0x16d20b08,%rbx   ;   {metadata(method data for {method} {0x0000000016b48800} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002a71a53: mov    0xdc(%rbx),%edx
  0x0000000002a71a59: add    $0x8,%edx
  0x0000000002a71a5c: mov    %edx,0xdc(%rbx)
  0x0000000002a71a62: movabs $0x16b487f8,%rbx   ;   {metadata({method} {0x0000000016b48800} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002a71a6c: and    $0x7ffff8,%edx
  0x0000000002a71a72: cmp    $0x0,%edx
  0x0000000002a71a75: je     0x0000000002a71dc7
  0x0000000002a71a7b: mov    %r8,%rbx
  0x0000000002a71a7e: movabs $0x100000208,%rdx  ;   {metadata({type array char})}
  0x0000000002a71a88: movslq %ebx,%rbx
  0x0000000002a71a8b: mov    %rbx,%rdi
  0x0000000002a71a8e: cmp    $0xffffff,%rbx
  0x0000000002a71a95: ja     0x0000000002a71dde
  0x0000000002a71a9b: movabs $0x17,%rsi
  0x0000000002a71aa5: lea    (%rsi,%rbx,2),%rsi
  0x0000000002a71aa9: and    $0xfffffffffffffff8,%rsi
  0x0000000002a71aad: mov    0x60(%r15),%rax
  0x0000000002a71ab1: lea    (%rax,%rsi,1),%rsi
  0x0000000002a71ab5: cmp    0x70(%r15),%rsi
  0x0000000002a71ab9: ja     0x0000000002a71dde
  0x0000000002a71abf: mov    %rsi,0x60(%r15)
  0x0000000002a71ac3: sub    %rax,%rsi
  0x0000000002a71ac6: movq   $0x1,(%rax)
  0x0000000002a71acd: mov    %rdx,%rcx
  0x0000000002a71ad0: shr    $0x3,%rcx
  0x0000000002a71ad4: mov    %ecx,0x8(%rax)
  0x0000000002a71ad7: mov    %ebx,0xc(%rax)
  0x0000000002a71ada: sub    $0x10,%rsi
  0x0000000002a71ade: je     0x0000000002a71af5
  0x0000000002a71ae4: xor    %rbx,%rbx
  0x0000000002a71ae7: shr    $0x3,%rsi
  0x0000000002a71aeb: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000002a71af0: dec    %rsi
  0x0000000002a71af3: jne    0x0000000002a71aeb  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x0000000002a71af5: movabs $0x16d20b08,%rdx   ;   {metadata(method data for {method} {0x0000000016b48800} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002a71aff: addq   $0x1,0x108(%rdx)
  0x0000000002a71b07: movabs $0x16c1e150,%rdx   ;   {metadata(method data for {method} {0x0000000016b242a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002a71b11: mov    0xdc(%rdx),%r9d
  0x0000000002a71b18: add    $0x8,%r9d
  0x0000000002a71b1c: mov    %r9d,0xdc(%rdx)
  0x0000000002a71b23: movabs $0x16b242a0,%rdx   ;   {metadata({method} {0x0000000016b242a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002a71b2d: and    $0x7ffff8,%r9d
  0x0000000002a71b34: cmp    $0x0,%r9d
  0x0000000002a71b38: je     0x0000000002a71de8
  0x0000000002a71b3e: mov    0xa8(%rsp),%edx
  0x0000000002a71b45: cmp    %r8d,%edx
  0x0000000002a71b48: movabs $0x16c1e150,%r9    ;   {metadata(method data for {method} {0x0000000016b242a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002a71b52: movabs $0x108,%rdi
  0x0000000002a71b5c: jg     0x0000000002a71b6c
  0x0000000002a71b62: movabs $0x118,%rdi
  0x0000000002a71b6c: mov    (%r9,%rdi,1),%rsi
  0x0000000002a71b70: lea    0x1(%rsi),%rsi
  0x0000000002a71b74: mov    %rsi,(%r9,%rdi,1)
  0x0000000002a71b78: jg     0x0000000002a71b97  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x0000000002a71b7e: movabs $0x16c1e150,%r8    ;   {metadata(method data for {method} {0x0000000016b242a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002a71b88: incl   0x128(%r8)
  0x0000000002a71b8f: mov    %rdx,%rsi
  0x0000000002a71b92: jmpq   0x0000000002a71b9a  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x0000000002a71b97: mov    %r8,%rsi           ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x0000000002a71b9a: mov    0xb0(%rsp),%rbx
  0x0000000002a71ba2: movabs $0x16d20b08,%rdx   ;   {metadata(method data for {method} {0x0000000016b48800} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002a71bac: addq   $0x1,0x118(%rdx)
  0x0000000002a71bb4: mov    %rbx,%rdx
  0x0000000002a71bb7: mov    $0x0,%r8d
  0x0000000002a71bbd: mov    %rax,%r9
  0x0000000002a71bc0: mov    $0x0,%edi
  0x0000000002a71bc5: mov    %rax,0xc8(%rsp)
  0x0000000002a71bcd: lea    (%r8,%rsi,1),%rcx
  0x0000000002a71bd1: cmp    0xc(%rdx),%ecx
  0x0000000002a71bd4: ja     0x0000000002a71dff
  0x0000000002a71bda: lea    (%rdi,%rsi,1),%rcx
  0x0000000002a71bde: cmp    0xc(%r9),%ecx
  0x0000000002a71be2: ja     0x0000000002a71dff
  0x0000000002a71be8: test   %esi,%esi
  0x0000000002a71bea: jl     0x0000000002a71dff
  0x0000000002a71bf0: je     0x0000000002a71c34
  0x0000000002a71bf6: movslq %r8d,%r8
  0x0000000002a71bf9: movslq %edi,%rdi
  0x0000000002a71bfc: lea    0x10(%rdx,%r8,2),%rcx
  0x0000000002a71c01: lea    0x10(%r9,%rdi,2),%rdx
  0x0000000002a71c06: mov    %rsi,%r8
  0x0000000002a71c09: sub    $0x20,%rsp
  0x0000000002a71c0d: test   $0xf,%esp
  0x0000000002a71c13: je     0x0000000002a71c2b
  0x0000000002a71c19: sub    $0x8,%rsp
  0x0000000002a71c1d: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000000002a71c22: add    $0x8,%rsp
  0x0000000002a71c26: jmpq   0x0000000002a71c30
  0x0000000002a71c2b: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000000002a71c30: add    $0x20,%rsp         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x0000000002a71c34: mov    0xc8(%rsp),%rax
  0x0000000002a71c3c: mov    0xb8(%rsp),%rdx
  0x0000000002a71c44: mov    %rax,%r10
  0x0000000002a71c47: mov    %r10d,0x10(%rdx)
  0x0000000002a71c4b: mov    %rdx,%r8
  0x0000000002a71c4e: shr    $0x9,%r8
  0x0000000002a71c52: movabs $0x11909000,%r9
  0x0000000002a71c5c: movb   $0x0,(%r8,%r9,1)   ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x0000000002a71c61: mov    0xac(%rsp),%esi
  0x0000000002a71c68: mov    0xc0(%rsp),%rbx
  0x0000000002a71c70: mov    0x10(%rdx),%edi    ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@28 (line 449)

  0x0000000002a71c73: mov    0xc(%rdx),%eax     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@32 (line 449)

  0x0000000002a71c76: mov    %rbx,%r8
  0x0000000002a71c79: movabs $0x16c58ff0,%r9    ;   {metadata(method data for {method} {0x0000000016aa4558} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002a71c83: mov    0x8(%r8),%r8d
  0x0000000002a71c87: shl    $0x3,%r8
  0x0000000002a71c8b: cmp    0x180(%r9),%r8
  0x0000000002a71c92: jne    0x0000000002a71ca1
  0x0000000002a71c94: addq   $0x1,0x188(%r9)
  0x0000000002a71c9c: jmpq   0x0000000002a71d07
  0x0000000002a71ca1: cmp    0x190(%r9),%r8
  0x0000000002a71ca8: jne    0x0000000002a71cb7
  0x0000000002a71caa: addq   $0x1,0x198(%r9)
  0x0000000002a71cb2: jmpq   0x0000000002a71d07
  0x0000000002a71cb7: cmpq   $0x0,0x180(%r9)
  0x0000000002a71cc2: jne    0x0000000002a71cdb
  0x0000000002a71cc4: mov    %r8,0x180(%r9)
  0x0000000002a71ccb: movq   $0x1,0x188(%r9)
  0x0000000002a71cd6: jmpq   0x0000000002a71d07
  0x0000000002a71cdb: cmpq   $0x0,0x190(%r9)
  0x0000000002a71ce6: jne    0x0000000002a71cff
  0x0000000002a71ce8: mov    %r8,0x190(%r9)
  0x0000000002a71cef: movq   $0x1,0x198(%r9)
  0x0000000002a71cfa: jmpq   0x0000000002a71d07
  0x0000000002a71cff: addq   $0x1,0x178(%r9)
  0x0000000002a71d07: mov    $0x0,%r8d
  0x0000000002a71d0d: mov    %rsi,%r9
  0x0000000002a71d10: mov    %rax,%rsi
  0x0000000002a71d13: mov    %rbx,%rdx          ;*invokevirtual getChars
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)

  0x0000000002a71d16: nop
  0x0000000002a71d17: callq  0x00000000029a61a0  ; OopMap{[184]=Oop off=1340}
                                                ;*invokevirtual getChars
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ;   {optimized virtual_call}
  0x0000000002a71d1c: mov    0xb8(%rsp),%rdx
  0x0000000002a71d24: mov    0xc(%rdx),%eax     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@40 (line 450)

  0x0000000002a71d27: add    0xac(%rsp),%eax
  0x0000000002a71d2e: mov    %eax,0xc(%rdx)     ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@45 (line 450)

  0x0000000002a71d31: mov    %rdx,%rax
  0x0000000002a71d34: add    $0xe0,%rsp
  0x0000000002a71d3b: pop    %rbp
  0x0000000002a71d3c: test   %eax,-0x2881c42(%rip)        # 0x00000000001f0100
                                                ;   {poll_return}
  0x0000000002a71d42: retq                      ;*areturn
                                                ; - java.lang.AbstractStringBuilder::append@49 (line 451)

  0x0000000002a71d43: mov    %rdx,%rsi
  0x0000000002a71d46: movabs $0x16c58ff0,%rdi   ;   {metadata(method data for {method} {0x0000000016aa4558} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002a71d50: addq   $0x1,0x128(%rdi)
  0x0000000002a71d58: nop
  0x0000000002a71d59: nop
  0x0000000002a71d5a: nop
  0x0000000002a71d5b: nop
  0x0000000002a71d5c: nop
  0x0000000002a71d5d: nop
  0x0000000002a71d5e: nop
  0x0000000002a71d5f: callq  0x00000000029a61a0  ; OopMap{off=1412}
                                                ;*invokespecial appendNull
                                                ; - java.lang.AbstractStringBuilder::append@5 (line 446)
                                                ;   {optimized virtual_call}
  0x0000000002a71d64: add    $0xe0,%rsp
  0x0000000002a71d6b: pop    %rbp
  0x0000000002a71d6c: test   %eax,-0x2881c72(%rip)        # 0x00000000001f0100
                                                ;   {poll_return}
  0x0000000002a71d72: retq   
  0x0000000002a71d73: mov    %rsi,0x8(%rsp)
  0x0000000002a71d78: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002a71d80: callq  0x0000000002a5f7a0  ; OopMap{rdx=Oop [184]=Oop r8=Oop off=1445}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 445)
                                                ;   {runtime_call}
  0x0000000002a71d85: jmpq   0x0000000002a71849
  0x0000000002a71d8a: callq  0x00000000029d1b80  ; OopMap{rdx=Oop [184]=Oop r8=Oop off=1455}
                                                ;*invokevirtual length
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ;   {runtime_call}
  0x0000000002a71d8f: mov    %rsi,0x8(%rsp)
  0x0000000002a71d94: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002a71d9c: callq  0x0000000002a5f7a0  ; OopMap{rdx=Oop [184]=Oop r8=Oop off=1473}
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ;   {runtime_call}
  0x0000000002a71da1: jmpq   0x0000000002a71948
  0x0000000002a71da6: callq  0x00000000029d1b80  ; OopMap{rdx=Oop [184]=Oop r8=Oop off=1483}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ;   {runtime_call}
  0x0000000002a71dab: mov    %rbx,0x8(%rsp)
  0x0000000002a71db0: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002a71db8: callq  0x0000000002a5f7a0  ; OopMap{rdx=Oop [184]=Oop r8=Oop off=1501}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x0000000002a71dbd: jmpq   0x0000000002a719a2
  0x0000000002a71dc2: callq  0x00000000029d1b80  ; OopMap{rdx=Oop [184]=Oop r8=Oop rbx=Oop off=1511}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x0000000002a71dc7: mov    %rbx,0x8(%rsp)
  0x0000000002a71dcc: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002a71dd4: callq  0x0000000002a5f7a0  ; OopMap{[184]=Oop [192]=Oop [176]=Oop off=1529}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x0000000002a71dd9: jmpq   0x0000000002a71a7b
  0x0000000002a71dde: callq  0x00000000029d0900  ; OopMap{[184]=Oop [192]=Oop [176]=Oop off=1539}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x0000000002a71de3: jmpq   0x0000000002a71af5
  0x0000000002a71de8: mov    %rdx,0x8(%rsp)
  0x0000000002a71ded: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002a71df5: callq  0x0000000002a5f7a0  ; OopMap{[184]=Oop [192]=Oop [176]=Oop rax=Oop off=1562}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x0000000002a71dfa: jmpq   0x0000000002a71b3e
  0x0000000002a71dff: callq  0x00000000029a6620  ; OopMap{[184]=Oop [192]=Oop [200]=Oop off=1572}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {static_call}
  0x0000000002a71e04: jmpq   0x0000000002a71c34
  0x0000000002a71e09: nop
  0x0000000002a71e0a: nop
  0x0000000002a71e0b: mov    0x2a8(%r15),%rax
  0x0000000002a71e12: movabs $0x0,%r10
  0x0000000002a71e1c: mov    %r10,0x2a8(%r15)
  0x0000000002a71e23: movabs $0x0,%r10
  0x0000000002a71e2d: mov    %r10,0x2b0(%r15)
  0x0000000002a71e34: add    $0xe0,%rsp
  0x0000000002a71e3b: pop    %rbp
  0x0000000002a71e3c: jmpq   0x00000000029cf0e0  ;   {runtime_call}
  0x0000000002a71e41: hlt    
  0x0000000002a71e42: hlt    
  0x0000000002a71e43: hlt    
  0x0000000002a71e44: hlt    
  0x0000000002a71e45: hlt    
  0x0000000002a71e46: hlt    
  0x0000000002a71e47: hlt    
  0x0000000002a71e48: hlt    
  0x0000000002a71e49: hlt    
  0x0000000002a71e4a: hlt    
  0x0000000002a71e4b: hlt    
  0x0000000002a71e4c: hlt    
  0x0000000002a71e4d: hlt    
  0x0000000002a71e4e: hlt    
  0x0000000002a71e4f: hlt    
  0x0000000002a71e50: hlt    
  0x0000000002a71e51: hlt    
  0x0000000002a71e52: hlt    
  0x0000000002a71e53: hlt    
  0x0000000002a71e54: hlt    
  0x0000000002a71e55: hlt    
  0x0000000002a71e56: hlt    
  0x0000000002a71e57: hlt    
  0x0000000002a71e58: hlt    
  0x0000000002a71e59: hlt    
  0x0000000002a71e5a: hlt    
  0x0000000002a71e5b: hlt    
  0x0000000002a71e5c: hlt    
  0x0000000002a71e5d: hlt    
  0x0000000002a71e5e: hlt    
  0x0000000002a71e5f: hlt    
[Stub Code]
  0x0000000002a71e60: nop                       ;   {no_reloc}
  0x0000000002a71e61: nop
  0x0000000002a71e62: nop
  0x0000000002a71e63: nop
  0x0000000002a71e64: nop
  0x0000000002a71e65: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002a71e6f: jmpq   0x0000000002a71e6f  ;   {runtime_call}
  0x0000000002a71e74: nop
  0x0000000002a71e75: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002a71e7f: jmpq   0x0000000002a71e7f  ;   {runtime_call}
  0x0000000002a71e84: nop
  0x0000000002a71e85: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002a71e8f: jmpq   0x0000000002a71e8f  ;   {runtime_call}
  0x0000000002a71e94: nop
  0x0000000002a71e95: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002a71e9f: jmpq   0x0000000002a71e9f  ;   {runtime_call}
[Exception Handler]
  0x0000000002a71ea4: callq  0x00000000029cfc60  ;   {runtime_call}
  0x0000000002a71ea9: mov    %rsp,-0x28(%rsp)
  0x0000000002a71eae: sub    $0x80,%rsp
  0x0000000002a71eb5: mov    %rax,0x78(%rsp)
  0x0000000002a71eba: mov    %rcx,0x70(%rsp)
  0x0000000002a71ebf: mov    %rdx,0x68(%rsp)
  0x0000000002a71ec4: mov    %rbx,0x60(%rsp)
  0x0000000002a71ec9: mov    %rbp,0x50(%rsp)
  0x0000000002a71ece: mov    %rsi,0x48(%rsp)
  0x0000000002a71ed3: mov    %rdi,0x40(%rsp)
  0x0000000002a71ed8: mov    %r8,0x38(%rsp)
  0x0000000002a71edd: mov    %r9,0x30(%rsp)
  0x0000000002a71ee2: mov    %r10,0x28(%rsp)
  0x0000000002a71ee7: mov    %r11,0x20(%rsp)
  0x0000000002a71eec: mov    %r12,0x18(%rsp)
  0x0000000002a71ef1: mov    %r13,0x10(%rsp)
  0x0000000002a71ef6: mov    %r14,0x8(%rsp)
  0x0000000002a71efb: mov    %r15,(%rsp)
  0x0000000002a71eff: movabs $0x623d8e30,%rcx   ;   {external_word}
  0x0000000002a71f09: movabs $0x2a71ea9,%rdx    ;   {internal_word}
  0x0000000002a71f13: mov    %rsp,%r8
  0x0000000002a71f16: and    $0xfffffffffffffff0,%rsp
  0x0000000002a71f1a: callq  0x0000000062093d40  ;   {runtime_call}
  0x0000000002a71f1f: hlt    
[Deopt Handler Code]
  0x0000000002a71f20: movabs $0x2a71f20,%r10    ;   {section_word}
  0x0000000002a71f2a: push   %r10
  0x0000000002a71f2c: jmpq   0x00000000029a7600  ;   {runtime_call}
  0x0000000002a71f31: hlt    
  0x0000000002a71f32: hlt    
  0x0000000002a71f33: hlt    
  0x0000000002a71f34: hlt    
  0x0000000002a71f35: hlt    
  0x0000000002a71f36: hlt    
  0x0000000002a71f37: hlt    
<nmethod compile_id='15' compiler='C1' level='3' entry='0x0000000002a717e0' size='3456' address='0x0000000002a71610' relocation_offset='288' insts_offset='464' stub_offset='2128' scopes_data_offset='2384' scopes_pcs_offset='2792' dependencies_offset='3416' nul_chk_table_offset='3424' method='java/lang/AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='50' count='777' iicount='777' stamp='0.431'/>
<writer thread='16600'/>
[Loaded sun.net.spi.DefaultProxySelector$3 from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
<writer thread='1672'/>
<task_queued compile_id='19' method='java/lang/CharacterDataLatin1 toUpperCase (I)I' bytes='53' count='384' iicount='384' level='3' stamp='0.431' comment='tiered' hot_count='384'/>
<writer thread='14520'/>
Decoding compiled method 0x0000000002a77010:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000016a35058} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;
<writer thread='16600'/>
[Loaded java.net.Proxy from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
<writer thread='14520'/>

  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8        = int
  #           [sp+0x40]  (sp of caller)
  0x0000000002a77180: mov    0x8(%rdx),%r10d
  0x0000000002a77184: shl    $0x3,%r10
  0x0000000002a77188: cmp    %rax,%r10
  0x0000000002a7718b: jne    0x00000000029a5f60  ;   {runtime_call}
  0x0000000002a77191: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002a7719c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002a771a0: mov    %eax,-0x6000(%rsp)
  0x0000000002a771a7: push   %rbp
  0x0000000002a771a8: sub    $0x30,%rsp
  0x0000000002a771ac: movabs $0x16cbe530,%r9    ;   {metadata(method data for {method} {0x0000000016a35058} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a771b6: mov    0xdc(%r9),%esi
  0x0000000002a771bd: add    $0x8,%esi
  0x0000000002a771c0: mov    %esi,0xdc(%r9)
  0x0000000002a771c7: movabs $0x16a35050,%r9    ;   {metadata({method} {0x0000000016a35058} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a771d1: and    $0x1ff8,%esi
  0x0000000002a771d7: cmp    $0x0,%esi
  0x0000000002a771da: je     0x0000000002a77288  ;*aload_0
                                                ; - java.lang.String::indexOf@0 (line 1503)

  0x0000000002a771e0: mov    %rdx,%r9
  0x0000000002a771e3: movabs $0x16cbe530,%rsi   ;   {metadata(method data for {method} {0x0000000016a35058} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a771ed: mov    0x8(%r9),%r9d
  0x0000000002a771f1: shl    $0x3,%r9
  0x0000000002a771f5: cmp    0x110(%rsi),%r9
  0x0000000002a771fc: jne    0x0000000002a7720b
  0x0000000002a771fe: addq   $0x1,0x118(%rsi)
  0x0000000002a77206: jmpq   0x0000000002a77271
  0x0000000002a7720b: cmp    0x120(%rsi),%r9
  0x0000000002a77212: jne    0x0000000002a77221
  0x0000000002a77214: addq   $0x1,0x128(%rsi)
  0x0000000002a7721c: jmpq   0x0000000002a77271
  0x0000000002a77221: cmpq   $0x0,0x110(%rsi)
  0x0000000002a7722c: jne    0x0000000002a77245
  0x0000000002a7722e: mov    %r9,0x110(%rsi)
  0x0000000002a77235: movq   $0x1,0x118(%rsi)
  0x0000000002a77240: jmpq   0x0000000002a77271
  0x0000000002a77245: cmpq   $0x0,0x120(%rsi)
  0x0000000002a77250: jne    0x0000000002a77269
  0x0000000002a77252: mov    %r9,0x120(%rsi)
  0x0000000002a77259: movq   $0x1,0x128(%rsi)
  0x0000000002a77264: jmpq   0x0000000002a77271
  0x0000000002a77269: addq   $0x1,0x108(%rsi)
  0x0000000002a77271: mov    $0x0,%r9d          ;*invokevirtual indexOf
                                                ; - java.lang.String::indexOf@3 (line 1503)

  0x0000000002a77277: callq  0x00000000029a61a0  ; OopMap{off=252}
                                                ;*invokevirtual indexOf
                                                ; - java.lang.String::indexOf@3 (line 1503)
                                                ;   {optimized virtual_call}
  0x0000000002a7727c: add    $0x30,%rsp
  0x0000000002a77280: pop    %rbp
  0x0000000002a77281: test   %eax,-0x2887187(%rip)        # 0x00000000001f0100
                                                ;   {poll_return}
  0x0000000002a77287: retq   
  0x0000000002a77288: mov    %r9,0x8(%rsp)
  0x0000000002a7728d: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002a77295: callq  0x0000000002a5f7a0  ; OopMap{rdx=Oop off=282}
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1503)
                                                ;   {runtime_call}
  0x0000000002a7729a: jmpq   0x0000000002a771e0
  0x0000000002a7729f: nop
  0x0000000002a772a0: nop
  0x0000000002a772a1: mov    0x2a8(%r15),%rax
  0x0000000002a772a8: movabs $0x0,%r10
  0x0000000002a772b2: mov    %r10,0x2a8(%r15)
  0x0000000002a772b9: movabs $0x0,%r10
  0x0000000002a772c3: mov    %r10,0x2b0(%r15)
  0x0000000002a772ca: add    $0x30,%rsp
  0x0000000002a772ce: pop    %rbp
  0x0000000002a772cf: jmpq   0x00000000029cf0e0  ;   {runtime_call}
  0x0000000002a772d4: hlt    
  0x0000000002a772d5: hlt    
  0x0000000002a772d6: hlt    
  0x0000000002a772d7: hlt    
  0x0000000002a772d8: hlt    
  0x0000000002a772d9: hlt    
  0x0000000002a772da: hlt    
  0x0000000002a772db: hlt    
  0x0000000002a772dc: hlt    
  0x0000000002a772dd: hlt    
  0x0000000002a772de: hlt    
  0x0000000002a772df: hlt    
[Stub Code]
  0x0000000002a772e0: nop                       ;   {no_reloc}
  0x0000000002a772e1: nop
  0x0000000002a772e2: nop
  0x0000000002a772e3: nop
  0x0000000002a772e4: nop
  0x0000000002a772e5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002a772ef: jmpq   0x0000000002a772ef  ;   {runtime_call}
[Exception Handler]
  0x0000000002a772f4: callq  0x00000000029cfc60  ;   {runtime_call}
  0x0000000002a772f9: mov    %rsp,-0x28(%rsp)
  0x0000000002a772fe: sub    $0x80,%rsp
  0x0000000002a77305: mov    %rax,0x78(%rsp)
  0x0000000002a7730a: mov    %rcx,0x70(%rsp)
  0x0000000002a7730f: mov    %rdx,0x68(%rsp)
  0x0000000002a77314: mov    %rbx,0x60(%rsp)
  0x0000000002a77319: mov    %rbp,0x50(%rsp)
  0x0000000002a7731e: mov    %rsi,0x48(%rsp)
  0x0000000002a77323: mov    %rdi,0x40(%rsp)
  0x0000000002a77328: mov    %r8,0x38(%rsp)
  0x0000000002a7732d: mov    %r9,0x30(%rsp)
  0x0000000002a77332: mov    %r10,0x28(%rsp)
  0x0000000002a77337: mov    %r11,0x20(%rsp)
  0x0000000002a7733c: mov    %r12,0x18(%rsp)
  0x0000000002a77341: mov    %r13,0x10(%rsp)
  0x0000000002a77346: mov    %r14,0x8(%rsp)
  0x0000000002a7734b: mov    %r15,(%rsp)
  0x0000000002a7734f: movabs $0x623d8e30,%rcx   ;   {external_word}
  0x0000000002a77359: movabs $0x2a772f9,%rdx    ;   {internal_word}
  0x0000000002a77363: mov    %rsp,%r8
  0x0000000002a77366: and    $0xfffffffffffffff0,%rsp
  0x0000000002a7736a: callq  0x0000000062093d40  ;   {runtime_call}
  0x0000000002a7736f: hlt    
[Deopt Handler Code]
  0x0000000002a77370: movabs $0x2a77370,%r10    ;   {section_word}
  0x0000000002a7737a: push   %r10
  0x0000000002a7737c: jmpq   0x00000000029a7600  ;   {runtime_call}
  0x0000000002a77381: hlt    
  0x0000000002a77382: hlt    
  0x0000000002a77383: hlt    
  0x0000000002a77384: hlt    
  0x0000000002a77385: hlt    
  0x0000000002a77386: hlt    
  0x0000000002a77387: hlt    
<nmethod compile_id='18' compiler='C1' level='3' entry='0x0000000002a77180' size='1040' address='0x0000000002a77010' relocation_offset='288' insts_offset='368' stub_offset='720' scopes_data_offset='896' scopes_pcs_offset='936' dependencies_offset='1032' method='java/lang/String indexOf (I)I' bytes='7' count='748' iicount='748' stamp='0.446'/>
<writer thread='1672'/>
<task_queued compile_id='20' method='java/lang/CharacterDataLatin1 getProperties (I)I' bytes='11' count='4611' iicount='4611' level='1' stamp='0.446' comment='tiered' hot_count='4608'/>
<task_queued compile_id='21' method='java/util/TreeMap rightOf (Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;' bytes='13' count='640' iicount='640' level='3' stamp='0.447' comment='tiered' hot_count='640'/>
<writer thread='16600'/>
[Loaded java.net.Proxy$Type from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
<writer thread='14520'/>
Decoding compiled method 0x0000000002a76c50:
Code:
<writer thread='1672'/>
[Loaded sun.usagetracker.UsageTrackerClient$3 from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
<writer thread='16600'/>
[Loaded java.util.ArrayList$Itr from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
<writer thread='14520'/>
[Entry Point]
[Constants]
  # {method} {0x0000000016aa7968} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;
  # this:     rdx:rdx   = &apos;java/lang/StringBuilder&apos;
  # parm0:    r8:r8     = &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000002a76dc0: mov    0x8(%rdx),%r10d
  0x0000000002a76dc4: shl    $0x3,%r10
  0x0000000002a76dc8: cmp    %rax,%r10
  0x0000000002a76dcb: jne    0x00000000029a5f60  ;   {runtime_call}
  0x0000000002a76dd1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002a76ddc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002a76de0: mov    %eax,-0x6000(%rsp)
  0x0000000002a76de7: push   %rbp
  0x0000000002a76de8: sub    $0x30,%rsp
  0x0000000002a76dec: movabs $0x16c62fe8,%rsi   ;   {metadata(method data for {method} {0x0000000016aa7968} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002a76df6: mov    0xdc(%rsi),%edi
  0x0000000002a76dfc: add    $0x8,%edi
  0x0000000002a76dff: mov    %edi,0xdc(%rsi)
  0x0000000002a76e05: movabs $0x16aa7960,%rsi   ;   {metadata({method} {0x0000000016aa7968} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002a76e0f: and    $0x1ff8,%edi
  0x0000000002a76e15: cmp    $0x0,%edi
  0x0000000002a76e18: je     0x0000000002a76e55  ;*aload_0
                                                ; - java.lang.StringBuilder::append@0 (line 136)

  0x0000000002a76e1e: mov    %rdx,%rsi
  0x0000000002a76e21: movabs $0x16c62fe8,%rdi   ;   {metadata(method data for {method} {0x0000000016aa7968} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002a76e2b: addq   $0x1,0x108(%rdi)
  0x0000000002a76e33: mov    %rdx,%rsi
  0x0000000002a76e36: mov    %rsi,%rdx          ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)

  0x0000000002a76e39: mov    %rsi,0x20(%rsp)
  0x0000000002a76e3e: nop
  0x0000000002a76e3f: callq  0x00000000029a61a0  ; OopMap{[32]=Oop off=132}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ;   {optimized virtual_call}
  0x0000000002a76e44: mov    0x20(%rsp),%rax
  0x0000000002a76e49: add    $0x30,%rsp
  0x0000000002a76e4d: pop    %rbp
  0x0000000002a76e4e: test   %eax,-0x2886d54(%rip)        # 0x00000000001f0100
                                                ;   {poll_return}
  0x0000000002a76e54: retq   
  0x0000000002a76e55: mov    %rsi,0x8(%rsp)
  0x0000000002a76e5a: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002a76e62: callq  0x0000000002a5f7a0  ; OopMap{rdx=Oop r8=Oop off=167}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)
                                                ;   {runtime_call}
  0x0000000002a76e67: jmp    0x0000000002a76e1e
  0x0000000002a76e69: nop
  0x0000000002a76e6a: nop
  0x0000000002a76e6b: mov    0x2a8(%r15),%rax
  0x0000000002a76e72: movabs $0x0,%r10
  0x0000000002a76e7c: mov    %r10,0x2a8(%r15)
  0x0000000002a76e83: movabs $0x0,%r10
  0x0000000002a76e8d: mov    %r10,0x2b0(%r15)
  0x0000000002a76e94: add    $0x30,%rsp
  0x0000000002a76e98: pop    %rbp
  0x0000000002a76e99: jmpq   0x00000000029cf0e0  ;   {runtime_call}
  0x0000000002a76e9e: hlt    
  0x0000000002a76e9f: hlt    
[Stub Code]
  0x0000000002a76ea0: nop                       ;   {no_reloc}
  0x0000000002a76ea1: nop
  0x0000000002a76ea2: nop
  0x0000000002a76ea3: nop
  0x0000000002a76ea4: nop
  0x0000000002a76ea5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002a76eaf: jmpq   0x0000000002a76eaf  ;   {runtime_call}
[Exception Handler]
  0x0000000002a76eb4: callq  0x00000000029cfc60  ;   {runtime_call}
  0x0000000002a76eb9: mov    %rsp,-0x28(%rsp)
  0x0000000002a76ebe: sub    $0x80,%rsp
  0x0000000002a76ec5: mov    %rax,0x78(%rsp)
  0x0000000002a76eca: mov    %rcx,0x70(%rsp)
  0x0000000002a76ecf: mov    %rdx,0x68(%rsp)
  0x0000000002a76ed4: mov    %rbx,0x60(%rsp)
  0x0000000002a76ed9: mov    %rbp,0x50(%rsp)
  0x0000000002a76ede: mov    %rsi,0x48(%rsp)
  0x0000000002a76ee3: mov    %rdi,0x40(%rsp)
  0x0000000002a76ee8: mov    %r8,0x38(%rsp)
  0x0000000002a76eed: mov    %r9,0x30(%rsp)
  0x0000000002a76ef2: mov    %r10,0x28(%rsp)
  0x0000000002a76ef7: mov    %r11,0x20(%rsp)
  0x0000000002a76efc: mov    %r12,0x18(%rsp)
  0x0000000002a76f01: mov    %r13,0x10(%rsp)
  0x0000000002a76f06: mov    %r14,0x8(%rsp)
  0x0000000002a76f0b: mov    %r15,(%rsp)
  0x0000000002a76f0f: movabs $0x623d8e30,%rcx   ;   {external_word}
  0x0000000002a76f19: movabs $0x2a76eb9,%rdx    ;   {internal_word}
  0x0000000002a76f23: mov    %rsp,%r8
  0x0000000002a76f26: and    $0xfffffffffffffff0,%rsp
  0x0000000002a76f2a: callq  0x0000000062093d40  ;   {runtime_call}
  0x0000000002a76f2f: hlt    
[Deopt Handler Code]
  0x0000000002a76f30: movabs $0x2a76f30,%r10    ;   {section_word}
  0x0000000002a76f3a: push   %r10
  0x0000000002a76f3c: jmpq   0x00000000029a7600  ;   {runtime_call}
  0x0000000002a76f41: hlt    
  0x0000000002a76f42: hlt    
  0x0000000002a76f43: hlt    
  0x0000000002a76f44: hlt    
  0x0000000002a76f45: hlt    
  0x0000000002a76f46: hlt    
  0x0000000002a76f47: hlt    
<nmethod compile_id='17' compiler='C1' level='3' entry='0x0000000002a76dc0' size='912' address='0x0000000002a76c50' relocation_offset='288' insts_offset='368' stub_offset='592' scopes_data_offset='768' scopes_pcs_offset='808' dependencies_offset='904' method='java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder;' bytes='8' count='654' iicount='654' stamp='0.451'/>
<writer thread='16600'/>
[Loaded sun.net.NetHooks from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
<writer thread='14520'/>
Decoding compiled method 0x0000000002a768d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000016c03d80} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDa
<writer thread='16600'/>
[Loaded java.net.Inet6Address$Inet6AddressHolder from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
<writer thread='14520'/>
taLatin1&apos;
  # this:     rdx:rdx   = &apos;java/lang/CharacterDataLatin1&apos;
  # parm0:    r8        = int
  #           [sp+0x40]  (sp of caller)
  0x0000000002a76a20: mov    0x8(%rdx),%r10d
  0x0000000002a76a24: shl    $0x3,%r10
  0x0000000002a76a28: cmp    %rax,%r10
  0x0000000002a76a2b: jne    0x00000000029a5f60  ;   {runtime_call}
  0x0000000002a76a31: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002a76a3c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002a76a40: mov    %eax,-0x6000(%rsp)
  0x0000000002a76a47: push   %rbp
  0x0000000002a76a48: sub    $0x30,%rsp         ;*iload_1
                                                ; - java.lang.CharacterDataLatin1::getProperties@0 (line 71)

  0x0000000002a76a4c: and    $0xffff,%r8d
  0x0000000002a76a53: movabs $0xd658bce8,%rax   ;   {oop([I)}
  0x0000000002a76a5d: movslq %r8d,%rsi
  0x0000000002a76a60: cmp    0xc(%rax),%r8d     ; implicit exception: dispatches to 0x0000000002a76a7a
  0x0000000002a76a64: jae    0x0000000002a76a84
  0x0000000002a76a6a: mov    0x10(%rax,%rsi,4),%eax  ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)

  0x0000000002a76a6e: add    $0x30,%rsp
  0x0000000002a76a72: pop    %rbp
  0x0000000002a76a73: test   %eax,-0x2886979(%rip)        # 0x00000000001f0100
                                                ;   {poll_return}
  0x0000000002a76a79: retq   
  0x0000000002a76a7a: callq  0x00000000029d1b80  ; OopMap{rax=Oop off=95}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ;   {runtime_call}
  0x0000000002a76a7f: callq  0x00000000029d1b80  ; OopMap{rax=Oop off=100}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ;   {runtime_call}
  0x0000000002a76a84: mov    %r8,(%rsp)
  0x0000000002a76a88: callq  0x00000000029cec40  ; OopMap{rax=Oop off=109}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ;   {runtime_call}
  0x0000000002a76a8d: nop
  0x0000000002a76a8e: nop
  0x0000000002a76a8f: mov    0x2a8(%r15),%rax
  0x0000000002a76a96: movabs $0x0,%r10
  0x0000000002a76aa0: mov    %r10,0x2a8(%r15)
  0x0000000002a76aa7: movabs $0x0,%r10
  0x0000000002a76ab1: mov    %r10,0x2b0(%r15)
  0x0000000002a76ab8: add    $0x30,%rsp
  0x0000000002a76abc: pop    %rbp
  0x0000000002a76abd: jmpq   0x00000000029cf0e0  ;   {runtime_call}
  0x0000000002a76ac2: hlt    
  0x0000000002a76ac3: hlt    
  0x0000000002a76ac4: hlt    
  0x0000000002a76ac5: hlt    
  0x0000000002a76ac6: hlt    
  0x0000000002a76ac7: hlt    
  0x0000000002a76ac8: hlt    
  0x0000000002a76ac9: hlt    
  0x0000000002a76aca: hlt    
  0x0000000002a76acb: hlt    
  0x0000000002a76acc: hlt    
  0x0000000002a76acd: hlt    
  0x0000000002a76ace: hlt    
  0x0000000002a76acf: hlt    
  0x0000000002a76ad0: hlt    
  0x0000000002a76ad1: hlt    
  0x0000000002a76ad2: hlt    
  0x0000000002a76ad3: hlt    
  0x0000000002a76ad4: hlt    
  0x0000000002a76ad5: hlt    
  0x0000000002a76ad6: hlt    
  0x0000000002a76ad7: hlt    
  0x0000000002a76ad8: hlt    
  0x0000000002a76ad9: hlt    
  0x0000000002a76ada: hlt    
  0x0000000002a76adb: hlt    
  0x0000000002a76adc: hlt    
  0x0000000002a76add: hlt    
  0x0000000002a76ade: hlt    
  0x0000000002a76adf: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002a76ae0: callq  0x00000000029cfc60  ;   {no_reloc}
  0x0000000002a76ae5: mov    %rsp,-0x28(%rsp)
  0x0000000002a76aea: sub    $0x80,%rsp
  0x0000000002a76af1: mov    %rax,0x78(%rsp)
  0x0000000002a76af6: mov    %rcx,0x70(%rsp)
  0x0000000002a76afb: mov    %rdx,0x68(%rsp)
  0x0000000002a76b00: mov    %rbx,0x60(%rsp)
  0x0000000002a76b05: mov    %rbp,0x50(%rsp)
  0x0000000002a76b0a: mov    %rsi,0x48(%rsp)
  0x0000000002a76b0f: mov    %rdi,0x40(%rsp)
  0x0000000002a76b14: mov    %r8,0x38(%rsp)
  0x0000000002a76b19: mov    %r9,0x30(%rsp)
  0x0000000002a76b1e: mov    %r10,0x28(%rsp)
  0x0000000002a76b23: mov    %r11,0x20(%rsp)
  0x0000000002a76b28: mov    %r12,0x18(%rsp)
  0x0000000002a76b2d: mov    %r13,0x10(%rsp)
  0x0000000002a76b32: mov    %r14,0x8(%rsp)
  0x0000000002a76b37: mov    %r15,(%rsp)
  0x0000000002a76b3b: movabs $0x623d8e30,%rcx   ;   {external_word}
  0x0000000002a76b45: movabs $0x2a76ae5,%rdx    ;   {internal_word}
  0x0000000002a76b4f: mov    %rsp,%r8
  0x0000000002a76b52: and    $0xfffffffffffffff0,%rsp
  0x0000000002a76b56: callq  0x0000000062093d40  ;   {runtime_call}
  0x0000000002a76b5b: hlt    
[Deopt Handler Code]
  0x0000000002a76b5c: movabs $0x2a76b5c,%r10    ;   {section_word}
  0x0000000002a76b66: push   %r10
  0x0000000002a76b68: jmpq   0x00000000029a7600  ;   {runtime_call}
  0x0000000002a76b6d: hlt    
  0x0000000002a76b6e: hlt    
  0x0000000002a76b6f: hlt    
<nmethod compile_id='20' compiler='C1' level='1' entry='0x0000000002a76a20' size='856' address='0x0000000002a768d0' relocation_offset='288' insts_offset='336' stub_offset='528' scopes_data_offset='680' scopes_pcs_offset='712' dependencies_offset='824' nul_chk_table_offset='832' method='java/lang/CharacterDataLatin1 getProperties (I)I' bytes='11' count='4727' iicount='4727' stamp='0.455'/>
<make_not_entrant thread='14520' compile_id='10' compiler='C1' level='3' stamp='0.455'/>
<writer thread='1672'/>
<task_queued compile_id='22' method='java/lang/Character toLowerCase (I)I' bytes='9' count='3968' iicount='3968' level='3' stamp='0.455' comment='tiered' hot_count='3968'/>
<task_queued compile_id='23' method='java/lang/CharacterDataLatin1 toLowerCase (I)I' bytes='39' count='3968' iicount='3968' level='3' stamp='0.455' comment='tiered' hot_count='3968'/>
<writer thread='14520'/>
Decoding compiled method 0x0000000002a75fd0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000016aca4e8} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x0000000002a76140: mov    %eax,-0x6000(%rsp)
  0x0000000002a76147: push   %rbp
  0x0000000002a76148: sub    $0x30,%rsp
  0x0000000002a7614c: movabs $0x16d172e0,%rsi   ;   {metadata(method data for {method} {0x0000000016aca4e8} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002a76156: mov    0xdc(%rsi),%edi
  0x0000000002a7615c: add    $0x8,%edi
  0x0000000002a7615f: mov    %edi,0xdc(%rsi)
  0x0000000002a76165: movabs $0x16aca4e0,%rsi   ;   {metadata({method} {0x0000000016aca4e8} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002a7616f: and    $0x1ff8,%edi
  0x0000000002a76175: cmp    $0x0,%edi
  0x0000000002a76178: je     0x0000000002a76260  ;*iload_0
                                                ; - java.lang.Character::toUpperCase@0 (line 6398)

  0x0000000002a7617e: movabs $0x16d172e0,%rsi   ;   {metadata(method data for {method} {0x0000000016aca4e8} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002a76188: addq   $0x1,0x108(%rsi)
  0x0000000002a76190: mov    %rdx,%rsi
  0x0000000002a76193: mov    %rsi,%rdx          ;*invokestatic of
                                                ; - java.lang.Character::toUpperCase@1 (line 6398)

  0x0000000002a76196: mov    %esi,0x20(%rsp)
  0x0000000002a7619a: nop
  0x0000000002a7619b: nop
  0x0000000002a7619c: nop
  0x0000000002a7619d: nop
<writer thread='1672'/>
[Loaded java.io.FileOutputStream$1 from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
<writer thread='14520'/>

  0x0000000002a7619e: nop
  0x0000000002a7619f: callq  0x00000000029a6620  ; OopMap{off=100}
                                                ;*invokestatic of
                                                ; - java.lang.Character::toUpperCase@1 (line 6398)
                                                ;   {static_call}
  0x0000000002a761a4: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x0000000002a76277
  0x0000000002a761a7: mov    %rax,%r8
  0x0000000002a761aa: movabs $0x16d172e0,%rdx   ;   {metadata(method data for {method} {0x0000000016aca4e8} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002a761b4: mov    0x8(%r8),%r8d
  0x0000000002a761b8: shl    $0x3,%r8
  0x0000000002a761bc: cmp    0x120(%rdx),%r8
  0x0000000002a761c3: jne    0x0000000002a761d2
  0x0000000002a761c5: addq   $0x1,0x128(%rdx)
  0x0000000002a761cd: jmpq   0x0000000002a76238
  0x0000000002a761d2: cmp    0x130(%rdx),%r8
  0x0000000002a761d9: jne    0x0000000002a761e8
  0x0000000002a761db: addq   $0x1,0x138(%rdx)
  0x0000000002a761e3: jmpq   0x0000000002a76238
  0x0000000002a761e8: cmpq   $0x0,0x120(%rdx)
  0x0000000002a761f3: jne    0x0000000002a7620c
  0x0000000002a761f5: mov    %r8,0x120(%rdx)
  0x0000000002a761fc: movq   $0x1,0x128(%rdx)
  0x0000000002a76207: jmpq   0x0000000002a76238
  0x0000000002a7620c: cmpq   $0x0,0x130(%rdx)
  0x0000000002a76217: jne    0x0000000002a76230
  0x0000000002a76219: mov    %r8,0x130(%rdx)
  0x0000000002a76220: movq   $0x1,0x138(%rdx)
  0x0000000002a7622b: jmpq   0x0000000002a76238
  0x0000000002a76230: addq   $0x1,0x118(%rdx)
  0x0000000002a76238: mov    0x20(%rsp),%r8d
  0x0000000002a7623d: mov    %rax,%rdx          ;*invokevirtual toUpperCase
                                                ; - java.lang.Character::toUpperCase@5 (line 6398)

  0x0000000002a76240: nop
  0x0000000002a76241: nop
  0x0000000002a76242: nop
  0x0000000002a76243: nop
  0x0000000002a76244: nop
  0x0000000002a76245: movabs $0xffffffffffffffff,%rax
  0x0000000002a7624f: callq  0x00000000029a63e0  ; OopMap{off=276}
                                                ;*invokevirtual toUpperCase
                                                ; - java.lang.Character::toUpperCase@5 (line 6398)
                                                ;   {virtual_call}
  0x0000000002a76254: add    $0x30,%rsp
  0x0000000002a76258: pop    %rbp
  0x0000000002a76259: test   %eax,-0x288615f(%rip)        # 0x00000000001f0100
                                                ;   {poll_return}
  0x0000000002a7625f: retq   
  0x0000000002a76260: mov    %rsi,0x8(%rsp)
  0x0000000002a76265: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002a7626d: callq  0x0000000002a5f7a0  ; OopMap{off=306}
                                                ;*synchronization entry
                                                ; - java.lang.Character::toUpperCase@-1 (line 6398)
                                                ;   {runtime_call}
  0x0000000002a76272: jmpq   0x0000000002a7617e
  0x0000000002a76277: callq  0x00000000029d1b80  ; OopMap{rax=Oop off=316}
                                                ;*invokevirtual toUpperCase
                                                ; - java.lang.Character::toUpperCase@5 (line 6398)
                                                ;   {runtime_call}
  0x0000000002a7627c: nop
  0x0000000002a7627d: nop
  0x0000000002a7627e: mov    0x2a8(%r15),%rax
  0x0000000002a76285: movabs $0x0,%r10
  0x0000000002a7628f: mov    %r10,0x2a8(%r15)
  0x0000000002a76296: movabs $0x0,%r10
  0x0000000002a762a0: mov    %r10,0x2b0(%r15)
  0x0000000002a762a7: add    $0x30,%rsp
  0x0000000002a762ab: pop    %rbp
  0x0000000002a762ac: jmpq   0x00000000029cf0e0  ;   {runtime_call}
  0x0000000002a762b1: hlt    
  0x0000000002a762b2: hlt    
  0x0000000002a762b3: hlt    
  0x0000000002a762b4: hlt    
  0x0000000002a762b5: hlt    
  0x0000000002a762b6: hlt    
  0x0000000002a762b7: hlt    
  0x0000000002a762b8: hlt    
  0x0000000002a762b9: hlt    
  0x0000000002a762ba: hlt    
  0x0000000002a762bb: hlt    
  0x0000000002a762bc: hlt    
  0x0000000002a762bd: hlt    
  0x0000000002a762be: hlt    
  0x0000000002a762bf: hlt    
[Stub Code]
  0x0000000002a762c0: nop                       ;   {no_reloc}
  0x0000000002a762c1: nop
  0x0000000002a762c2: nop
  0x0000000002a762c3: nop
  0x0000000002a762c4: nop
  0x0000000002a762c5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002a762cf: jmpq   0x0000000002a762cf  ;   {runtime_call}
  0x0000000002a762d4: nop
  0x0000000002a762d5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002a762df: jmpq   0x0000000002a762df  ;   {runtime_call}
[Exception Handler]
  0x0000000002a762e4: callq  0x00000000029cfc60  ;   {runtime_call}
  0x0000000002a762e9: mov    %rsp,-0x28(%rsp)
  0x0000000002a762ee: sub    $0x80,%rsp
  0x0000000002a762f5: mov    %rax,0x78(%rsp)
  0x0000000002a762fa: mov    %rcx,0x70(%rsp)
  0x0000000002a762ff: mov    %rdx,0x68(%rsp)
  0x0000000002a76304: mov    %rbx,0x60(%rsp)
  0x0000000002a76309: mov    %rbp,0x50(%rsp)
  0x0000000002a7630e: mov    %rsi,0x48(%rsp)
  0x0000000002a76313: mov    %rdi,0x40(%rsp)
  0x0000000002a76318: mov    %r8,0x38(%rsp)
  0x0000000002a7631d: mov    %r9,0x30(%rsp)
  0x0000000002a76322: mov    %r10,0x28(%rsp)
  0x0000000002a76327: mov    %r11,0x20(%rsp)
  0x0000000002a7632c: mov    %r12,0x18(%rsp)
  0x0000000002a76331: mov    %r13,0x10(%rsp)
  0x0000000002a76336: mov    %r14,0x8(%rsp)
  0x0000000002a7633b: mov    %r15,(%rsp)
  0x0000000002a7633f: movabs $0x623d8e30,%rcx   ;   {external_word}
  0x0000000002a76349: movabs $0x2a762e9,%rdx    ;   {internal_word}
  0x0000000002a76353: mov    %rsp,%r8
  0x0000000002a76356: and    $0xfffffffffffffff0,%rsp
  0x0000000002a7635a: callq  0x0000000062093d40  ;   {runtime_call}
  0x0000000002a7635f: hlt    
[Deopt Handler Code]
  0x0000000002a76360: movabs $0x2a76360,%r10    ;   {section_word}
  0x0000000002a7636a: push   %r10
  0x0000000002a7636c: jmpq   0x00000000029a7600  ;   {runtime_call}
  0x0000000002a76371: hlt    
  0x0000000002a76372: hlt    
  0x0000000002a76373: hlt    
  0x0000000002a76374: hlt    
  0x0000000002a76375: hlt    
  0x0000000002a76376: hlt    
  0x0000000002a76377: hlt    
<nmethod compile_id='16' compiler='C1' level='3' entry='0x0000000002a76140' size='1160' address='0x0000000002a75fd0' relocation_offset='288' insts_offset='368' stub_offset='752' scopes_data_offset='944' scopes_pcs_offset='992' dependencies_offset='1136' nul_chk_table_offset='1144' method='java/lang/Character toUpperCase (I)I' bytes='9' count='510' iicount='510' stamp='0.462'/>
<writer thread='16600'/>
[Loaded java.net.Socket$2 from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.net.SocketInputStream from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
<writer thread='14520'/>
Decoding compiled method 0x0000000002a75b10:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000016aca3b8} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
<writer thread='1672'/>
[Loaded sun.launcher.LauncherHelper from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
<writer thread='14520'/>
  0x0000000002a75c80: mov    %eax,-0x6000(%rsp)
  0x0000000002a75c87: push   %rbp
  0x0000000002a75c88: sub    $0x30,%rsp
  0x0000000002a75c8c: movabs $0x16c05108,%rsi   ;   {metadata(method data for {method} {0x0000000016aca3b8} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002a75c96: mov    0xdc(%rsi),%edi
  0x0000000002a75c9c: add    $0x8,%edi
  0x0000000002a75c9f: mov    %edi,0xdc(%rsi)
  0x0000000002a75ca5: movabs $0x16aca3b0,%rsi   ;   {metadata({method} {0x0000000016aca3b8} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002a75caf: and    $0x1ff8,%edi
  0x0000000002a75cb5: cmp    $0x0,%edi
  0x0000000002a75cb8: je     0x0000000002a75da0  ;*iload_0
                                                ; - java.lang.Character::toLowerCase@0 (line 6338)

  0x0000000002a75cbe: movabs $0x16c05108,%rsi   ;   {metadata(method data for {method} {0x0000000016aca3b8} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002a75cc8: addq   $0x1,0x108(%rsi)
  0x0000000002a75cd0: mov    %rdx,%rsi
  0x0000000002a75cd3: mov    %rsi,%rdx          ;*invokestatic of
                                                ; - java.lang.Character::toLowerCase@1 (line 6338)

  0x0000000002a75cd6: mov    %esi,0x20(%rsp)
  0x0000000002a75cda: nop
  0x0000000002a75cdb: nop
  0x0000000002a75cdc: nop
  0x0000000002a75cdd: nop
  0x0000000002a75cde: nop
  0x0000000002a75cdf: callq  0x00000000029a6620  ; OopMap{off=100}
                                                ;*invokestatic of
                                                ; - java.lang.Character::toLowerCase@1 (line 6338)
                                                ;   {static_call}
  0x0000000002a75ce4: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x0000000002a75db7
  0x0000000002a75ce7: mov    %rax,%r8
  0x0000000002a75cea: movabs $0x16c05108,%rdx   ;   {metadata(method data for {method} {0x0000000016aca3b8} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002a75cf4: mov    0x8(%r8),%r8d
  0x0000000002a75cf8: shl    $0x3,%r8
  0x0000000002a75cfc: cmp    0x120(%rdx),%r8
  0x0000000002a75d03: jne    0x0000000002a75d12
  0x0000000002a75d05: addq   $0x1,0x128(%rdx)
  0x0000000002a75d0d: jmpq   0x0000000002a75d78
  0x0000000002a75d12: cmp    0x130(%rdx),%r8
  0x0000000002a75d19: jne    0x0000000002a75d28
  0x0000000002a75d1b: addq   $0x1,0x138(%rdx)
  0x0000000002a75d23: jmpq   0x0000000002a75d78
  0x0000000002a75d28: cmpq   $0x0,0x120(%rdx)
  0x0000000002a75d33: jne    0x0000000002a75d4c
  0x0000000002a75d35: mov    %r8,0x120(%rdx)
  0x0000000002a75d3c: movq   $0x1,0x128(%rdx)
  0x0000000002a75d47: jmpq   0x0000000002a75d78
  0x0000000002a75d4c: cmpq   $0x0,0x130(%rdx)
  0x0000000002a75d57: jne    0x0000000002a75d70
  0x0000000002a75d59: mov    %r8,0x130(%rdx)
  0x0000000002a75d60: movq   $0x1,0x138(%rdx)
  0x0000000002a75d6b: jmpq   0x0000000002a75d78
  0x0000000002a75d70: addq   $0x1,0x118(%rdx)
  0x0000000002a75d78: mov    0x20(%rsp),%r8d
  0x0000000002a75d7d: mov    %rax,%rdx          ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)

  0x0000000002a75d80: nop
  0x0000000002a75d81: nop
  0x0000000002a75d82: nop
  0x0000000002a75d83: nop
  0x0000000002a75d84: nop
  0x0000000002a75d85: movabs $0xffffffffffffffff,%rax
  0x0000000002a75d8f: callq  0x00000000029a63e0  ; OopMap{off=276}
                                                ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ;   {virtual_call}
  0x0000000002a75d94: add    $0x30,%rsp
  0x0000000002a75d98: pop    %rbp
  0x0000000002a75d99: test   %eax,-0x2885c9f(%rip)        # 0x00000000001f0100
                                                ;   {poll_return}
  0x0000000002a75d9f: retq   
  0x0000000002a75da0: mov    %rsi,0x8(%rsp)
  0x0000000002a75da5: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002a75dad: callq  0x0000000002a5f7a0  ; OopMap{off=306}
                                                ;*synchronization entry
                                                ; - java.lang.Character::toLowerCase@-1 (line 6338)
                                                ;   {runtime_call}
  0x0000000002a75db2: jmpq   0x0000000002a75cbe
  0x0000000002a75db7: callq  0x00000000029d1b80  ; OopMap{rax=Oop off=316}
                                                ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ;   {runtime_call}
  0x0000000002a75dbc: nop
  0x0000000002a75dbd: nop
  0x0000000002a75dbe: mov    0x2a8(%r15),%rax
  0x0000000002a75dc5: movabs $0x0,%r10
  0x0000000002a75dcf: mov    %r10,0x2a8(%r15)
  0x0000000002a75dd6: movabs $0x0,%r10
  0x0000000002a75de0: mov    %r10,0x2b0(%r15)
  0x0000000002a75de7: add    $0x30,%rsp
  0x0000000002a75deb: pop    %rbp
  0x0000000002a75dec: jmpq   0x00000000029cf0e0  ;   {runtime_call}
  0x0000000002a75df1: hlt    
  0x0000000002a75df2: hlt    
  0x0000000002a75df3: hlt    
  0x0000000002a75df4: hlt    
  0x0000000002a75df5: hlt    
  0x0000000002a75df6: hlt    
  0x0000000002a75df7: hlt    
  0x0000000002a75df8: hlt    
  0x0000000002a75df9: hlt    
  0x0000000002a75dfa: hlt    
  0x0000000002a75dfb: hlt    
  0x0000000002a75dfc: hlt    
  0x0000000002a75dfd: hlt    
  0x0000000002a75dfe: hlt    
  0x0000000002a75dff: hlt    
[Stub Code]
  0x0000000002a75e00: nop                       ;   {no_reloc}
  0x0000000002a75e01: nop
  0x0000000002a75e02: nop
  0x0000000002a75e03: nop
  0x0000000002a75e04: nop
  0x0000000002a75e05: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002a75e0f: jmpq   0x0000000002a75e0f  ;   {runtime_call}
  0x0000000002a75e14: nop
  0x0000000002a75e15: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002a75e1f: jmpq   0x0000000002a75e1f  ;   {runtime_call}
[Exception Handler]
  0x0000000002a75e24: callq  0x00000000029cfc60  ;   {runtime_call}
  0x0000000002a75e29: mov    %rsp,-0x28(%rsp)
  0x0000000002a75e2e: sub    $0x80,%rsp
  0x0000000002a75e35: mov    %rax,0x78(%rsp)
  0x0000000002a75e3a: mov    %rcx,0x70(%rsp)
  0x0000000002a75e3f: mov    %rdx,0x68(%rsp)
  0x0000000002a75e44: mov    %rbx,0x60(%rsp)
  0x0000000002a75e49: mov    %rbp,0x50(%rsp)
  0x0000000002a75e4e: mov    %rsi,0x48(%rsp)
  0x0000000002a75e53: mov    %rdi,0x40(%rsp)
  0x0000000002a75e58: mov    %r8,0x38(%rsp)
  0x0000000002a75e5d: mov    %r9,0x30(%rsp)
  0x0000000002a75e62: mov    %r10,0x28(%rsp)
  0x0000000002a75e67: mov    %r11,0x20(%rsp)
  0x0000000002a75e6c: mov    %r12,0x18(%rsp)
  0x0000000002a75e71: mov    %r13,0x10(%rsp)
  0x0000000002a75e76: mov    %r14,0x8(%rsp)
  0x0000000002a75e7b: mov    %r15,(%rsp)
  0x0000000002a75e7f: movabs $0x623d8e30,%rcx   ;   {external_word}
  0x0000000002a75e89: movabs $0x2a75e29,%rdx    ;   {internal_word}
  0x0000000002a75e93: mov    %rsp,%r8
  0x0000000002a75e96: and    $0xfffffffffffffff0,%rsp
  0x0000000002a75e9a: callq  0x0000000062093d40  ;   {runtime_call}
  0x0000000002a75e9f: hlt    
[Deopt Handler Code]
  0x0000000002a75ea0: movabs $0x2a75ea0,%r10    ;   {section_word}
  0x0000000002a75eaa: push   %r10
  0x0000000002a75eac: jmpq   0x00000000029a7600  ;   {runtime_call}
  0x0000000002a75eb1: hlt    
  0x0000000002a75eb2: hlt    
  0x0000000002a75eb3: hlt    
  0x0000000002a75eb4: hlt    
  0x0000000002a75eb5: hlt    
  0x0000000002a75eb6: hlt    
  0x0000000002a75eb7: hlt    
<nmethod compile_id='22' compiler='C1' level='3' entry='0x0000000002a75c80' size='1160' address='0x0000000002a75b10' relocation_offset='288' insts_offset='368' stub_offset='752' scopes_data_offset='944' scopes_pcs_offset='992' dependencies_offset='1136' nul_chk_table_offset='1144' method='java/lang/Character toLowerCase (I)I' bytes='9' count='3969' iicount='3969' stamp='0.467'/>
<writer thread='1672'/>
<task_queued compile_id='24' method='java/lang/String startsWith (Ljava/lang/String;I)Z' bytes='72' count='640' backedge_count='1139' iicount='640' level='3' stamp='0.468' comment='tiered' hot_count='640'/>
<writer thread='16600'/>
[Loaded sun.nio.cs.US_ASCII$Decoder from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
<writer thread='1672'/>
<task_queued compile_id='25' method='java/util/ArrayList size ()I' bytes='5' count='256' iicount='256' level='1' stamp='0.468' comment='tiered' hot_count='256'/>
<task_queued compile_id='26' method='java/lang/String startsWith (Ljava/lang/String;)Z' bytes='7' count='512' iicount='512' level='3' stamp='0.468' comment='tiered' hot_count='512'/>
<writer thread='14520'/>
Decoding compiled method 0x0000000002a75190:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000016c04550} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;
  # this:     rdx:rdx   = &apos;java/lang/CharacterDataLatin1&apos;
  # parm0:    r8        = int
<writer thread='1672'/>
[Loaded sun.misc.URLClassPath$FileLoader$1 from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
<writer thread='14520'/>

  #           [sp+0x50]  (sp of caller)
  0x0000000002a75300: mov    0x8(%rdx),%r10d
  0x0000000002a75304: shl    $0x3,%r10
  0x0000000002a75308: cmp    %rax,%r10
  0x0000000002a7530b: jne    0x00000000029a5f60  ;   {runtime_call}
  0x0000000002a75311: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002a7531c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002a75320: mov    %eax,-0x6000(%rsp)
  0x0000000002a75327: push   %rbp
  0x0000000002a75328: sub    $0x40,%rsp
  0x0000000002a7532c: movabs $0x16c05500,%rax   ;   {metadata(method data for {method} {0x0000000016c04550} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000002a75336: mov    0xdc(%rax),%esi
  0x0000000002a7533c: add    $0x8,%esi
  0x0000000002a7533f: mov    %esi,0xdc(%rax)
  0x0000000002a75345: movabs $0x16c04548,%rax   ;   {metadata({method} {0x0000000016c04550} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000002a7534f: and    $0x1ff8,%esi
  0x0000000002a75355: cmp    $0x0,%esi
  0x0000000002a75358: je     0x0000000002a75467  ;*iload_1
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@0 (line 133)

  0x0000000002a7535e: movabs $0x16c05500,%rax   ;   {metadata(method data for {method} {0x0000000016c04550} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000002a75368: addq   $0x1,0x118(%rax)
  0x0000000002a75370: movabs $0x16c056c0,%rax   ;   {metadata(method data for {method} {0x0000000016c03d80} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000002a7537a: mov    0xdc(%rax),%esi
  0x0000000002a75380: add    $0x8,%esi
  0x0000000002a75383: mov    %esi,0xdc(%rax)
  0x0000000002a75389: movabs $0x16c03d78,%rax   ;   {metadata({method} {0x0000000016c03d80} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000002a75393: and    $0x7ffff8,%esi
  0x0000000002a75399: cmp    $0x0,%esi
  0x0000000002a7539c: je     0x0000000002a7547e
  0x0000000002a753a2: mov    %r8,%rax
  0x0000000002a753a5: and    $0xffff,%eax
  0x0000000002a753ab: movabs $0xd658bce8,%rsi   ;   {oop([I)}
  0x0000000002a753b5: movslq %eax,%rdi
  0x0000000002a753b8: cmp    0xc(%rsi),%eax     ; implicit exception: dispatches to 0x0000000002a75495
  0x0000000002a753bb: jae    0x0000000002a7549f
  0x0000000002a753c1: mov    0x10(%rsi,%rdi,4),%eax  ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)

  0x0000000002a753c5: mov    %rax,%rsi
  0x0000000002a753c8: and    $0x20000,%esi
  0x0000000002a753ce: cmp    $0x0,%esi
  0x0000000002a753d1: movabs $0x16c05500,%rsi   ;   {metadata(method data for {method} {0x0000000016c04550} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000002a753db: movabs $0x138,%rdi
  0x0000000002a753e5: je     0x0000000002a753f5
  0x0000000002a753eb: movabs $0x148,%rdi
  0x0000000002a753f5: mov    (%rsi,%rdi,1),%rbx
  0x0000000002a753f9: lea    0x1(%rbx),%rbx
  0x0000000002a753fd: mov    %rbx,(%rsi,%rdi,1)
  0x0000000002a75401: je     0x0000000002a75458  ;*ifeq
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@12 (line 136)

  0x0000000002a75407: mov    %rax,%rsi
  0x0000000002a7540a: and    $0x7fc0000,%esi
  0x0000000002a75410: cmp    $0x7fc0000,%esi
  0x0000000002a75416: movabs $0x16c05500,%rsi   ;   {metadata(method data for {method} {0x0000000016c04550} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000002a75420: movabs $0x158,%rdi
  0x0000000002a7542a: je     0x0000000002a7543a
  0x0000000002a75430: movabs $0x168,%rdi
  0x0000000002a7543a: mov    (%rsi,%rdi,1),%rbx
  0x0000000002a7543e: lea    0x1(%rbx),%rbx
  0x0000000002a75442: mov    %rbx,(%rsi,%rdi,1)
  0x0000000002a75446: je     0x0000000002a75458  ;*if_icmpeq
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@21 (line 136)

  0x0000000002a7544c: shl    $0x5,%eax
  0x0000000002a7544f: sar    $0x17,%eax
  0x0000000002a75452: add    %r8d,%eax
  0x0000000002a75455: mov    %rax,%r8           ;*iload_2
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@37 (line 141)

  0x0000000002a75458: mov    %r8,%rax
  0x0000000002a7545b: add    $0x40,%rsp
  0x0000000002a7545f: pop    %rbp
  0x0000000002a75460: test   %eax,-0x2885366(%rip)        # 0x00000000001f0100
                                                ;   {poll_return}
  0x0000000002a75466: retq   
  0x0000000002a75467: mov    %rax,0x8(%rsp)
  0x0000000002a7546c: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002a75474: callq  0x0000000002a5f7a0  ; OopMap{rdx=Oop off=377}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@-1 (line 133)
                                                ;   {runtime_call}
  0x0000000002a75479: jmpq   0x0000000002a7535e
  0x0000000002a7547e: mov    %rax,0x8(%rsp)
  0x0000000002a75483: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002a7548b: callq  0x0000000002a5f7a0  ; OopMap{off=400}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::getProperties@-1 (line 71)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ;   {runtime_call}
  0x0000000002a75490: jmpq   0x0000000002a753a2
  0x0000000002a75495: callq  0x00000000029d1b80  ; OopMap{rsi=Oop off=410}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ;   {runtime_call}
  0x0000000002a7549a: callq  0x00000000029d1b80  ; OopMap{rsi=Oop off=415}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ;   {runtime_call}
  0x0000000002a7549f: mov    %rax,(%rsp)
  0x0000000002a754a3: callq  0x00000000029cec40  ; OopMap{rsi=Oop off=424}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ;   {runtime_call}
  0x0000000002a754a8: nop
  0x0000000002a754a9: nop
  0x0000000002a754aa: mov    0x2a8(%r15),%rax
  0x0000000002a754b1: movabs $0x0,%r10
  0x0000000002a754bb: mov    %r10,0x2a8(%r15)
  0x0000000002a754c2: movabs $0x0,%r10
  0x0000000002a754cc: mov    %r10,0x2b0(%r15)
  0x0000000002a754d3: add    $0x40,%rsp
  0x0000000002a754d7: pop    %rbp
  0x0000000002a754d8: jmpq   0x00000000029cf0e0  ;   {runtime_call}
  0x0000000002a754dd: hlt    
  0x0000000002a754de: hlt    
  0x0000000002a754df: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002a754e0: callq  0x00000000029cfc60  ;   {no_reloc}
  0x0000000002a754e5: mov    %rsp,-0x28(%rsp)
  0x0000000002a754ea: sub    $0x80,%rsp
  0x0000000002a754f1: mov    %rax,0x78(%rsp)
  0x0000000002a754f6: mov    %rcx,0x70(%rsp)
  0x0000000002a754fb: mov    %rdx,0x68(%rsp)
  0x0000000002a75500: mov    %rbx,0x60(%rsp)
  0x0000000002a75505: mov    %rbp,0x50(%rsp)
  0x0000000002a7550a: mov    %rsi,0x48(%rsp)
  0x0000000002a7550f: mov    %rdi,0x40(%rsp)
  0x0000000002a75514: mov    %r8,0x38(%rsp)
  0x0000000002a75519: mov    %r9,0x30(%rsp)
  0x0000000002a7551e: mov    %r10,0x28(%rsp)
  0x0000000002a75523: mov    %r11,0x20(%rsp)
  0x0000000002a75528: mov    %r12,0x18(%rsp)
  0x0000000002a7552d: mov    %r13,0x10(%rsp)
  0x0000000002a75532: mov    %r14,0x8(%rsp)
  0x0000000002a75537: mov    %r15,(%rsp)
  0x0000000002a7553b: movabs $0x623d8e30,%rcx   ;   {external_word}
  0x0000000002a75545: movabs $0x2a754e5,%rdx    ;   {internal_word}
  0x0000000002a7554f: mov    %rsp,%r8
  0x0000000002a75552: and    $0xfffffffffffffff0,%rsp
  0x0000000002a75556: callq  0x0000000062093d40  ;   {runtime_call}
  0x0000000002a7555b: hlt    
[Deopt Handler Code]
  0x0000000002a7555c: movabs $0x2a7555c,%r10    ;   {section_word}
  0x0000000002a75566: push   %r10
  0x0000000002a75568: jmpq   0x00000000029a7600  ;   {runtime_call}
  0x0000000002a7556d: hlt    
  0x0000000002a7556e: hlt    
  0x0000000002a7556f: hlt    
<nmethod compile_id='23' compiler='C1' level='3' entry='0x0000000002a75300' size='1352' address='0x0000000002a75190' relocation_offset='288' insts_offset='368' stub_offset='848' scopes_data_offset='1016' scopes_pcs_offset='1128' dependencies_offset='1320' nul_chk_table_offset='1328' method='java/lang/CharacterDataLatin1 toLowerCase (I)I' bytes='39' count='3971' iicount='3971' stamp='0.474'/>
<writer thread='1672'/>
<task_queued compile_id='27' method='java/io/WinNTFileSystem isSlash (C)Z' bytes='18' count='5760' iicount='5760' stamp='0.474' comment='tiered' hot_count='5760'/>
<task_queued compile_id='28' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='27' count='8832' iicount='8832' stamp='0.474' comment='tiered' hot_count='8832'/>
<writer thread='14520'/>
Decoding compiled method 0x0000000002a74a50:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000016a34db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8:r8     = &apos;java/lang/String&apos;
  # parm1:    r9        = int
  #           [sp+0x40]  (sp of caller)
  0x0000000002a74bc0: mov    0x8(%rdx),%r10d
  0x0000000002a74bc4: shl    $0x3,%r10
  0x0000000002a74bc8: cmp    %rax,%r10
  0x0000000002a74bcb: jne    0x00000000029a5f60  ;   {runtime_call}
  0x0000000002a74bd1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002a74bdc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002a74be0: mov    %eax,-0x6000(%rsp)
  0x0000000002a74be7: push   %rbp
  0x0000000002a74be8: sub    $0x30,%rsp
  0x0000000002a74bec: movabs $0x16cbd608,%rax   ;   {metadata(method data for {method} {0x0000000016a34db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a74bf6: mov    0xdc(%rax),%esi
  0x0000000002a74bfc: add    $0x8,%esi
  0x0000000002a74bff: mov    %esi,0xdc(%rax)
  0x0000000002a74c05: movabs $0x16a34db0,%rax   ;   {metadata({method} {0x0000000016a34db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a74c0f: and    $0x1ff8,%esi
  0x0000000002a74c15: cmp    $0x0,%esi
  0x0000000002a74c18: je     0x0000000002a74dcd  ;*aload_0
                                                ; - java.lang.String::startsWith@0 (line 1403)

  0x0000000002a74c1e: mov    0xc(%rdx),%eax     ;*getfield value
                                                ; - java.lang.String::startsWith@1 (line 1403)

  0x0000000002a74c21: mov    0xc(%r8),%esi      ;*getfield value
                                                ; - java.lang.String::startsWith@9 (line 1405)
                                                ; implicit exception: dispatches to 0x0000000002a74de4
  0x0000000002a74c25: mov    0xc(%rsi),%edi     ;*arraylength
                                                ; - java.lang.String::startsWith@21 (line 1407)
                                                ; implicit exception: dispatches to 0x0000000002a74de9
  0x0000000002a74c28: cmp    $0x0,%r9d
  0x0000000002a74c2c: movabs $0x16cbd608,%rbx   ;   {metadata(method data for {method} {0x0000000016a34db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a74c36: movabs $0x108,%rdx
  0x0000000002a74c40: jl     0x0000000002a74c50
  0x0000000002a74c46: movabs $0x118,%rdx
  0x0000000002a74c50: mov    (%rbx,%rdx,1),%rcx
  0x0000000002a74c54: lea    0x1(%rcx),%rcx
  0x0000000002a74c58: mov    %rcx,(%rbx,%rdx,1)
  0x0000000002a74c5c: jl     0x0000000002a74d9a  ;*iflt
                                                ; - java.lang.String::startsWith@25 (line 1409)

  0x0000000002a74c62: mov    0xc(%rax),%ebx     ;*arraylength
                                                ; - java.lang.String::startsWith@33 (line 1409)
                                                ; implicit exception: dispatches to 0x0000000002a74dee
  0x0000000002a74c65: sub    %edi,%ebx
  0x0000000002a74c67: cmp    %ebx,%r9d
  0x0000000002a74c6a: movabs $0x16cbd608,%rbx   ;   {metadata(method data for {method} {0x0000000016a34db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a74c74: movabs $0x128,%rdx
  0x0000000002a74c7e: jle    0x0000000002a74c8e
  0x0000000002a74c84: movabs $0x138,%rdx
  0x0000000002a74c8e: mov    (%rbx,%rdx,1),%rcx
  0x0000000002a74c92: lea    0x1(%rcx),%rcx
  0x0000000002a74c96: mov    %rcx,(%rbx,%rdx,1)
  0x0000000002a74c9a: jg     0x0000000002a74d9a  ;*if_icmple
                                                ; - java.lang.String::startsWith@37 (line 1409)

  0x0000000002a74ca0: mov    $0x0,%ebx
  0x0000000002a74ca5: jmpq   0x0000000002a74d5a  ;*iinc
                                                ; - java.lang.String::startsWith@42 (line 1412)

  0x0000000002a74caa: nopw   0x0(%rax,%rax,1)
  0x0000000002a74cb0: mov    %r9,%rdx
  0x0000000002a74cb3: inc    %edx
  0x0000000002a74cb5: movslq %r9d,%rcx
  0x0000000002a74cb8: cmp    0xc(%rax),%r9d
  0x0000000002a74cbc: jae    0x0000000002a74df3
  0x0000000002a74cc2: movzwl 0x10(%rax,%rcx,2),%ecx  ;*caload
                                                ; - java.lang.String::startsWith@56 (line 1413)

  0x0000000002a74cc7: mov    %rbx,%r8
  0x0000000002a74cca: inc    %r8d
  0x0000000002a74ccd: movslq %ebx,%r9
  0x0000000002a74cd0: cmp    0xc(%rsi),%ebx
  0x0000000002a74cd3: jae    0x0000000002a74dfc
  0x0000000002a74cd9: movzwl 0x10(%rsi,%r9,2),%ebx  ;*caload
                                                ; - java.lang.String::startsWith@64 (line 1413)

  0x0000000002a74cdf: movabs $0x16cbd608,%r9    ;   {metadata(method data for {method} {0x0000000016a34db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a74ce9: mov    0xe0(%r9),%r11d
  0x0000000002a74cf0: add    $0x8,%r11d
  0x0000000002a74cf4: mov    %r11d,0xe0(%r9)
  0x0000000002a74cfb: movabs $0x16a34db0,%r9    ;   {metadata({method} {0x0000000016a34db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a74d05: and    $0xfff8,%r11d
  0x0000000002a74d0c: cmp    $0x0,%r11d
  0x0000000002a74d10: je     0x0000000002a74e05  ; OopMap{rsi=Oop rax=Oop off=342}
                                                ;*if_icmpeq
                                                ; - java.lang.String::startsWith@65 (line 1413)

  0x0000000002a74d16: test   %eax,-0x2884c1c(%rip)        # 0x00000000001f0100
                                                ;   {poll}
  0x0000000002a74d1c: cmp    %ebx,%ecx
  0x0000000002a74d1e: movabs $0x16cbd608,%rbx   ;   {metadata(method data for {method} {0x0000000016a34db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a74d28: movabs $0x168,%rcx
  0x0000000002a74d32: je     0x0000000002a74d42
  0x0000000002a74d38: movabs $0x178,%rcx
  0x0000000002a74d42: mov    (%rbx,%rcx,1),%r9
  0x0000000002a74d46: lea    0x1(%r9),%r9
  0x0000000002a74d4a: mov    %r9,(%rbx,%rcx,1)
  0x0000000002a74d4e: jne    0x0000000002a74dab  ;*if_icmpeq
                                                ; - java.lang.String::startsWith@65 (line 1413)

  0x0000000002a74d54: mov    %r8,%rbx
  0x0000000002a74d57: mov    %rdx,%r9           ;*iinc
                                                ; - java.lang.String::startsWith@42 (line 1412)

  0x0000000002a74d5a: dec    %edi
  0x0000000002a74d5c: cmp    $0x0,%edi
  0x0000000002a74d5f: movabs $0x16cbd608,%rdx   ;   {metadata(method data for {method} {0x0000000016a34db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a74d69: movabs $0x148,%rcx
  0x0000000002a74d73: jl     0x0000000002a74d83
  0x0000000002a74d79: movabs $0x158,%rcx
  0x0000000002a74d83: mov    (%rdx,%rcx,1),%r8
  0x0000000002a74d87: lea    0x1(%r8),%r8
  0x0000000002a74d8b: mov    %r8,(%rdx,%rcx,1)
  0x0000000002a74d8f: jl     0x0000000002a74dbc
  0x0000000002a74d95: jmpq   0x0000000002a74cb0  ;*iflt
                                                ; - java.lang.String::startsWith@47 (line 1412)

  0x0000000002a74d9a: mov    $0x0,%eax
  0x0000000002a74d9f: add    $0x30,%rsp
  0x0000000002a74da3: pop    %rbp
  0x0000000002a74da4: test   %eax,-0x2884caa(%rip)        # 0x00000000001f0100
                                                ;   {poll_return}
  0x0000000002a74daa: retq                      ;*ireturn
                                                ; - java.lang.String::startsWith@41 (line 1410)

  0x0000000002a74dab: mov    $0x0,%eax
  0x0000000002a74db0: add    $0x30,%rsp
  0x0000000002a74db4: pop    %rbp
  0x0000000002a74db5: test   %eax,-0x2884cbb(%rip)        # 0x00000000001f0100
                                                ;   {poll_return}
  0x0000000002a74dbb: retq                      ;*ireturn
                                                ; - java.lang.String::startsWith@69 (line 1414)

  0x0000000002a74dbc: mov    $0x1,%eax
  0x0000000002a74dc1: add    $0x30,%rsp
  0x0000000002a74dc5: pop    %rbp
  0x0000000002a74dc6: test   %eax,-0x2884ccc(%rip)        # 0x00000000001f0100
                                                ;   {poll_return}
  0x0000000002a74dcc: retq   
  0x0000000002a74dcd: mov    %rax,0x8(%rsp)
  0x0000000002a74dd2: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002a74dda: callq  0x0000000002a5f7a0  ; OopMap{rdx=Oop r8=Oop off=543}
                                                ;*synchronization entry
                                                ; - java.lang.String::startsWith@-1 (line 1403)
                                                ;   {runtime_call}
  0x0000000002a74ddf: jmpq   0x0000000002a74c1e
  0x0000000002a74de4: callq  0x00000000029d1b80  ; OopMap{rax=Oop off=553}
                                                ;*getfield value
                                                ; - java.lang.String::startsWith@9 (line 1405)
                                                ;   {runtime_call}
  0x0000000002a74de9: callq  0x00000000029d1b80  ; OopMap{rax=Oop rsi=Oop off=558}
                                                ;*arraylength
                                                ; - java.lang.String::startsWith@21 (line 1407)
                                                ;   {runtime_call}
  0x0000000002a74dee: callq  0x00000000029d1b80  ; OopMap{rsi=Oop rax=Oop off=563}
                                                ;*arraylength
                                                ; - java.lang.String::startsWith@33 (line 1409)
                                                ;   {runtime_call}
  0x0000000002a74df3: mov    %r9,(%rsp)
  0x0000000002a74df7: callq  0x00000000029cec40  ; OopMap{rsi=Oop rax=Oop off=572}
                                                ;*caload
                                                ; - java.lang.String::startsWith@56 (line 1413)
                                                ;   {runtime_call}
  0x0000000002a74dfc: mov    %rbx,(%rsp)
  0x0000000002a74e00: callq  0x00000000029cec40  ; OopMap{rsi=Oop rax=Oop off=581}
                                                ;*caload
                                                ; - java.lang.String::startsWith@64 (line 1413)
                                                ;   {runtime_call}
  0x0000000002a74e05: mov    %r9,0x8(%rsp)
  0x0000000002a74e0a: movq   $0x41,(%rsp)
  0x0000000002a74e12: callq  0x0000000002a5f7a0  ; OopMap{rsi=Oop rax=Oop off=599}
                                                ;*if_icmpeq
                                                ; - java.lang.String::startsWith@65 (line 1413)
                                                ;   {runtime_call}
  0x0000000002a74e17: jmpq   0x0000000002a74d16
  0x0000000002a74e1c: nop
  0x0000000002a74e1d: nop
  0x0000000002a74e1e: mov    0x2a8(%r15),%rax
  0x0000000002a74e25: movabs $0x0,%r10
  0x0000000002a74e2f: mov    %r10,0x2a8(%r15)
  0x0000000002a74e36: movabs $0x0,%r10
  0x0000000002a74e40: mov    %r10,0x2b0(%r15)
  0x0000000002a74e47: add    $0x30,%rsp
  0x0000000002a74e4b: pop    %rbp
  0x0000000002a74e4c: jmpq   0x00000000029cf0e0  ;   {runtime_call}
  0x0000000002a74e51: hlt    
  0x0000000002a74e52: hlt    
  0x0000000002a74e53: hlt    
  0x0000000002a74e54: hlt    
  0x0000000002a74e55: hlt    
  0x0000000002a74e56: hlt    
  0x0000000002a74e57: hlt    
  0x0000000002a74e58: hlt    
  0x0000000002a74e59: hlt    
  0x0000000002a74e5a: hlt    
  0x0000000002a74e5b: hlt    
  0x0000000002a74e5c: hlt    
  0x0000000002a74e5d: hlt    
  0x0000000002a74e5e: hlt    
  0x0000000002a74e5f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002a74e60: callq  0x00000000029cfc60  ;   {no_reloc}
  0x0000000002a74e65: mov    %rsp,-0x28(%rsp)
  0x0000000002a74e6a: sub    $0x80,%rsp
  0x0000000002a74e71: mov    %rax,0x78(%rsp)
  0x0000000002a74e76: mov    %rcx,0x70(%rsp)
  0x0000000002a74e7b: mov    %rdx,0x68(%rsp)
  0x0000000002a74e80: mov    %rbx,0x60(%rsp)
  0x0000000002a74e85: mov    %rbp,0x50(%rsp)
  0x0000000002a74e8a: mov    %rsi,0x48(%rsp)
  0x0000000002a74e8f: mov    %rdi,0x40(%rsp)
  0x0000000002a74e94: mov    %r8,0x38(%rsp)
  0x0000000002a74e99: mov    %r9,0x30(%rsp)
  0x0000000002a74e9e: mov    %r10,0x28(%rsp)
  0x0000000002a74ea3: mov    %r11,0x20(%rsp)
  0x0000000002a74ea8: mov    %r12,0x18(%rsp)
  0x0000000002a74ead: mov    %r13,0x10(%rsp)
  0x0000000002a74eb2: mov    %r14,0x8(%rsp)
  0x0000000002a74eb7: mov    %r15,(%rsp)
  0x0000000002a74ebb: movabs $0x623d8e30,%rcx   ;   {external_word}
  0x0000000002a74ec5: movabs $0x2a74e65,%rdx    ;   {internal_word}
  0x0000000002a74ecf: mov    %rsp,%r8
  0x0000000002a74ed2: and    $0xfffffffffffffff0,%rsp
  0x0000000002a74ed6: callq  0x0000000062093d40  ;   {runtime_call}
  0x0000000002a74edb: hlt    
[Deopt Handler Code]
  0x0000000002a74edc: movabs $0x2a74edc,%r10    ;   {section_word}
  0x0000000002a74ee6: push   %r10
  0x0000000002a74ee8: jmpq   0x00000000029a7600  ;   {runtime_call}
  0x0000000002a74eed: hlt    
  0x0000000002a74eee: hlt    
  0x0000000002a74eef: hlt    
<nmethod compile_id='24' compiler='C1' level='3' entry='0x0000000002a74bc0' size='1824' address='0x0000000002a74a50' relocation_offset='288' insts_offset='368' stub_offset='1040' scopes_data_offset='1192' scopes_pcs_offset='1384' dependencies_offset='1784' nul_chk_table_offset='1792' method='java/lang/String startsWith (Ljava/lang/String;I)Z' bytes='72' count='761' backedge_count='1219' iicount='761' stamp='0.483'/>
<writer thread='1572'/>
Decoding compiled method 0x0000000002a732d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000016bab520} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;
  # this:     rdx:rdx   = &apos;java/io/WinNTFileSystem&apos;
  # parm0:    r8        = char
  #           [sp+0x20]  (sp of caller)
  0x0000000002a73400: mov    0x8(%rdx),%r10d
  0x0000000002a73404: shl    $0x3,%r10
  0x0000000002a73408: cmp    %r10,%rax
  0x0000000002a7340b: jne    0x00000000029a5f60  ;   {runtime_call}
  0x0000000002a73411: data16 xchg %ax,%ax
  0x0000000002a73414: nopl   0x0(%rax,%rax,1)
  0x0000000002a7341c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002a73420: sub    $0x18,%rsp
  0x0000000002a73427: mov    %rbp,0x10(%rsp)    ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::isSlash@-1 (line 53)

  0x0000000002a7342c: cmp    $0x5c,%r8d
  0x0000000002a73430: je     0x0000000002a73446  ;*if_icmpeq
                                                ; - java.io.WinNTFileSystem::isSlash@3 (line 53)

  0x0000000002a73432: cmp    $0x2f,%r8d
  0x0000000002a73436: je     0x0000000002a73446  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::isSlash@9 (line 53)

  0x0000000002a73438: xor    %eax,%eax          ;*goto
                                                ; - java.io.WinNTFileSystem::isSlash@13 (line 53)

  0x0000000002a7343a: add    $0x10,%rsp
  0x0000000002a7343e: pop    %rbp
  0x0000000002a7343f: test   %eax,-0x2883445(%rip)        # 0x00000000001f0000
                                                ;   {poll_return}
  0x0000000002a73445: retq                      ;*iconst_1
                                                ; - java.io.WinNTFileSystem::isSlash@12 (line 53)

  0x0000000002a73446: mov    $0x1,%eax
  0x0000000002a7344b: jmp    0x0000000002a7343a
  0x0000000002a7344d: hlt    
  0x0000000002a7344e: hlt    
  0x0000000002a7344f: hlt    
  0x0000000002a73450: hlt    
  0x0000000002a73451: hlt    
  0x0000000002a73452: hlt    
  0x0000000002a73453: hlt    
  0x0000000002a73454: hlt    
  0x0000000002a73455: hlt    
  0x0000000002a73456: hlt    
  0x0000000002a73457: hlt    
  0x0000000002a73458: hlt    
  0x0000000002a73459: hlt    
  0x0000000002a7345a: hlt    
  0x0000000002a7345b: hlt    
  0x0000000002a7345c: hlt    
  0x0000000002a7345d: hlt    
  0x0000000002a7345e: hlt    
  0x0000000002a7345f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002a73460: jmpq   0x00000000029cf4a0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000002a73465: callq  0x0000000002a7346a
  0x0000000002a7346a: subq   $0x5,(%rsp)
  0x0000000002a7346f: jmpq   0x00000000029a7600  ;   {runtime_call}
  0x0000000002a73474: hlt    
  0x0000000002a73475: hlt    
  0x0000000002a73476: hlt    
  0x0000000002a73477: hlt    
<nmethod compile_id='27' compiler='C2' level='4' entry='0x0000000002a73400' size='584' address='0x0000000002a732d0' relocation_offset='288' insts_offset='304' stub_offset='400' scopes_data_offset='432' scopes_pcs_offset='464' dependencies_offset='576' method='java/io/WinNTFileSystem isSlash (C)Z' bytes='18' count='5804' iicount='5804' stamp='0.486'/>
<writer thread='1672'/>
<task_queued compile_id='29' method='java/lang/StringBuffer append (C)Ljava/lang/StringBuffer;' bytes='13' count='5248' iicount='5248' level='3' stamp='0.486' comment='tiered' hot_count='5248'/>
<writer thread='14520'/>
Decoding compiled method 0x0000000002a73d90:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000016a9ff58} &apos;append&apos; &apos;(C)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;
  # this:     rdx:rdx   = &apos;java/lang/StringBuffer&apos;
  # parm0:    r8        = char
  #           [sp+0x110]  (sp of caller)
  0x0000000002a73f40: mov    0x8(%rdx),%r10d
  0x0000000002a73f44: shl    $0x3,%r10
  0x0000000002a73f48: cmp    %rax,%r10
  0x0000000002a73f4b: jne    0x00000000029a5f60  ;   {runtime_call}
  0x0000000002a73f51: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002a73f5c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002a73f60: mov    %eax,-0x6000(%rsp)
  0x0000000002a73f67: push   %rbp
  0x0000000002a73f68: sub    $0x100,%rsp
  0x0000000002a73f6f: lea    0xe0(%rsp),%rsi
  0x0000000002a73f77: mov    %rdx,0x8(%rsi)
  0x0000000002a73f7b: mov    (%rdx),%rax
  0x0000000002a73f7e: mov    %rax,%rdi
  0x0000000002a73f81: and    $0x7,%rdi
  0x0000000002a73f85: cmp    $0x5,%rdi
  0x0000000002a73f89: jne    0x0000000002a74010
  0x0000000002a73f8f: mov    0x8(%rdx),%edi
  0x0000000002a73f92: shl    $0x3,%rdi
  0x0000000002a73f96: mov    0xa8(%rdi),%rdi
  0x0000000002a73f9d: or     %r15,%rdi
  0x0000000002a73fa0: xor    %rax,%rdi
  0x0000000002a73fa3: and    $0xffffffffffffff87,%rdi
  0x0000000002a73fa7: je     0x0000000002a74038
  0x0000000002a73fad: test   $0x7,%rdi
  0x0000000002a73fb4: jne    0x0000000002a73ffd
  0x0000000002a73fb6: test   $0x300,%rdi
  0x0000000002a73fbd: jne    0x0000000002a73fdc
  0x0000000002a73fbf: and    $0x37f,%rax
  0x0000000002a73fc6: mov    %rax,%rdi
  0x0000000002a73fc9: or     %r15,%rdi
  0x0000000002a73fcc: lock cmpxchg %rdi,(%rdx)
  0x0000000002a73fd1: jne    0x0000000002a74445
  0x0000000002a73fd7: jmpq   0x0000000002a74038
  0x0000000002a73fdc: mov    0x8(%rdx),%edi
  0x0000000002a73fdf: shl    $0x3,%rdi
  0x0000000002a73fe3: mov    0xa8(%rdi),%rdi
  0x0000000002a73fea: or     %r15,%rdi
  0x0000000002a73fed: lock cmpxchg %rdi,(%rdx)
  0x0000000002a73ff2: jne    0x0000000002a74445
  0x0000000002a73ff8: jmpq   0x0000000002a74038
  0x0000000002a73ffd: mov    0x8(%rdx),%edi
  0x0000000002a74000: shl    $0x3,%rdi
  0x0000000002a74004: mov    0xa8(%rdi),%rdi
  0x0000000002a7400b: lock cmpxchg %rdi,(%rdx)
  0x0000000002a74010: mov    (%rdx),%rax
  0x0000000002a74013: or     $0x1,%rax
  0x0000000002a74017: mov    %rax,(%rsi)
  0x0000000002a7401a: lock cmpxchg %rsi,(%rdx)
  0x0000000002a7401f: je     0x0000000002a74038
  0x0000000002a74025: sub    %rsp,%rax
  0x0000000002a74028: and    $0xfffffffffffff007,%rax
  0x0000000002a7402f: mov    %rax,(%rsi)
  0x0000000002a74032: jne    0x0000000002a74445
  0x0000000002a74038: movabs $0x16c31a38,%rsi   ;   {metadata(method data for {method} {0x0000000016a9ff58} &apos;append&apos; &apos;(C)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x0000000002a74042: mov    0xdc(%rsi),%edi
  0x0000000002a74048: add    $0x8,%edi
  0x0000000002a7404b: mov    %edi,0xdc(%rsi)
  0x0000000002a74051: movabs $0x16a9ff50,%rsi   ;   {metadata({method} {0x0000000016a9ff58} &apos;append&apos; &apos;(C)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x0000000002a7405b: and    $0x1ff8,%edi
  0x0000000002a74061: cmp    $0x0,%edi
  0x0000000002a74064: je     0x0000000002a74458  ;*aload_0
                                                ; - java.lang.StringBuffer::append@0 (line 380)

  0x0000000002a7406a: movl   $0x0,0x14(%rdx)
  0x0000000002a74071: mov    %rdx,%rsi
  0x0000000002a74074: shr    $0x9,%rsi
  0x0000000002a74078: movabs $0x11909000,%rdi
  0x0000000002a74082: movb   $0x0,(%rsi,%rdi,1)  ;*putfield toStringCache
                                                ; - java.lang.StringBuffer::append@2 (line 380)

  0x0000000002a74086: mov    %rdx,%rsi
  0x0000000002a74089: movabs $0x16c31a38,%rdi   ;   {metadata(method data for {method} {0x0000000016a9ff58} &apos;append&apos; &apos;(C)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x0000000002a74093: addq   $0x1,0x108(%rdi)
  0x0000000002a7409b: movabs $0x16c31648,%rsi   ;   {metadata(method data for {method} {0x0000000016aa4d38} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002a740a5: mov    0xdc(%rsi),%edi
  0x0000000002a740ab: add    $0x8,%edi
  0x0000000002a740ae: mov    %edi,0xdc(%rsi)
  0x0000000002a740b4: movabs $0x16aa4d30,%rsi   ;   {metadata({method} {0x0000000016aa4d38} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002a740be: and    $0x7ffff8,%edi
  0x0000000002a740c4: cmp    $0x0,%edi
  0x0000000002a740c7: je     0x0000000002a7446f
  0x0000000002a740cd: mov    0xc(%rdx),%esi     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@2 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002a740d0: inc    %esi
  0x0000000002a740d2: mov    %rdx,%rdi
  0x0000000002a740d5: movabs $0x16c31648,%rbx   ;   {metadata(method data for {method} {0x0000000016aa4d38} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002a740df: addq   $0x1,0x108(%rbx)
  0x0000000002a740e7: movabs $0x16c314b8,%rdi   ;   {metadata(method data for {method} {0x0000000016aa3c00} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002a740f1: mov    0xdc(%rdi),%ebx
  0x0000000002a740f7: add    $0x8,%ebx
  0x0000000002a740fa: mov    %ebx,0xdc(%rdi)
  0x0000000002a74100: movabs $0x16aa3bf8,%rdi   ;   {metadata({method} {0x0000000016aa3c00} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002a7410a: and    $0x7ffff8,%ebx
  0x0000000002a74110: cmp    $0x0,%ebx
  0x0000000002a74113: je     0x0000000002a74486
  0x0000000002a74119: mov    0x10(%rdx),%edi    ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002a7411c: mov    0xc(%rdi),%ebx     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; implicit exception: dispatches to 0x0000000002a7449d
  0x0000000002a7411f: mov    %rsi,%rax
  0x0000000002a74122: sub    %ebx,%eax
  0x0000000002a74124: cmp    $0x0,%eax
  0x0000000002a74127: movabs $0x16c314b8,%rax   ;   {metadata(method data for {method} {0x0000000016aa3c00} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002a74131: movabs $0x108,%rcx
  0x0000000002a7413b: jle    0x0000000002a7414b
  0x0000000002a74141: movabs $0x118,%rcx
  0x0000000002a7414b: mov    (%rax,%rcx,1),%r9
  0x0000000002a7414f: lea    0x1(%r9),%r9
  0x0000000002a74153: mov    %r9,(%rax,%rcx,1)
  0x0000000002a74157: jg     0x0000000002a7416a  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002a7415d: mov    %r8d,0xc4(%rsp)
  0x0000000002a74165: jmpq   0x0000000002a743d7  ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002a7416a: mov    %ebx,0xc0(%rsp)
  0x0000000002a74171: mov    %rdi,0xc8(%rsp)
  0x0000000002a74179: mov    %r8d,0xc4(%rsp)
  0x0000000002a74181: mov    %rdx,%rax
  0x0000000002a74184: movabs $0x16c314b8,%rcx   ;   {metadata(method data for {method} {0x0000000016aa3c00} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002a7418e: addq   $0x1,0x128(%rcx)
  0x0000000002a74196: mov    %rsi,%r8
  0x0000000002a74199: mov    %rdx,%rsi
  0x0000000002a7419c: mov    %rsi,%rdx          ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002a7419f: mov    %rsi,0xd0(%rsp)
  0x0000000002a741a7: callq  0x00000000029a61a0  ; OopMap{[208]=Oop [200]=Oop [232]=Oop off=620}
                                                ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {optimized virtual_call}
  0x0000000002a741ac: mov    %rax,%r8           ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002a741af: movabs $0x16c314b8,%rbx   ;   {metadata(method data for {method} {0x0000000016aa3c00} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002a741b9: addq   $0x1,0x138(%rbx)
  0x0000000002a741c1: movabs $0x16d20b08,%rbx   ;   {metadata(method data for {method} {0x0000000016b48800} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002a741cb: mov    0xdc(%rbx),%edx
  0x0000000002a741d1: add    $0x8,%edx
  0x0000000002a741d4: mov    %edx,0xdc(%rbx)
  0x0000000002a741da: movabs $0x16b487f8,%rbx   ;   {metadata({method} {0x0000000016b48800} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002a741e4: and    $0x7ffff8,%edx
  0x0000000002a741ea: cmp    $0x0,%edx
  0x0000000002a741ed: je     0x0000000002a744a2
  0x0000000002a741f3: mov    %r8,%rbx
  0x0000000002a741f6: movabs $0x100000208,%rdx  ;   {metadata({type array char})}
  0x0000000002a74200: movslq %ebx,%rbx
  0x0000000002a74203: mov    %rbx,%rdi
  0x0000000002a74206: cmp    $0xffffff,%rbx
  0x0000000002a7420d: ja     0x0000000002a744b9
  0x0000000002a74213: movabs $0x17,%rsi
  0x0000000002a7421d: lea    (%rsi,%rbx,2),%rsi
  0x0000000002a74221: and    $0xfffffffffffffff8,%rsi
  0x0000000002a74225: mov    0x60(%r15),%rax
  0x0000000002a74229: lea    (%rax,%rsi,1),%rsi
  0x0000000002a7422d: cmp    0x70(%r15),%rsi
  0x0000000002a74231: ja     0x0000000002a744b9
  0x0000000002a74237: mov    %rsi,0x60(%r15)
  0x0000000002a7423b: sub    %rax,%rsi
  0x0000000002a7423e: movq   $0x1,(%rax)
  0x0000000002a74245: mov    %rdx,%rcx
  0x0000000002a74248: shr    $0x3,%rcx
  0x0000000002a7424c: mov    %ecx,0x8(%rax)
  0x0000000002a7424f: mov    %ebx,0xc(%rax)
  0x0000000002a74252: sub    $0x10,%rsi
  0x0000000002a74256: je     0x0000000002a7426d
  0x0000000002a7425c: xor    %rbx,%rbx
  0x0000000002a7425f: shr    $0x3,%rsi
  0x0000000002a74263: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000002a74268: dec    %rsi
  0x0000000002a7426b: jne    0x0000000002a74263  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002a7426d: movabs $0x16d20b08,%rdx   ;   {metadata(method data for {method} {0x0000000016b48800} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002a74277: addq   $0x1,0x108(%rdx)
  0x0000000002a7427f: movabs $0x16c1e150,%rdx   ;   {metadata(method data for {method} {0x0000000016b242a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002a74289: mov    0xdc(%rdx),%r9d
  0x0000000002a74290: add    $0x8,%r9d
  0x0000000002a74294: mov    %r9d,0xdc(%rdx)
  0x0000000002a7429b: movabs $0x16b242a0,%rdx   ;   {metadata({method} {0x0000000016b242a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002a742a5: and    $0x7ffff8,%r9d
  0x0000000002a742ac: cmp    $0x0,%r9d
  0x0000000002a742b0: je     0x0000000002a744c3
  0x0000000002a742b6: mov    0xc0(%rsp),%ebx
  0x0000000002a742bd: cmp    %r8d,%ebx
  0x0000000002a742c0: movabs $0x16c1e150,%rdx   ;   {metadata(method data for {method} {0x0000000016b242a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002a742ca: movabs $0x108,%r9
  0x0000000002a742d4: jg     0x0000000002a742e4
  0x0000000002a742da: movabs $0x118,%r9
  0x0000000002a742e4: mov    (%rdx,%r9,1),%rdi
  0x0000000002a742e8: lea    0x1(%rdi),%rdi
  0x0000000002a742ec: mov    %rdi,(%rdx,%r9,1)
  0x0000000002a742f0: jg     0x0000000002a7430b  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002a742f6: movabs $0x16c1e150,%rdx   ;   {metadata(method data for {method} {0x0000000016b242a8} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002a74300: incl   0x128(%rdx)
  0x0000000002a74306: jmpq   0x0000000002a7430e  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002a7430b: mov    %r8,%rbx           ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002a7430e: mov    0xc8(%rsp),%rdi
  0x0000000002a74316: movabs $0x16d20b08,%rdx   ;   {metadata(method data for {method} {0x0000000016b48800} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002a74320: addq   $0x1,0x118(%rdx)
  0x0000000002a74328: mov    %rdi,%rdx
  0x0000000002a7432b: mov    $0x0,%r8d
  0x0000000002a74331: mov    %rax,%r9
  0x0000000002a74334: mov    $0x0,%edi
  0x0000000002a74339: mov    %rbx,%rsi
  0x0000000002a7433c: mov    %rax,0xd8(%rsp)
  0x0000000002a74344: lea    (%r8,%rsi,1),%rcx
  0x0000000002a74348: cmp    0xc(%rdx),%ecx
  0x0000000002a7434b: ja     0x0000000002a744da
  0x0000000002a74351: lea    (%rdi,%rsi,1),%rcx
  0x0000000002a74355: cmp    0xc(%r9),%ecx
  0x0000000002a74359: ja     0x0000000002a744da
  0x0000000002a7435f: test   %esi,%esi
  0x0000000002a74361: jl     0x0000000002a744da
  0x0000000002a74367: je     0x0000000002a743ab
  0x0000000002a7436d: movslq %r8d,%r8
  0x0000000002a74370: movslq %edi,%rdi
  0x0000000002a74373: lea    0x10(%rdx,%r8,2),%rcx
  0x0000000002a74378: lea    0x10(%r9,%rdi,2),%rdx
  0x0000000002a7437d: mov    %rsi,%r8
  0x0000000002a74380: sub    $0x20,%rsp
  0x0000000002a74384: test   $0xf,%esp
  0x0000000002a7438a: je     0x0000000002a743a2
  0x0000000002a74390: sub    $0x8,%rsp
  0x0000000002a74394: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000000002a74399: add    $0x8,%rsp
  0x0000000002a7439d: jmpq   0x0000000002a743a7
  0x0000000002a743a2: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000000002a743a7: add    $0x20,%rsp         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002a743ab: mov    0xd8(%rsp),%rax
  0x0000000002a743b3: mov    0xd0(%rsp),%rdx
  0x0000000002a743bb: mov    %rax,%r10
  0x0000000002a743be: mov    %r10d,0x10(%rdx)
  0x0000000002a743c2: mov    %rdx,%rax
  0x0000000002a743c5: shr    $0x9,%rax
  0x0000000002a743c9: movabs $0x11909000,%rsi
  0x0000000002a743d3: movb   $0x0,(%rax,%rsi,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002a743d7: mov    0xc4(%rsp),%r8d
  0x0000000002a743df: mov    0x10(%rdx),%eax    ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@11 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002a743e2: mov    0xc(%rdx),%esi     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002a743e5: mov    %rsi,%rdi
  0x0000000002a743e8: inc    %edi
  0x0000000002a743ea: mov    %edi,0xc(%rdx)     ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@22 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002a743ed: movslq %esi,%rdi
  0x0000000002a743f0: cmp    0xc(%rax),%esi     ; implicit exception: dispatches to 0x0000000002a744e9
  0x0000000002a743f3: jae    0x0000000002a744f3
  0x0000000002a743f9: mov    %r8w,0x10(%rax,%rdi,2)  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002a743ff: lea    0xe0(%rsp),%rax
  0x0000000002a74407: mov    0x8(%rax),%rdi
  0x0000000002a7440b: mov    (%rdi),%rsi
  0x0000000002a7440e: and    $0x7,%rsi
  0x0000000002a74412: cmp    $0x5,%rsi
  0x0000000002a74416: je     0x0000000002a74433
  0x0000000002a7441c: mov    (%rax),%rsi
  0x0000000002a7441f: test   %rsi,%rsi
  0x0000000002a74422: je     0x0000000002a74433
  0x0000000002a74428: lock cmpxchg %rsi,(%rdi)
  0x0000000002a7442d: jne    0x0000000002a744fc  ;*areturn
                                                ; - java.lang.StringBuffer::append@12 (line 382)

  0x0000000002a74433: mov    %rdx,%rax
  0x0000000002a74436: add    $0x100,%rsp
  0x0000000002a7443d: pop    %rbp
  0x0000000002a7443e: test   %eax,-0x2884344(%rip)        # 0x00000000001f0100
                                                ;   {poll_return}
  0x0000000002a74444: retq   
  0x0000000002a74445: mov    %rdx,0x8(%rsp)
  0x0000000002a7444a: mov    %rsi,(%rsp)
  0x0000000002a7444e: callq  0x0000000002a615a0  ; OopMap{rdx=Oop [232]=Oop off=1299}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)
                                                ;   {runtime_call}
  0x0000000002a74453: jmpq   0x0000000002a74038
  0x0000000002a74458: mov    %rsi,0x8(%rsp)
  0x0000000002a7445d: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002a74465: callq  0x0000000002a5f7a0  ; OopMap{rdx=Oop [232]=Oop off=1322}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)
                                                ;   {runtime_call}
  0x0000000002a7446a: jmpq   0x0000000002a7406a
  0x0000000002a7446f: mov    %rsi,0x8(%rsp)
  0x0000000002a74474: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002a7447c: callq  0x0000000002a5f7a0  ; OopMap{rdx=Oop [232]=Oop off=1345}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x0000000002a74481: jmpq   0x0000000002a740cd
  0x0000000002a74486: mov    %rdi,0x8(%rsp)
  0x0000000002a7448b: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002a74493: callq  0x0000000002a5f7a0  ; OopMap{rdx=Oop [232]=Oop off=1368}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x0000000002a74498: jmpq   0x0000000002a74119
  0x0000000002a7449d: callq  0x00000000029d1b80  ; OopMap{rdx=Oop rdi=Oop [232]=Oop off=1378}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x0000000002a744a2: mov    %rbx,0x8(%rsp)
  0x0000000002a744a7: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002a744af: callq  0x0000000002a5f7a0  ; OopMap{[208]=Oop [200]=Oop [232]=Oop off=1396}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x0000000002a744b4: jmpq   0x0000000002a741f3
  0x0000000002a744b9: callq  0x00000000029d0900  ; OopMap{[208]=Oop [200]=Oop [232]=Oop off=1406}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x0000000002a744be: jmpq   0x0000000002a7426d
  0x0000000002a744c3: mov    %rdx,0x8(%rsp)
  0x0000000002a744c8: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002a744d0: callq  0x0000000002a5f7a0  ; OopMap{[208]=Oop [200]=Oop rax=Oop [232]=Oop off=1429}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x0000000002a744d5: jmpq   0x0000000002a742b6
  0x0000000002a744da: nop
  0x0000000002a744db: nop
  0x0000000002a744dc: nop
  0x0000000002a744dd: nop
  0x0000000002a744de: nop
  0x0000000002a744df: callq  0x00000000029a6620  ; OopMap{[208]=Oop [216]=Oop [232]=Oop off=1444}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {static_call}
  0x0000000002a744e4: jmpq   0x0000000002a743ab
  0x0000000002a744e9: callq  0x00000000029d1b80  ; OopMap{rdx=Oop rax=Oop [232]=Oop off=1454}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x0000000002a744ee: callq  0x00000000029d1b80  ; OopMap{rdx=Oop rax=Oop [232]=Oop off=1459}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x0000000002a744f3: mov    %rsi,(%rsp)
  0x0000000002a744f7: callq  0x00000000029cec40  ; OopMap{rdx=Oop rax=Oop [232]=Oop off=1468}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x0000000002a744fc: lea    0xe0(%rsp),%rax
  0x0000000002a74504: mov    %rax,(%rsp)
  0x0000000002a74508: callq  0x0000000002a611a0  ;   {runtime_call}
  0x0000000002a7450d: jmpq   0x0000000002a74433
  0x0000000002a74512: nop
  0x0000000002a74513: nop
  0x0000000002a74514: mov    0x2a8(%r15),%rax
  0x0000000002a7451b: movabs $0x0,%r10
  0x0000000002a74525: mov    %r10,0x2a8(%r15)
  0x0000000002a7452c: movabs $0x0,%r10
  0x0000000002a74536: mov    %r10,0x2b0(%r15)
  0x0000000002a7453d: mov    %rax,%rbx
  0x0000000002a74540: lea    0xe0(%rsp),%rax
  0x0000000002a74548: mov    0x8(%rax),%rsi
  0x0000000002a7454c: mov    (%rsi),%rdi
  0x0000000002a7454f: and    $0x7,%rdi
  0x0000000002a74553: cmp    $0x5,%rdi
  0x0000000002a74557: je     0x0000000002a74574
  0x0000000002a7455d: mov    (%rax),%rdi
  0x0000000002a74560: test   %rdi,%rdi
  0x0000000002a74563: je     0x0000000002a74574
  0x0000000002a74569: lock cmpxchg %rdi,(%rsi)
  0x0000000002a7456e: jne    0x0000000002a74584
  0x0000000002a74574: mov    %rbx,%rax
  0x0000000002a74577: add    $0x100,%rsp
  0x0000000002a7457e: pop    %rbp
  0x0000000002a7457f: jmpq   0x00000000029cf0e0  ;   {runtime_call}
  0x0000000002a74584: lea    0xe0(%rsp),%rax
  0x0000000002a7458c: mov    %rax,(%rsp)
  0x0000000002a74590: callq  0x0000000002a611a0  ;   {runtime_call}
  0x0000000002a74595: jmp    0x0000000002a74574
  0x0000000002a74597: hlt    
  0x0000000002a74598: hlt    
  0x0000000002a74599: hlt    
  0x0000000002a7459a: hlt    
  0x0000000002a7459b: hlt    
  0x0000000002a7459c: hlt    
  0x0000000002a7459d: hlt    
  0x0000000002a7459e: hlt    
  0x0000000002a7459f: hlt    
[Stub Code]
  0x0000000002a745a0: nop                       ;   {no_reloc}
  0x0000000002a745a1: nop
  0x0000000002a745a2: nop
  0x0000000002a745a3: nop
  0x0000000002a745a4: nop
  0x0000000002a745a5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002a745af: jmpq   0x0000000002a745af  ;   {runtime_call}
  0x0000000002a745b4: nop
  0x0000000002a745b5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002a745bf: jmpq   0x0000000002a745bf  ;   {runtime_call}
[Exception Handler]
  0x0000000002a745c4: callq  0x00000000029cfc60  ;   {runtime_call}
  0x0000000002a745c9: mov    %rsp,-0x28(%rsp)
  0x0000000002a745ce: sub    $0x80,%rsp
  0x0000000002a745d5: mov    %rax,0x78(%rsp)
  0x0000000002a745da: mov    %rcx,0x70(%rsp)
  0x0000000002a745df: mov    %rdx,0x68(%rsp)
  0x0000000002a745e4: mov    %rbx,0x60(%rsp)
  0x0000000002a745e9: mov    %rbp,0x50(%rsp)
  0x0000000002a745ee: mov    %rsi,0x48(%rsp)
  0x0000000002a745f3: mov    %rdi,0x40(%rsp)
  0x0000000002a745f8: mov    %r8,0x38(%rsp)
  0x0000000002a745fd: mov    %r9,0x30(%rsp)
  0x0000000002a74602: mov    %r10,0x28(%rsp)
  0x0000000002a74607: mov    %r11,0x20(%rsp)
  0x0000000002a7460c: mov    %r12,0x18(%rsp)
  0x0000000002a74611: mov    %r13,0x10(%rsp)
  0x0000000002a74616: mov    %r14,0x8(%rsp)
  0x0000000002a7461b: mov    %r15,(%rsp)
  0x0000000002a7461f: movabs $0x623d8e30,%rcx   ;   {external_word}
  0x0000000002a74629: movabs $0x2a745c9,%rdx    ;   {internal_word}
  0x0000000002a74633: mov    %rsp,%r8
  0x0000000002a74636: and    $0xfffffffffffffff0,%rsp
  0x0000000002a7463a: callq  0x0000000062093d40  ;   {runtime_call}
  0x0000000002a7463f: hlt    
[Deopt Handler Code]
  0x0000000002a74640: movabs $0x2a74640,%r10    ;   {section_word}
  0x0000000002a7464a: push   %r10
  0x0000000002a7464c: jmpq   0x00000000029a7600  ;   {runtime_call}
  0x0000000002a74651: hlt    
  0x0000000002a74652: hlt    
  0x0000000002a74653: hlt    
  0x0000000002a74654: hlt    
  0x0000000002a74655: hlt    
  0x0000000002a74656: hlt    
  0x0000000002a74657: hlt    
<nmethod compile_id='29' compiler='C1' level='3' entry='0x0000000002a73f40' size='3240' address='0x0000000002a73d90' relocation_offset='288' insts_offset='432' stub_offset='2064' scopes_data_offset='2288' scopes_pcs_offset='2640' dependencies_offset='3200' nul_chk_table_offset='3208' method='java/lang/StringBuffer append (C)Ljava/lang/StringBuffer;' bytes='13' count='5259' iicount='5259' stamp='0.506'/>
<writer thread='1672'/>
<task_queued compile_id='30' method='java/lang/AbstractStringBuilder append (C)Ljava/lang/AbstractStringBuilder;' bytes='29' count='8064' iicount='8064' stamp='0.506' comment='tiered' hot_count='8064'/>
<writer thread='1064'/>
Decoding compiled method 0x0000000002a73550:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000016aa3c00} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rdx:rdx   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    r8        = int
  #           [sp+0x80]  (sp of caller)
  0x0000000002a736a0: mov    0x8(%rdx),%r10d
  0x0000000002a736a4: shl    $0x3,%r10
  0x0000000002a736a8: cmp    %r10,%rax
  0x0000000002a736ab: jne    0x00000000029a5f60  ;   {runtime_call}
  0x0000000002a736b1: data16 xchg %ax,%ax
  0x0000000002a736b4: nopl   0x0(%rax,%rax,1)
  0x0000000002a736bc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002a736c0: mov    %eax,-0x6000(%rsp)
  0x0000000002a736c7: push   %rbp
  0x0000000002a736c8: sub    $0x70,%rsp         ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)

  0x0000000002a736cc: mov    %rdx,0x58(%rsp)
  0x0000000002a736d1: mov    0x10(%rdx),%r9d    ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)

  0x0000000002a736d5: mov    0xc(%r9),%ebp      ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; implicit exception: dispatches to 0x0000000002a73923
  0x0000000002a736d9: mov    %r8d,%r10d
  0x0000000002a736dc: sub    %ebp,%r10d
  0x0000000002a736df: test   %r10d,%r10d
  0x0000000002a736e2: jg     0x0000000002a736f5  ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)

  0x0000000002a736e4: add    $0x70,%rsp
  0x0000000002a736e8: pop    %rbp
  0x0000000002a736e9: test   %eax,-0x28836ef(%rip)        # 0x00000000001f0000
                                                ;   {poll_return}
  0x0000000002a736ef: retq   
  0x0000000002a736f0: mov    %r8d,%r11d
  0x0000000002a736f3: jmp    0x0000000002a7370e
  0x0000000002a736f5: mov    %ebp,%r11d
  0x0000000002a736f8: shl    %r11d              ;*ishl
                                                ; - java.lang.AbstractStringBuilder::newCapacity@6 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x0000000002a736fb: mov    %r11d,%r10d
  0x0000000002a736fe: sub    %r8d,%r10d
  0x0000000002a73701: add    $0x2,%r10d
  0x0000000002a73705: test   %r10d,%r10d
  0x0000000002a73708: jl     0x0000000002a736f0  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x0000000002a7370a: add    $0x2,%r11d         ;*iload_2
                                                ; - java.lang.AbstractStringBuilder::newCapacity@18 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x0000000002a7370e: test   %r11d,%r11d
  0x0000000002a73711: jle    0x0000000002a73721  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x0000000002a73713: mov    $0x7ffffff7,%r10d
  0x0000000002a73719: sub    %r11d,%r10d
  0x0000000002a7371c: test   %r10d,%r10d
  0x0000000002a7371f: jge    0x0000000002a73734  ;*aload_0
                                                ; - java.lang.AbstractStringBuilder::newCapacity@29 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x0000000002a73721: mov    %r9d,0x28(%rsp)
  0x0000000002a73726: nop
  0x0000000002a73727: callq  0x00000000029a61a0  ; OopMap{[40]=NarrowOop [88]=Oop off=140}
                                                ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ;   {optimized virtual_call}
  0x0000000002a7372c: mov    %eax,%r11d
  0x0000000002a7372f: mov    0x28(%rsp),%r9d    ;*goto
                                                ; - java.lang.AbstractStringBuilder::newCapacity@34 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x0000000002a73734: cmp    $0x80000,%r11d
  0x0000000002a7373b: ja     0x0000000002a738d2
  0x0000000002a73741: movslq %r11d,%r8          ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x0000000002a73744: cmp    %r11d,%ebp
  0x0000000002a73747: mov    %r11d,%r10d
  0x0000000002a7374a: cmovl  %ebp,%r10d         ;*invokestatic min
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x0000000002a7374e: shl    %r8
  0x0000000002a73751: mov    %r9,%rdx           ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)

  0x0000000002a73754: add    $0x17,%r8          ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x0000000002a73758: mov    %r8,%rcx
  0x0000000002a7375b: shr    $0x3,%rcx          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x0000000002a7375f: and    $0xfffffffffffffff8,%r8  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x0000000002a73763: mov    %rcx,%rax
  0x0000000002a73766: add    $0xfffffffffffffffe,%rax  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x0000000002a7376a: cmp    $0x80000,%r11d
  0x0000000002a73771: ja     0x0000000002a73862
  0x0000000002a73777: mov    0x60(%r15),%rbx
  0x0000000002a7377b: mov    %rbx,%rdi
  0x0000000002a7377e: add    %r8,%rdi
  0x0000000002a73781: cmp    0x70(%r15),%rdi
  0x0000000002a73785: jae    0x0000000002a73862
  0x0000000002a7378b: mov    %rdi,0x60(%r15)
  0x0000000002a7378f: prefetchw 0xc0(%rdi)
  0x0000000002a73796: movq   $0x1,(%rbx)
  0x0000000002a7379d: prefetchw 0x100(%rdi)
  0x0000000002a737a4: movl   $0x20000041,0x8(%rbx)  ;   {metadata({type array char})}
  0x0000000002a737ab: mov    %r11d,0xc(%rbx)
  0x0000000002a737af: prefetchw 0x140(%rdi)
  0x0000000002a737b6: prefetchw 0x180(%rdi)     ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x0000000002a737bd: mov    %rbx,%rsi
  0x0000000002a737c0: add    $0x10,%rsi
  0x0000000002a737c4: cmp    %r10d,%ebp
  0x0000000002a737c7: jb     0x0000000002a738da
  0x0000000002a737cd: cmp    %r10d,%r11d
  0x0000000002a737d0: jb     0x0000000002a738da
  0x0000000002a737d6: test   %r10d,%r10d
  0x0000000002a737d9: jle    0x0000000002a7390e
  0x0000000002a737df: lea    0x10(%r9),%rdx
  0x0000000002a737e3: cmp    %r11d,%r10d
  0x0000000002a737e6: jl     0x0000000002a73822
  0x0000000002a737e8: add    $0xfffffffffffffff0,%r8
  0x0000000002a737ec: shr    $0x3,%r8
  0x0000000002a737f0: mov    %rdx,%rcx
  0x0000000002a737f3: mov    %rsi,%rdx
  0x0000000002a737f6: movabs $0x29b2ca0,%r10
  0x0000000002a73800: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x0000000002a73803: mov    %rbx,%r11
  0x0000000002a73806: mov    0x58(%rsp),%r10
  0x0000000002a7380b: mov    %r11d,0x10(%r10)
  0x0000000002a7380f: shr    $0x9,%r10
  0x0000000002a73813: mov    $0x11909000,%r11d
  0x0000000002a73819: mov    %r12b,(%r11,%r10,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)

  0x0000000002a7381d: jmpq   0x0000000002a736e4
  0x0000000002a73822: movslq %r10d,%r8
  0x0000000002a73825: mov    %r8,%r10
  0x0000000002a73828: shl    %r10
  0x0000000002a7382b: add    $0x10,%r10
  0x0000000002a7382f: mov    %r10,%r11
  0x0000000002a73832: and    $0xfffffffffffffff9,%r11
  0x0000000002a73836: mov    %rbx,%rdi
  0x0000000002a73839: add    %r11,%rdi
  0x0000000002a7383c: shr    $0x3,%r10
  0x0000000002a73840: sub    %r10,%rcx
  0x0000000002a73843: xor    %rax,%rax
  0x0000000002a73846: shl    $0x3,%rcx
  0x0000000002a7384a: rep rex.W stos %al,%es:(%rdi)
  0x0000000002a7384d: mov    %rdx,%rcx
  0x0000000002a73850: mov    %rsi,%rdx
  0x0000000002a73853: movabs $0x29b2980,%r10
  0x0000000002a7385d: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x0000000002a73860: jmp    0x0000000002a73803
  0x0000000002a73862: mov    %r9d,0x50(%rsp)
  0x0000000002a73867: mov    %rax,0x48(%rsp)
  0x0000000002a7386c: mov    %rcx,0x40(%rsp)
  0x0000000002a73871: mov    %rdx,0x38(%rsp)
  0x0000000002a73876: mov    %r10d,0x2c(%rsp)
  0x0000000002a7387b: mov    %r8,0x30(%rsp)
  0x0000000002a73880: mov    %r11d,0x28(%rsp)
  0x0000000002a73885: rex.W pushq 0x58(%rsp)
  0x0000000002a7388a: rex.W popq 0x20(%rsp)
  0x0000000002a7388f: movabs $0x100000208,%rdx  ;   {metadata({type array char})}
  0x0000000002a73899: mov    %r11d,%r8d
  0x0000000002a7389c: data16 xchg %ax,%ax
  0x0000000002a7389f: callq  0x00000000029cf920  ; OopMap{[32]=Oop [56]=Oop [80]=NarrowOop [88]=Oop off=516}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x0000000002a738a4: mov    %rax,%r9
  0x0000000002a738a7: mov    0x28(%rsp),%r11d
  0x0000000002a738ac: mov    0x30(%rsp),%r8
  0x0000000002a738b1: mov    0x2c(%rsp),%r10d
  0x0000000002a738b6: mov    0x38(%rsp),%rdx
  0x0000000002a738bb: mov    0x40(%rsp),%rcx
  0x0000000002a738c0: mov    0x48(%rsp),%rax
  0x0000000002a738c5: mov    %r9,%rbx
  0x0000000002a738c8: mov    0x50(%rsp),%r9d
  0x0000000002a738cd: jmpq   0x0000000002a737bd
  0x0000000002a738d2: movslq %r11d,%r8          ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x0000000002a738d5: jmpq   0x0000000002a73744
  0x0000000002a738da: mov    %rax,%rcx
  0x0000000002a738dd: mov    %rsi,%rdi
  0x0000000002a738e0: xor    %rax,%rax
  0x0000000002a738e3: shl    $0x3,%rcx
  0x0000000002a738e7: rep rex.W stos %al,%es:(%rdi)
  0x0000000002a738ea: xor    %r8d,%r8d
  0x0000000002a738ed: mov    %rbx,%r9
  0x0000000002a738f0: xor    %edi,%edi
  0x0000000002a738f2: mov    %r10d,%esi
  0x0000000002a738f5: mov    0x58(%rsp),%rbp
  0x0000000002a738fa: mov    %rbx,0x28(%rsp)
  0x0000000002a738ff: callq  0x0000000002a64c60  ; OopMap{rbp=Oop [40]=Oop [88]=Oop off=612}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x0000000002a73904: mov    0x28(%rsp),%rbx
  0x0000000002a73909: jmpq   0x0000000002a73803
  0x0000000002a7390e: mov    %rax,%rcx
  0x0000000002a73911: mov    %rsi,%rdi
  0x0000000002a73914: xor    %rax,%rax
  0x0000000002a73917: shl    $0x3,%rcx
  0x0000000002a7391b: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x0000000002a7391e: jmpq   0x0000000002a73803
  0x0000000002a73923: mov    $0xfffffff6,%edx
  0x0000000002a73928: data16 xchg %ax,%ax
  0x0000000002a7392b: callq  0x00000000029a57a0  ; OopMap{off=656}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ;   {runtime_call}
  0x0000000002a73930: int3   
  0x0000000002a73931: jmp    0x0000000002a73933  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x0000000002a73933: mov    %rax,%rdx
  0x0000000002a73936: jmp    0x0000000002a7393b  ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x0000000002a73938: mov    %rax,%rdx          ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)

  0x0000000002a7393b: add    $0x70,%rsp
  0x0000000002a7393f: pop    %rbp
  0x0000000002a73940: jmpq   0x0000000002a64b60  ;   {runtime_call}
  0x0000000002a73945: hlt    
  0x0000000002a73946: hlt    
  0x0000000002a73947: hlt    
  0x0000000002a73948: hlt    
  0x0000000002a73949: hlt    
  0x0000000002a7394a: hlt    
  0x0000000002a7394b: hlt    
  0x0000000002a7394c: hlt    
  0x0000000002a7394d: hlt    
  0x0000000002a7394e: hlt    
  0x0000000002a7394f: hlt    
  0x0000000002a73950: hlt    
  0x0000000002a73951: hlt    
  0x0000000002a73952: hlt    
  0x0000000002a73953: hlt    
  0x0000000002a73954: hlt    
  0x0000000002a73955: hlt    
  0x0000000002a73956: hlt    
  0x0000000002a73957: hlt    
  0x0000000002a73958: hlt    
  0x0000000002a73959: hlt    
  0x0000000002a7395a: hlt    
  0x0000000002a7395b: hlt    
  0x0000000002a7395c: hlt    
  0x0000000002a7395d: hlt    
  0x0000000002a7395e: hlt    
  0x0000000002a7395f: hlt    
[Stub Code]
  0x0000000002a73960: movabs $0x0,%rbx          ;   {no_reloc}
  0x0000000002a7396a: jmpq   0x0000000002a7396a  ;   {runtime_call}
[Exception Handler]
  0x0000000002a7396f: jmpq   0x00000000029cf4a0  ;   {runtime_call}
[Deopt Handler Code]
  0x0000000002a73974: callq  0x0000000002a73979
  0x0000000002a73979: subq   $0x5,(%rsp)
  0x0000000002a7397e: jmpq   0x00000000029a7600  ;   {runtime_call}
  0x0000000002a73983: hlt    
  0x0000000002a73984: hlt    
  0x0000000002a73985: hlt    
  0x0000000002a73986: hlt    
  0x0000000002a73987: hlt    
<nmethod compile_id='28' compiler='C2' level='4' entry='0x0000000002a736a0' size='1912' address='0x0000000002a73550' relocation_offset='288' insts_offset='336' stub_offset='1040' scopes_data_offset='1112' scopes_pcs_offset='1304' dependencies_offset='1816' handler_table_offset='1824' nul_chk_table_offset='1896' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='27' count='8896' iicount='8896' stamp='0.522'/>
<writer thread='14520'/>
Decoding compiled method 0x0000000002a7a150:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000016a34e50} &apos;startsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8:r8     = &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000002a7a2c0: mov    0x8(%rdx),%r10d
  0x0000000002a7a2c4: shl    $0x3,%r10
  0x0000000002a7a2c8: cmp    %rax,%r10
  0x0000000002a7a2cb: jne    0x00000000029a5f60  ;   {runtime_call}
  0x0000000002a7a2d1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002a7a2dc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002a7a2e0: mov    %eax,-0x6000(%rsp)
  0x0000000002a7a2e7: push   %rbp
  0x0000000002a7a2e8: sub    $0x30,%rsp
  0x0000000002a7a2ec: movabs $0x16d32608,%r9    ;   {metadata(method data for {method} {0x0000000016a34e50} &apos;startsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a7a2f6: mov    0xdc(%r9),%esi
  0x0000000002a7a2fd: add    $0x8,%esi
  0x0000000002a7a300: mov    %esi,0xdc(%r9)
  0x0000000002a7a307: movabs $0x16a34e48,%r9    ;   {metadata({method} {0x0000000016a34e50} &apos;startsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a7a311: and    $0x1ff8,%esi
  0x0000000002a7a317: cmp    $0x0,%esi
  0x0000000002a7a31a: je     0x0000000002a7a3cb  ;*aload_0
                                                ; - java.lang.String::startsWith@0 (line 1434)

  0x0000000002a7a320: mov    %rdx,%r9
  0x0000000002a7a323: movabs $0x16d32608,%rsi   ;   {metadata(method data for {method} {0x0000000016a34e50} &apos;startsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a7a32d: mov    0x8(%r9),%r9d
  0x0000000002a7a331: shl    $0x3,%r9
  0x0000000002a7a335: cmp    0x110(%rsi),%r9
  0x0000000002a7a33c: jne    0x0000000002a7a34b
  0x0000000002a7a33e: addq   $0x1,0x118(%rsi)
  0x0000000002a7a346: jmpq   0x0000000002a7a3b1
  0x0000000002a7a34b: cmp    0x120(%rsi),%r9
  0x0000000002a7a352: jne    0x0000000002a7a361
  0x0000000002a7a354: addq   $0x1,0x128(%rsi)
  0x0000000002a7a35c: jmpq   0x0000000002a7a3b1
  0x0000000002a7a361: cmpq   $0x0,0x110(%rsi)
  0x0000000002a7a36c: jne    0x0000000002a7a385
  0x0000000002a7a36e: mov    %r9,0x110(%rsi)
  0x0000000002a7a375: movq   $0x1,0x118(%rsi)
  0x0000000002a7a380: jmpq   0x0000000002a7a3b1
  0x0000000002a7a385: cmpq   $0x0,0x120(%rsi)
  0x0000000002a7a390: jne    0x0000000002a7a3a9
  0x0000000002a7a392: mov    %r9,0x120(%rsi)
  0x0000000002a7a399: movq   $0x1,0x128(%rsi)
  0x0000000002a7a3a4: jmpq   0x0000000002a7a3b1
  0x0000000002a7a3a9: addq   $0x1,0x108(%rsi)
  0x0000000002a7a3b1: mov    $0x0,%r9d          ;*invokevirtual startsWith
                                                ; - java.lang.String::startsWith@3 (line 1434)

  0x0000000002a7a3b7: callq  0x00000000029a61a0  ; OopMap{off=252}
                                                ;*invokevirtual startsWith
                                                ; - java.lang.String::startsWith@3 (line 1434)
                                                ;   {optimized virtual_call}
  0x0000000002a7a3bc: and    $0x1,%eax
  0x0000000002a7a3bf: add    $0x30,%rsp
  0x0000000002a7a3c3: pop    %rbp
  0x0000000002a7a3c4: test   %eax,-0x288a2ca(%rip)        # 0x00000000001f0100
                                                ;   {poll_return}
  0x0000000002a7a3ca: retq   
  0x0000000002a7a3cb: mov    %r9,0x8(%rsp)
  0x0000000002a7a3d0: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002a7a3d8: callq  0x0000000002a5f7a0  ; OopMap{rdx=Oop r8=Oop off=285}
                                                ;*synchronization entry
                                                ; - java.lang.String::startsWith@-1 (line 1434)
                                                ;   {runtime_call}
  0x0000000002a7a3dd: jmpq   0x0000000002a7a320
  0x0000000002a7a3e2: nop
  0x0000000002a7a3e3: nop
  0x0000000002a7a3e4: mov    0x2a8(%r15),%rax
  0x0000000002a7a3eb: movabs $0x0,%r10
  0x0000000002a7a3f5: mov    %r10,0x2a8(%r15)
  0x0000000002a7a3fc: movabs $0x0,%r10
  0x0000000002a7a406: mov    %r10,0x2b0(%r15)
  0x0000000002a7a40d: add    $0x30,%rsp
  0x0000000002a7a411: pop    %rbp
  0x0000000002a7a412: jmpq   0x00000000029cf0e0  ;   {runtime_call}
  0x0000000002a7a417: hlt    
  0x0000000002a7a418: hlt    
  0x0000000002a7a419: hlt    
  0x0000000002a7a41a: hlt    
  0x0000000002a7a41b: hlt    
  0x0000000002a7a41c: hlt    
  0x0000000002a7a41d: hlt    
  0x0000000002a7a41e: hlt    
  0x0000000002a7a41f: hlt    
[Stub Code]
  0x0000000002a7a420: nop                       ;   {no_reloc}
  0x0000000002a7a421: nop
  0x0000000002a7a422: nop
  0x0000000002a7a423: nop
  0x0000000002a7a424: nop
  0x0000000002a7a425: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002a7a42f: jmpq   0x0000000002a7a42f  ;   {runtime_call}
[Exception Handler]
  0x0000000002a7a434: callq  0x00000000029cfc60  ;   {runtime_call}
  0x0000000002a7a439: mov    %rsp,-0x28(%rsp)
  0x0000000002a7a43e: sub    $0x80,%rsp
  0x0000000002a7a445: mov    %rax,0x78(%rsp)
  0x0000000002a7a44a: mov    %rcx,0x70(%rsp)
  0x0000000002a7a44f: mov    %rdx,0x68(%rsp)
  0x0000000002a7a454: mov    %rbx,0x60(%rsp)
  0x0000000002a7a459: mov    %rbp,0x50(%rsp)
  0x0000000002a7a45e: mov    %rsi,0x48(%rsp)
  0x0000000002a7a463: mov    %rdi,0x40(%rsp)
  0x0000000002a7a468: mov    %r8,0x38(%rsp)
  0x0000000002a7a46d: mov    %r9,0x30(%rsp)
  0x0000000002a7a472: mov    %r10,0x28(%rsp)
  0x0000000002a7a477: mov    %r11,0x20(%rsp)
  0x0000000002a7a47c: mov    %r12,0x18(%rsp)
  0x0000000002a7a481: mov    %r13,0x10(%rsp)
  0x0000000002a7a486: mov    %r14,0x8(%rsp)
  0x0000000002a7a48b: mov    %r15,(%rsp)
  0x0000000002a7a48f: movabs $0x623d8e30,%rcx   ;   {external_word}
  0x0000000002a7a499: movabs $0x2a7a439,%rdx    ;   {internal_word}
  0x0000000002a7a4a3: mov    %rsp,%r8
  0x0000000002a7a4a6: and    $0xfffffffffffffff0,%rsp
  0x0000000002a7a4aa: callq  0x0000000062093d40  ;   {runtime_call}
  0x0000000002a7a4af: hlt    
[Deopt Handler Code]
  0x0000000002a7a4b0: movabs $0x2a7a4b0,%r10    ;   {section_word}
  0x0000000002a7a4ba: push   %r10
  0x0000000002a7a4bc: jmpq   0x00000000029a7600  ;   {runtime_call}
  0x0000000002a7a4c1: hlt    
  0x0000000002a7a4c2: hlt    
  0x0000000002a7a4c3: hlt    
  0x0000000002a7a4c4: hlt    
  0x0000000002a7a4c5: hlt    
  0x0000000002a7a4c6: hlt    
  0x0000000002a7a4c7: hlt    
<nmethod compile_id='26' compiler='C1' level='3' entry='0x0000000002a7a2c0' size='1040' address='0x0000000002a7a150' relocation_offset='288' insts_offset='368' stub_offset='720' scopes_data_offset='896' scopes_pcs_offset='936' dependencies_offset='1032' method='java/lang/String startsWith (Ljava/lang/String;)Z' bytes='7' count='521' iicount='521' stamp='0.527'/>
Decoding compiled method 0x0000000002a79790:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000016a35c78} &apos;substring&apos; &apos;(II)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8        = int
  # parm1:    r9        = int
  #           [sp+0x70]  (sp of caller)
  0x0000000002a79940: mov    0x8(%rdx),%r10d
  0x0000000002a79944: shl    $0x3,%r10
  0x0000000002a79948: cmp    %rax,%r10
  0x0000000002a7994b: jne    0x00000000029a5f60  ;   {runtime_call}
  0x0000000002a79951: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002a7995c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002a79960: mov    %eax,-0x6000(%rsp)
  0x0000000002a79967: push   %rbp
  0x0000000002a79968: sub    $0x60,%rsp
  0x0000000002a7996c: mov    %rdx,%rbx
  0x0000000002a7996f: mov    %r8,%r11
  0x0000000002a79972: movabs $0x16d33400,%rdx   ;   {metadata(method data for {method} {0x0000000016a35c78} &apos;substring&apos; &apos;(II)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a7997c: mov    0xdc(%rdx),%esi
  0x0000000002a79982: add    $0x8,%esi
  0x0000000002a79985: mov    %esi,0xdc(%rdx)
  0x0000000002a7998b: movabs $0x16a35c70,%rdx   ;   {metadata({method} {0x0000000016a35c78} &apos;substring&apos; &apos;(II)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a79995: and    $0x1ff8,%esi
  0x0000000002a7999b: cmp    $0x0,%esi
  0x0000000002a7999e: je     0x0000000002a79c2e  ;*iload_1
                                                ; - java.lang.String::substring@0 (line 1959)

  0x0000000002a799a4: cmp    $0x0,%r11d
  0x0000000002a799a8: movabs $0x16d33400,%rdx   ;   {metadata(method data for {method} {0x0000000016a35c78} &apos;substring&apos; &apos;(II)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a799b2: movabs $0x108,%rsi
  0x0000000002a799bc: jge    0x0000000002a799cc
  0x0000000002a799c2: movabs $0x118,%rsi
  0x0000000002a799cc: mov    (%rdx,%rsi,1),%rdi
  0x0000000002a799d0: lea    0x1(%rdi),%rdi
  0x0000000002a799d4: mov    %rdi,(%rdx,%rsi,1)
  0x0000000002a799d8: jl     0x0000000002a79bee  ;*ifge
                                                ; - java.lang.String::substring@1 (line 1959)

  0x0000000002a799de: mov    0xc(%rbx),%r8d     ;*getfield value
                                                ; - java.lang.String::substring@15 (line 1962)

  0x0000000002a799e2: mov    0xc(%r8),%edx      ;*arraylength
                                                ; - java.lang.String::substring@18 (line 1962)
                                                ; implicit exception: dispatches to 0x0000000002a79c45
  0x0000000002a799e6: cmp    %edx,%r9d
  0x0000000002a799e9: movabs $0x16d33400,%rsi   ;   {metadata(method data for {method} {0x0000000016a35c78} &apos;substring&apos; &apos;(II)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a799f3: movabs $0x138,%rdi
  0x0000000002a799fd: jle    0x0000000002a79a0d
  0x0000000002a79a03: movabs $0x148,%rdi
  0x0000000002a79a0d: mov    (%rsi,%rdi,1),%rax
  0x0000000002a79a11: lea    0x1(%rax),%rax
  0x0000000002a79a15: mov    %rax,(%rsi,%rdi,1)
  0x0000000002a79a19: jg     0x0000000002a79bae  ;*if_icmple
                                                ; - java.lang.String::substring@19 (line 1962)

  0x0000000002a79a1f: mov    %r9,%r13
  0x0000000002a79a22: sub    %r11d,%r13d
  0x0000000002a79a25: cmp    $0x0,%r13d
  0x0000000002a79a29: movabs $0x16d33400,%rsi   ;   {metadata(method data for {method} {0x0000000016a35c78} &apos;substring&apos; &apos;(II)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a79a33: movabs $0x168,%rdi
  0x0000000002a79a3d: jge    0x0000000002a79a4d
  0x0000000002a79a43: movabs $0x178,%rdi
  0x0000000002a79a4d: mov    (%rsi,%rdi,1),%rax
  0x0000000002a79a51: lea    0x1(%rax),%rax
  0x0000000002a79a55: mov    %rax,(%rsi,%rdi,1)
  0x0000000002a79a59: jl     0x0000000002a79b6c  ;*ifge
                                                ; - java.lang.String::substring@36 (line 1966)

  0x0000000002a79a5f: cmp    $0x0,%r11d
  0x0000000002a79a63: movabs $0x16d33400,%rsi   ;   {metadata(method data for {method} {0x0000000016a35c78} &apos;substring&apos; &apos;(II)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a79a6d: movabs $0x198,%rdi
  0x0000000002a79a77: jne    0x0000000002a79a87
  0x0000000002a79a7d: movabs $0x1a8,%rdi
  0x0000000002a79a87: mov    (%rsi,%rdi,1),%rax
  0x0000000002a79a8b: lea    0x1(%rax),%rax
  0x0000000002a79a8f: mov    %rax,(%rsi,%rdi,1)
  0x0000000002a79a93: jne    0x0000000002a79ad2  ;*ifne
                                                ; - java.lang.String::substring@49 (line 1969)

  0x0000000002a79a99: cmp    %edx,%r9d
  0x0000000002a79a9c: movabs $0x16d33400,%rdx   ;   {metadata(method data for {method} {0x0000000016a35c78} &apos;substring&apos; &apos;(II)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a79aa6: movabs $0x1b8,%rsi
  0x0000000002a79ab0: jne    0x0000000002a79ac0
  0x0000000002a79ab6: movabs $0x1c8,%rsi
  0x0000000002a79ac0: mov    (%rdx,%rsi,1),%rdi
  0x0000000002a79ac4: lea    0x1(%rdi),%rdi
  0x0000000002a79ac8: mov    %rdi,(%rdx,%rsi,1)
  0x0000000002a79acc: je     0x0000000002a79b4d  ;*if_icmpne
                                                ; - java.lang.String::substring@58 (line 1969)

  0x0000000002a79ad2: movabs $0x1000016d0,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x0000000002a79adc: mov    0x60(%r15),%rax
  0x0000000002a79ae0: lea    0x18(%rax),%rdi
  0x0000000002a79ae4: cmp    0x70(%r15),%rdi
  0x0000000002a79ae8: ja     0x0000000002a79c4a
  0x0000000002a79aee: mov    %rdi,0x60(%r15)
  0x0000000002a79af2: mov    0xa8(%rdx),%rcx
  0x0000000002a79af9: mov    %rcx,(%rax)
  0x0000000002a79afc: mov    %rdx,%rcx
  0x0000000002a79aff: shr    $0x3,%rcx
  0x0000000002a79b03: mov    %ecx,0x8(%rax)
  0x0000000002a79b06: xor    %rcx,%rcx
  0x0000000002a79b09: mov    %ecx,0xc(%rax)
  0x0000000002a79b0c: xor    %rcx,%rcx
  0x0000000002a79b0f: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.String::substring@65 (line 1969)

  0x0000000002a79b13: mov    %rax,%r9
  0x0000000002a79b16: movabs $0x16d33400,%rdi   ;   {metadata(method data for {method} {0x0000000016a35c78} &apos;substring&apos; &apos;(II)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a79b20: addq   $0x1,0x1f0(%rdi)
  0x0000000002a79b28: mov    %r11,%r9
  0x0000000002a79b2b: mov    %r13,%rdi
  0x0000000002a79b2e: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::substring@75 (line 1969)

  0x0000000002a79b31: mov    %rax,0x30(%rsp)
  0x0000000002a79b36: nop
  0x0000000002a79b37: callq  0x00000000029a61a0  ; OopMap{[48]=Oop off=508}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::substring@75 (line 1969)
                                                ;   {optimized virtual_call}
  0x0000000002a79b3c: mov    0x30(%rsp),%rax    ;*areturn
                                                ; - java.lang.String::substring@78 (line 1969)

  0x0000000002a79b41: add    $0x60,%rsp
  0x0000000002a79b45: pop    %rbp
  0x0000000002a79b46: test   %eax,-0x2889a4c(%rip)        # 0x00000000001f0100
                                                ;   {poll_return}
  0x0000000002a79b4c: retq   
  0x0000000002a79b4d: movabs $0x16d33400,%rax   ;   {metadata(method data for {method} {0x0000000016a35c78} &apos;substring&apos; &apos;(II)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a79b57: incl   0x1d8(%rax)
  0x0000000002a79b5d: mov    %rbx,%rax          ;*goto
                                                ; - java.lang.String::substring@62 (line 1969)

  0x0000000002a79b60: add    $0x60,%rsp
  0x0000000002a79b64: pop    %rbp
  0x0000000002a79b65: test   %eax,-0x2889a6b(%rip)        # 0x00000000001f0100
                                                ;   {poll_return}
  0x0000000002a79b6b: retq                      ;*areturn
                                                ; - java.lang.String::substring@78 (line 1969)

  0x0000000002a79b6c: nopl   0x0(%rax)
  0x0000000002a79b70: jmpq   0x0000000002a79c66  ;   {no_reloc}
  0x0000000002a79b75: add    %al,(%rax)
  0x0000000002a79b77: add    %al,(%rax)
  0x0000000002a79b79: add    %ch,%cl
  0x0000000002a79b7b: icebp  
  0x0000000002a79b7c: add    %al,(%rax)
  0x0000000002a79b7e: add    %cl,-0x40(%rbx,%rcx,4)  ;*new
                                                ; - java.lang.String::substring@39 (line 1967)

  0x0000000002a79b82: movabs $0x16d33400,%rdx   ;   {metadata(method data for {method} {0x0000000016a35c78} &apos;substring&apos; &apos;(II)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a79b8c: addq   $0x1,0x188(%rdx)
  0x0000000002a79b94: mov    %r13,%r8
  0x0000000002a79b97: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::substring@44 (line 1967)

  0x0000000002a79b9a: mov    %rax,0x38(%rsp)
  0x0000000002a79b9f: callq  0x00000000029a61a0  ; OopMap{[56]=Oop off=612}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::substring@44 (line 1967)
                                                ;   {optimized virtual_call}
  0x0000000002a79ba4: mov    0x38(%rsp),%rax
  0x0000000002a79ba9: jmpq   0x0000000002a79cf4  ;*athrow
                                                ; - java.lang.String::substring@47 (line 1967)

  0x0000000002a79bae: xchg   %ax,%ax
  0x0000000002a79bb0: jmpq   0x0000000002a79c8c  ;   {no_reloc}
  0x0000000002a79bb5: add    %al,(%rax)
  0x0000000002a79bb7: add    %al,(%rax)
  0x0000000002a79bb9: add    %ch,%cl
  0x0000000002a79bbb: xlat   %ds:(%rbx)
  0x0000000002a79bbc: add    %al,(%rax)
  0x0000000002a79bbe: add    %cl,-0x40(%rbx,%rcx,4)  ;*new
                                                ; - java.lang.String::substring@22 (line 1963)

  0x0000000002a79bc2: movabs $0x16d33400,%rdx   ;   {metadata(method data for {method} {0x0000000016a35c78} &apos;substring&apos; &apos;(II)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a79bcc: addq   $0x1,0x158(%rdx)
  0x0000000002a79bd4: mov    %r9,%r8
  0x0000000002a79bd7: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::substring@27 (line 1963)

  0x0000000002a79bda: mov    %rax,0x40(%rsp)
  0x0000000002a79bdf: callq  0x00000000029a61a0  ; OopMap{[64]=Oop off=676}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::substring@27 (line 1963)
                                                ;   {optimized virtual_call}
  0x0000000002a79be4: mov    0x40(%rsp),%rax
  0x0000000002a79be9: jmpq   0x0000000002a79cf4  ;*athrow
                                                ; - java.lang.String::substring@30 (line 1963)

  0x0000000002a79bee: xchg   %ax,%ax
  0x0000000002a79bf0: jmpq   0x0000000002a79cb2  ;   {no_reloc}
  0x0000000002a79bf5: add    %al,(%rax)
  0x0000000002a79bf7: add    %al,(%rax)
  0x0000000002a79bf9: add    %ch,%cl
  0x0000000002a79bfb: mov    $0x4c000000,%ebp   ;*new  ; - java.lang.String::substring@4 (line 1960)

  0x0000000002a79c00: mov    %eax,%eax
  0x0000000002a79c02: movabs $0x16d33400,%rdx   ;   {metadata(method data for {method} {0x0000000016a35c78} &apos;substring&apos; &apos;(II)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a79c0c: addq   $0x1,0x128(%rdx)
  0x0000000002a79c14: mov    %r11,%r8
  0x0000000002a79c17: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::substring@9 (line 1960)

  0x0000000002a79c1a: mov    %rax,0x48(%rsp)
  0x0000000002a79c1f: callq  0x00000000029a61a0  ; OopMap{[72]=Oop off=740}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::substring@9 (line 1960)
                                                ;   {optimized virtual_call}
  0x0000000002a79c24: mov    0x48(%rsp),%rax
  0x0000000002a79c29: jmpq   0x0000000002a79cf4
  0x0000000002a79c2e: mov    %rdx,0x8(%rsp)
  0x0000000002a79c33: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002a79c3b: callq  0x0000000002a5f7a0  ; OopMap{rbx=Oop off=768}
                                                ;*synchronization entry
                                                ; - java.lang.String::substring@-1 (line 1959)
                                                ;   {runtime_call}
  0x0000000002a79c40: jmpq   0x0000000002a799a4
  0x0000000002a79c45: callq  0x00000000029d1b80  ; OopMap{rbx=Oop r8=Oop off=778}
                                                ;*arraylength
                                                ; - java.lang.String::substring@18 (line 1962)
                                                ;   {runtime_call}
  0x0000000002a79c4a: mov    %rdx,%rdx
  0x0000000002a79c4d: callq  0x00000000029d1240  ; OopMap{rbx=Oop r8=Oop off=786}
                                                ;*new  ; - java.lang.String::substring@65 (line 1969)
                                                ;   {runtime_call}
  0x0000000002a79c52: jmpq   0x0000000002a79b13
  0x0000000002a79c57: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002a79c61: mov    $0xa050f00,%eax
  0x0000000002a79c66: callq  0x0000000002a606a0  ; OopMap{off=811}
                                                ;*new  ; - java.lang.String::substring@39 (line 1967)
                                                ;   {runtime_call}
  0x0000000002a79c6b: jmpq   0x0000000002a79b70
  0x0000000002a79c70: mov    %rdx,%rdx
  0x0000000002a79c73: callq  0x00000000029d1660  ; OopMap{off=824}
                                                ;*new  ; - java.lang.String::substring@39 (line 1967)
                                                ;   {runtime_call}
  0x0000000002a79c78: jmpq   0x0000000002a79b7f
  0x0000000002a79c7d: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002a79c87: mov    $0xa050f00,%eax
  0x0000000002a79c8c: callq  0x0000000002a606a0  ; OopMap{off=849}
                                                ;*new  ; - java.lang.String::substring@22 (line 1963)
                                                ;   {runtime_call}
  0x0000000002a79c91: jmpq   0x0000000002a79bb0
  0x0000000002a79c96: mov    %rdx,%rdx
  0x0000000002a79c99: callq  0x00000000029d1660  ; OopMap{off=862}
                                                ;*new  ; - java.lang.String::substring@22 (line 1963)
                                                ;   {runtime_call}
  0x0000000002a79c9e: jmpq   0x0000000002a79bbf
  0x0000000002a79ca3: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002a79cad: mov    $0xa050f00,%eax
  0x0000000002a79cb2: callq  0x0000000002a606a0  ; OopMap{off=887}
                                                ;*new  ; - java.lang.String::substring@4 (line 1960)
                                                ;   {runtime_call}
  0x0000000002a79cb7: jmpq   0x0000000002a79bf0
  0x0000000002a79cbc: mov    %rdx,%rdx
  0x0000000002a79cbf: callq  0x00000000029d1660  ; OopMap{off=900}
                                                ;*new  ; - java.lang.String::substring@4 (line 1960)
                                                ;   {runtime_call}
  0x0000000002a79cc4: jmpq   0x0000000002a79bff
  0x0000000002a79cc9: nop
  0x0000000002a79cca: nop
  0x0000000002a79ccb: mov    0x2a8(%r15),%rax
  0x0000000002a79cd2: movabs $0x0,%r10
  0x0000000002a79cdc: mov    %r10,0x2a8(%r15)
  0x0000000002a79ce3: movabs $0x0,%r10
  0x0000000002a79ced: mov    %r10,0x2b0(%r15)
  0x0000000002a79cf4: add    $0x60,%rsp
  0x0000000002a79cf8: pop    %rbp
  0x0000000002a79cf9: jmpq   0x00000000029cf0e0  ;   {runtime_call}
  0x0000000002a79cfe: hlt    
  0x0000000002a79cff: hlt    
[Stub Code]
  0x0000000002a79d00: nop                       ;   {no_reloc}
  0x0000000002a79d01: nop
  0x0000000002a79d02: nop
  0x0000000002a79d03: nop
  0x0000000002a79d04: nop
  0x0000000002a79d05: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002a79d0f: jmpq   0x0000000002a79d0f  ;   {runtime_call}
  0x0000000002a79d14: nop
  0x0000000002a79d15: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002a79d1f: jmpq   0x0000000002a79d1f  ;   {runtime_call}
  0x0000000002a79d24: nop
  0x0000000002a79d25: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002a79d2f: jmpq   0x0000000002a79d2f  ;   {runtime_call}
  0x0000000002a79d34: nop
  0x0000000002a79d35: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002a79d3f: jmpq   0x0000000002a79d3f  ;   {runtime_call}
[Exception Handler]
  0x0000000002a79d44: callq  0x00000000029cfc60  ;   {runtime_call}
  0x0000000002a79d49: mov    %rsp,-0x28(%rsp)
  0x0000000002a79d4e: sub    $0x80,%rsp
  0x0000000002a79d55: mov    %rax,0x78(%rsp)
  0x0000000002a79d5a: mov    %rcx,0x70(%rsp)
  0x0000000002a79d5f: mov    %rdx,0x68(%rsp)
  0x0000000002a79d64: mov    %rbx,0x60(%rsp)
  0x0000000002a79d69: mov    %rbp,0x50(%rsp)
  0x0000000002a79d6e: mov    %rsi,0x48(%rsp)
  0x0000000002a79d73: mov    %rdi,0x40(%rsp)
  0x0000000002a79d78: mov    %r8,0x38(%rsp)
  0x0000000002a79d7d: mov    %r9,0x30(%rsp)
  0x0000000002a79d82: mov    %r10,0x28(%rsp)
  0x0000000002a79d87: mov    %r11,0x20(%rsp)
  0x0000000002a79d8c: mov    %r12,0x18(%rsp)
  0x0000000002a79d91: mov    %r13,0x10(%rsp)
  0x0000000002a79d96: mov    %r14,0x8(%rsp)
  0x0000000002a79d9b: mov    %r15,(%rsp)
  0x0000000002a79d9f: movabs $0x623d8e30,%rcx   ;   {external_word}
  0x0000000002a79da9: movabs $0x2a79d49,%rdx    ;   {internal_word}
  0x0000000002a79db3: mov    %rsp,%r8
  0x0000000002a79db6: and    $0xfffffffffffffff0,%rsp
  0x0000000002a79dba: callq  0x0000000062093d40  ;   {runtime_call}
  0x0000000002a79dbf: hlt    
[Deopt Handler Code]
  0x0000000002a79dc0: movabs $0x2a79dc0,%r10    ;   {section_word}
  0x0000000002a79dca: push   %r10
  0x0000000002a79dcc: jmpq   0x00000000029a7600  ;   {runtime_call}
  0x0000000002a79dd1: hlt    
  0x0000000002a79dd2: hlt    
  0x0000000002a79dd3: hlt    
  0x0000000002a79dd4: hlt    
  0x0000000002a79dd5: hlt    
  0x0000000002a79dd6: hlt    
  0x0000000002a79dd7: hlt    
<nmethod compile_id='6' compiler='C1' level='3' entry='0x0000000002a79940' size='2480' address='0x0000000002a79790' relocation_offset='288' insts_offset='432' stub_offset='1392' scopes_data_offset='1616' scopes_pcs_offset='1880' dependencies_offset='2456' nul_chk_table_offset='2464' method='java/lang/String substring (II)Ljava/lang/String;' bytes='79' count='325' iicount='325' stamp='0.540'/>
<writer thread='1572'/>
Decoding compiled method 0x0000000002a77950:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000016aa4d38} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rdx:rdx   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    r8        = char
  #           [sp+0x80]  (sp of caller)
  0x0000000002a77aa0: mov    0x8(%rdx),%r10d
  0x0000000002a77aa4: shl    $0x3,%r10
  0x0000000002a77aa8: cmp    %r10,%rax
  0x0000000002a77aab: jne    0x00000000029a5f60  ;   {runtime_call}
  0x0000000002a77ab1: data16 xchg %ax,%ax
  0x0000000002a77ab4: nopl   0x0(%rax,%rax,1)
  0x0000000002a77abc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002a77ac0: mov    %eax,-0x6000(%rsp)
  0x0000000002a77ac7: push   %rbp
  0x0000000002a77ac8: sub    $0x70,%rsp         ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 649)

  0x0000000002a77acc: mov    %r8d,0x28(%rsp)
  0x0000000002a77ad1: mov    %rdx,0x50(%rsp)
  0x0000000002a77ad6: mov    0x10(%rdx),%r10d   ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002a77ada: mov    %r10d,0x48(%rsp)
  0x0000000002a77adf: mov    0xc(%r10),%r11d    ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; implicit exception: dispatches to 0x0000000002a77dd8
  0x0000000002a77ae3: mov    %r11d,0x20(%rsp)
  0x0000000002a77ae8: mov    0xc(%rdx),%ebp     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@2 (line 649)

  0x0000000002a77aeb: mov    %ebp,%r10d
  0x0000000002a77aee: sub    %r11d,%r10d
  0x0000000002a77af1: mov    0x48(%rsp),%r11d
  0x0000000002a77af6: mov    %r11,%rbx          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002a77af9: inc    %r10d
  0x0000000002a77afc: mov    %ebp,%r8d
  0x0000000002a77aff: inc    %r8d               ;*iadd
                                                ; - java.lang.AbstractStringBuilder::append@6 (line 649)

  0x0000000002a77b02: test   %r10d,%r10d
  0x0000000002a77b05: jg     0x0000000002a77b42  ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)

  0x0000000002a77b07: mov    0x50(%rsp),%r10
  0x0000000002a77b0c: mov    %r8d,0xc(%r10)     ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@22 (line 650)

  0x0000000002a77b10: test   %rbx,%rbx
  0x0000000002a77b13: je     0x0000000002a77d70
  0x0000000002a77b19: mov    0xc(%rbx),%r11d
  0x0000000002a77b1d: cmp    %r11d,%ebp
  0x0000000002a77b20: jae    0x0000000002a77d7d
  0x0000000002a77b26: mov    0x28(%rsp),%r10d
  0x0000000002a77b2b: mov    %r10w,0x10(%rbx,%rbp,2)  ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 649)

  0x0000000002a77b31: mov    0x50(%rsp),%rax
  0x0000000002a77b36: add    $0x70,%rsp
  0x0000000002a77b3a: pop    %rbp
  0x0000000002a77b3b: test   %eax,-0x2887b41(%rip)        # 0x00000000001f0000
                                                ;   {poll_return}
  0x0000000002a77b41: retq   
  0x0000000002a77b42: mov    0x20(%rsp),%r10d
  0x0000000002a77b47: shl    %r10d              ;*ishl
                                                ; - java.lang.AbstractStringBuilder::newCapacity@6 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002a77b4a: mov    %r10d,%r9d
  0x0000000002a77b4d: sub    %ebp,%r9d
  0x0000000002a77b50: inc    %r9d
  0x0000000002a77b53: test   %r9d,%r9d
  0x0000000002a77b56: jge    0x0000000002a77c95  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002a77b5c: mov    %r8d,%r10d         ;*iload_2
                                                ; - java.lang.AbstractStringBuilder::newCapacity@18 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002a77b5f: test   %r10d,%r10d
  0x0000000002a77b62: jle    0x0000000002a77b70  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002a77b64: mov    $0x7ffffff7,%ecx
  0x0000000002a77b69: sub    %r10d,%ecx
  0x0000000002a77b6c: test   %ecx,%ecx
  0x0000000002a77b6e: jge    0x0000000002a77b83  ;*aload_0
                                                ; - java.lang.AbstractStringBuilder::newCapacity@29 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002a77b70: mov    %rdx,0x30(%rsp)
  0x0000000002a77b75: mov    %rbx,0x38(%rsp)
  0x0000000002a77b7a: nop
  0x0000000002a77b7b: callq  0x00000000029a61a0  ; OopMap{[48]=Oop [56]=Oop [72]=NarrowOop [80]=Oop off=224}
                                                ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ;   {optimized virtual_call}
  0x0000000002a77b80: mov    %eax,%r10d         ;*goto
                                                ; - java.lang.AbstractStringBuilder::newCapacity@34 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002a77b83: cmp    $0x80000,%r10d
  0x0000000002a77b8a: ja     0x0000000002a77d8d
  0x0000000002a77b90: movslq %r10d,%r9          ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002a77b93: shl    %r9
  0x0000000002a77b96: mov    0x48(%rsp),%r11d
  0x0000000002a77b9b: mov    %r11,%rdx          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002a77b9e: add    $0x17,%r9
  0x0000000002a77ba2: mov    %r9,%rdi
  0x0000000002a77ba5: and    $0xfffffffffffffff8,%rdi
  0x0000000002a77ba9: cmp    $0x80000,%r10d
  0x0000000002a77bb0: ja     0x0000000002a77ce1
  0x0000000002a77bb6: mov    0x60(%r15),%rbx
  0x0000000002a77bba: mov    %rbx,%r11
  0x0000000002a77bbd: add    %rdi,%r11
  0x0000000002a77bc0: cmp    0x70(%r15),%r11
  0x0000000002a77bc4: jae    0x0000000002a77ce1
  0x0000000002a77bca: mov    %r11,0x60(%r15)
  0x0000000002a77bce: prefetchw 0xc0(%r11)
  0x0000000002a77bd6: movq   $0x1,(%rbx)
  0x0000000002a77bdd: prefetchw 0x100(%r11)
  0x0000000002a77be5: movl   $0x20000041,0x8(%rbx)  ;   {metadata({type array char})}
  0x0000000002a77bec: mov    %r10d,0xc(%rbx)
  0x0000000002a77bf0: prefetchw 0x140(%r11)
  0x0000000002a77bf8: prefetchw 0x180(%r11)     ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002a77c00: mov    0x20(%rsp),%ecx
  0x0000000002a77c04: cmp    %r10d,%ecx
  0x0000000002a77c07: mov    %r10d,%esi
  0x0000000002a77c0a: cmovl  0x20(%rsp),%esi    ;*invokestatic min
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002a77c0f: mov    %rbx,%rbp
  0x0000000002a77c12: add    $0x10,%rbp
  0x0000000002a77c16: shr    $0x3,%r9
  0x0000000002a77c1a: mov    %r9,%rcx
  0x0000000002a77c1d: add    $0xfffffffffffffffe,%rcx
  0x0000000002a77c21: mov    0x20(%rsp),%r11d
  0x0000000002a77c26: cmp    %esi,%r11d
  0x0000000002a77c29: jb     0x0000000002a77d95
  0x0000000002a77c2f: cmp    %esi,%r10d
  0x0000000002a77c32: jb     0x0000000002a77d95
  0x0000000002a77c38: test   %esi,%esi
  0x0000000002a77c3a: jle    0x0000000002a77dc6
  0x0000000002a77c40: mov    0x48(%rsp),%r11d
  0x0000000002a77c45: lea    0x10(%r11),%r11
  0x0000000002a77c49: cmp    %r10d,%esi
  0x0000000002a77c4c: jl     0x0000000002a77c9e
  0x0000000002a77c4e: add    $0xfffffffffffffff0,%rdi
  0x0000000002a77c52: shr    $0x3,%rdi
  0x0000000002a77c56: mov    %r11,%rcx
  0x0000000002a77c59: mov    %rbp,%rdx
  0x0000000002a77c5c: mov    %rdi,%r8
  0x0000000002a77c5f: movabs $0x29b2ca0,%r10
  0x0000000002a77c69: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002a77c6c: mov    0x50(%rsp),%r10
  0x0000000002a77c71: mov    0xc(%r10),%ebp     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)

  0x0000000002a77c75: mov    %rbx,%r11
  0x0000000002a77c78: mov    %r11d,0x10(%r10)   ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002a77c7c: mov    %ebp,%r8d
  0x0000000002a77c7f: inc    %r8d               ;*iadd
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 650)

  0x0000000002a77c82: shr    $0x9,%r10
  0x0000000002a77c86: mov    $0x11909000,%r11d
  0x0000000002a77c8c: mov    %r12b,(%r11,%r10,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002a77c90: jmpq   0x0000000002a77b07
  0x0000000002a77c95: add    $0x2,%r10d         ;*iadd
                                                ; - java.lang.AbstractStringBuilder::newCapacity@8 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002a77c99: jmpq   0x0000000002a77b5f
  0x0000000002a77c9e: movslq %esi,%r8
  0x0000000002a77ca1: mov    %r8,%r10
  0x0000000002a77ca4: shl    %r10
  0x0000000002a77ca7: add    $0x10,%r10
  0x0000000002a77cab: mov    %r10,%rcx
  0x0000000002a77cae: and    $0xfffffffffffffff9,%rcx
  0x0000000002a77cb2: mov    %rbx,%rdi
  0x0000000002a77cb5: add    %rcx,%rdi
  0x0000000002a77cb8: shr    $0x3,%r10
  0x0000000002a77cbc: sub    %r10,%r9
  0x0000000002a77cbf: mov    %r9,%rcx
  0x0000000002a77cc2: xor    %rax,%rax
  0x0000000002a77cc5: shl    $0x3,%rcx
  0x0000000002a77cc9: rep rex.W stos %al,%es:(%rdi)
  0x0000000002a77ccc: mov    %r11,%rcx
  0x0000000002a77ccf: mov    %rbp,%rdx
  0x0000000002a77cd2: movabs $0x29b2980,%r10
  0x0000000002a77cdc: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002a77cdf: jmp    0x0000000002a77c6c
  0x0000000002a77ce1: mov    %rdi,0x40(%rsp)
  0x0000000002a77ce6: mov    %rdx,0x38(%rsp)
  0x0000000002a77ceb: mov    %r9,0x30(%rsp)
  0x0000000002a77cf0: mov    %r10d,0x2c(%rsp)
  0x0000000002a77cf5: mov    %rax,-0x8(%rsp)
  0x0000000002a77cfa: mov    0x20(%rsp),%eax
  0x0000000002a77cfe: mov    %eax,0x24(%rsp)
  0x0000000002a77d02: mov    -0x8(%rsp),%rax
  0x0000000002a77d07: mov    %rax,-0x8(%rsp)
  0x0000000002a77d0c: mov    0x48(%rsp),%eax
  0x0000000002a77d10: mov    %eax,0x20(%rsp)
  0x0000000002a77d14: mov    -0x8(%rsp),%rax
  0x0000000002a77d19: mov    0x50(%rsp),%rbp
  0x0000000002a77d1e: movabs $0x100000208,%rdx  ;   {metadata({type array char})}
  0x0000000002a77d28: mov    %r10d,%r8d
  0x0000000002a77d2b: callq  0x00000000029cf920  ; OopMap{rbp=Oop [32]=NarrowOop [56]=Oop [80]=Oop off=656}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ;   {runtime_call}
  0x0000000002a77d30: mov    %rax,-0x8(%rsp)
  0x0000000002a77d35: mov    0x20(%rsp),%eax
  0x0000000002a77d39: mov    %eax,0x48(%rsp)
  0x0000000002a77d3d: mov    -0x8(%rsp),%rax
  0x0000000002a77d42: mov    %rax,-0x8(%rsp)
  0x0000000002a77d47: mov    0x24(%rsp),%eax
  0x0000000002a77d4b: mov    %eax,0x20(%rsp)
  0x0000000002a77d4f: mov    -0x8(%rsp),%rax
  0x0000000002a77d54: mov    0x2c(%rsp),%r10d
  0x0000000002a77d59: mov    0x30(%rsp),%r9
  0x0000000002a77d5e: mov    0x38(%rsp),%rdx
  0x0000000002a77d63: mov    0x40(%rsp),%rdi
  0x0000000002a77d68: mov    %rax,%rbx
  0x0000000002a77d6b: jmpq   0x0000000002a77c00
  0x0000000002a77d70: mov    $0xfffffff6,%edx
  0x0000000002a77d75: xchg   %ax,%ax
  0x0000000002a77d77: callq  0x00000000029a57a0  ; OopMap{off=732}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ;   {runtime_call}
  0x0000000002a77d7c: int3   
  0x0000000002a77d7d: mov    $0xffffffe4,%edx
  0x0000000002a77d82: mov    %rbx,0x30(%rsp)
  0x0000000002a77d87: callq  0x00000000029a57a0  ; OopMap{[48]=Oop [80]=Oop off=748}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ;   {runtime_call}
  0x0000000002a77d8c: int3                      ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)

  0x0000000002a77d8d: movslq %r10d,%r9          ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002a77d90: jmpq   0x0000000002a77b93
  0x0000000002a77d95: mov    %rbp,%rdi
  0x0000000002a77d98: xor    %rax,%rax
  0x0000000002a77d9b: shl    $0x3,%rcx
  0x0000000002a77d9f: rep rex.W stos %al,%es:(%rdi)
  0x0000000002a77da2: xor    %r8d,%r8d
  0x0000000002a77da5: mov    %rbx,%r9
  0x0000000002a77da8: xor    %edi,%edi
  0x0000000002a77daa: mov    0x50(%rsp),%rbp
  0x0000000002a77daf: mov    %rbx,0x40(%rsp)
  0x0000000002a77db4: data16 xchg %ax,%ax
  0x0000000002a77db7: callq  0x0000000002a64c60  ; OopMap{rbp=Oop [64]=Oop [80]=Oop off=796}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ;   {runtime_call}
  0x0000000002a77dbc: mov    0x40(%rsp),%rbx
  0x0000000002a77dc1: jmpq   0x0000000002a77c6c
  0x0000000002a77dc6: mov    %rbp,%rdi
  0x0000000002a77dc9: xor    %rax,%rax
  0x0000000002a77dcc: shl    $0x3,%rcx
  0x0000000002a77dd0: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002a77dd3: jmpq   0x0000000002a77c6c
  0x0000000002a77dd8: mov    $0xfffffff6,%edx
  0x0000000002a77ddd: xchg   %ax,%ax
  0x0000000002a77ddf: callq  0x00000000029a57a0  ; OopMap{off=836}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ;   {runtime_call}
  0x0000000002a77de4: int3   
  0x0000000002a77de5: jmp    0x0000000002a77de7  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002a77de7: mov    %rax,%rdx
  0x0000000002a77dea: jmp    0x0000000002a77def  ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002a77dec: mov    %rax,%rdx          ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 649)

  0x0000000002a77def: add    $0x70,%rsp
  0x0000000002a77df3: pop    %rbp
  0x0000000002a77df4: jmpq   0x0000000002a64b60  ;   {runtime_call}
  0x0000000002a77df9: hlt    
  0x0000000002a77dfa: hlt    
  0x0000000002a77dfb: hlt    
  0x0000000002a77dfc: hlt    
  0x0000000002a77dfd: hlt    
  0x0000000002a77dfe: hlt    
  0x0000000002a77dff: hlt    
[Stub Code]
  0x0000000002a77e00: movabs $0x0,%rbx          ;   {no_reloc}
  0x0000000002a77e0a: jmpq   0x0000000002a77e0a  ;   {runtime_call}
[Exception Handler]
  0x0000000002a77e0f: jmpq   0x00000000029cf4a0  ;   {runtime_call}
[Deopt Handler Code]
  0x0000000002a77e14: callq  0x0000000002a77e19
  0x0000000002a77e19: subq   $0x5,(%rsp)
  0x0000000002a77e1e: jmpq   0x00000000029a7600  ;   {runtime_call}
  0x0000000002a77e23: hlt    
  0x0000000002a77e24: hlt    
  0x0000000002a77e25: hlt    
  0x0000000002a77e26: hlt    
  0x0000000002a77e27: hlt    
<nmethod compile_id='30' compiler='C2' level='4' entry='0x0000000002a77aa0' size='2320' address='0x0000000002a77950' relocation_offset='288' insts_offset='336' stub_offset='1200' scopes_data_offset='1280' scopes_pcs_offset='1584' dependencies_offset='2224' handler_table_offset='2232' nul_chk_table_offset='2304' method='java/lang/AbstractStringBuilder append (C)Ljava/lang/AbstractStringBuilder;' bytes='29' count='8080' iicount='8080' stamp='0.565'/>
<writer thread='1672'/>
<task_queued compile_id='31' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='756' backedge_count='3500' iicount='756' level='3' stamp='0.567' comment='tiered' hot_count='756'/>
<writer thread='14520'/>
Decoding compiled method 0x0000000002a78d90:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000016a345d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8:r8     = &apos;java/lang/Object&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000002a78f20: mov    0x8(%rdx),%r10d
  0x0000000002a78f24: shl    $0x3,%r10
  0x0000000002a78f28: cmp    %rax,%r10
  0x0000000002a78f2b: jne    0x00000000029a5f60  ;   {runtime_call}
  0x0000000002a78f31: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002a78f3c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002a78f40: mov    %eax,-0x6000(%rsp)
  0x0000000002a78f47: push   %rbp
  0x0000000002a78f48: sub    $0x30,%rsp
  0x0000000002a78f4c: movabs $0x16c62b38,%rax   ;   {metadata(method data for {method} {0x0000000016a345d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a78f56: mov    0xdc(%rax),%esi
  0x0000000002a78f5c: add    $0x8,%esi
  0x0000000002a78f5f: mov    %esi,0xdc(%rax)
  0x0000000002a78f65: movabs $0x16a345d0,%rax   ;   {metadata({method} {0x0000000016a345d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a78f6f: and    $0x1ff8,%esi
  0x0000000002a78f75: cmp    $0x0,%esi
  0x0000000002a78f78: je     0x0000000002a79346  ;*aload_0
                                                ; - java.lang.String::equals@0 (line 977)

  0x0000000002a78f7e: cmp    %r8,%rdx
  0x0000000002a78f81: movabs $0x16c62b38,%rax   ;   {metadata(method data for {method} {0x0000000016a345d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a78f8b: movabs $0x108,%rsi
  0x0000000002a78f95: jne    0x0000000002a78fa5
  0x0000000002a78f9b: movabs $0x118,%rsi
  0x0000000002a78fa5: mov    (%rax,%rsi,1),%rdi
  0x0000000002a78fa9: lea    0x1(%rdi),%rdi
  0x0000000002a78fad: mov    %rdi,(%rax,%rsi,1)
  0x0000000002a78fb1: je     0x0000000002a79335  ;*if_acmpne
                                                ; - java.lang.String::equals@2 (line 977)

  0x0000000002a78fb7: cmp    $0x0,%r8
  0x0000000002a78fbb: jne    0x0000000002a78fd6
  0x0000000002a78fbd: movabs $0x16c62b38,%rdi   ;   {metadata(method data for {method} {0x0000000016a345d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a78fc7: orl    $0x100,0x120(%rdi)
  0x0000000002a78fd1: jmpq   0x0000000002a79098
  0x0000000002a78fd6: movabs $0x1000016d0,%rbx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x0000000002a78fe0: mov    0x8(%r8),%esi
  0x0000000002a78fe4: shl    $0x3,%rsi
  0x0000000002a78fe8: cmp    %rsi,%rbx
  0x0000000002a78feb: jne    0x0000000002a7907c
  0x0000000002a78ff1: movabs $0x16c62b38,%rdi   ;   {metadata(method data for {method} {0x0000000016a345d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a78ffb: mov    0x8(%r8),%ebx
  0x0000000002a78fff: shl    $0x3,%rbx
  0x0000000002a79003: cmp    0x130(%rdi),%rbx
  0x0000000002a7900a: jne    0x0000000002a79019
  0x0000000002a7900c: addq   $0x1,0x138(%rdi)
  0x0000000002a79014: jmpq   0x0000000002a7909d
  0x0000000002a79019: cmp    0x140(%rdi),%rbx
  0x0000000002a79020: jne    0x0000000002a7902f
  0x0000000002a79022: addq   $0x1,0x148(%rdi)
  0x0000000002a7902a: jmpq   0x0000000002a7909d
  0x0000000002a7902f: cmpq   $0x0,0x130(%rdi)
  0x0000000002a7903a: jne    0x0000000002a79053
  0x0000000002a7903c: mov    %rbx,0x130(%rdi)
  0x0000000002a79043: movq   $0x1,0x138(%rdi)
  0x0000000002a7904e: jmpq   0x0000000002a7909d
  0x0000000002a79053: cmpq   $0x0,0x140(%rdi)
  0x0000000002a7905e: jne    0x0000000002a79077
  0x0000000002a79060: mov    %rbx,0x140(%rdi)
  0x0000000002a79067: movq   $0x1,0x148(%rdi)
  0x0000000002a79072: jmpq   0x0000000002a7909d
  0x0000000002a79077: jmpq   0x0000000002a7909d
  0x0000000002a7907c: movabs $0x16c62b38,%rdi   ;   {metadata(method data for {method} {0x0000000016a345d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a79086: subq   $0x1,0x128(%rdi)
  0x0000000002a7908e: jmpq   0x0000000002a79098
  0x0000000002a79093: jmpq   0x0000000002a7909d
  0x0000000002a79098: xor    %rax,%rax
  0x0000000002a7909b: jmp    0x0000000002a790a7
  0x0000000002a7909d: movabs $0x1,%rax          ;*instanceof
                                                ; - java.lang.String::equals@8 (line 980)

  0x0000000002a790a7: cmp    $0x0,%eax
  0x0000000002a790aa: movabs $0x16c62b38,%rax   ;   {metadata(method data for {method} {0x0000000016a345d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a790b4: movabs $0x158,%rsi
  0x0000000002a790be: je     0x0000000002a790ce
  0x0000000002a790c4: movabs $0x168,%rsi
  0x0000000002a790ce: mov    (%rax,%rsi,1),%rdi
  0x0000000002a790d2: lea    0x1(%rdi),%rdi
  0x0000000002a790d6: mov    %rdi,(%rax,%rsi,1)
  0x0000000002a790da: je     0x0000000002a79324  ;*ifeq
                                                ; - java.lang.String::equals@11 (line 980)

  0x0000000002a790e0: cmp    $0x0,%r8
  0x0000000002a790e4: jne    0x0000000002a790ff
  0x0000000002a790e6: movabs $0x16c62b38,%rdi   ;   {metadata(method data for {method} {0x0000000016a345d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a790f0: orl    $0x100,0x170(%rdi)
  0x0000000002a790fa: jmpq   0x0000000002a791c1
  0x0000000002a790ff: movabs $0x1000016d0,%rbx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x0000000002a79109: mov    0x8(%r8),%esi
  0x0000000002a7910d: shl    $0x3,%rsi
  0x0000000002a79111: cmp    %rsi,%rbx
  0x0000000002a79114: jne    0x0000000002a791a5
  0x0000000002a7911a: movabs $0x16c62b38,%rdi   ;   {metadata(method data for {method} {0x0000000016a345d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a79124: mov    0x8(%r8),%ebx
  0x0000000002a79128: shl    $0x3,%rbx
  0x0000000002a7912c: cmp    0x180(%rdi),%rbx
  0x0000000002a79133: jne    0x0000000002a79142
  0x0000000002a79135: addq   $0x1,0x188(%rdi)
  0x0000000002a7913d: jmpq   0x0000000002a791c1
  0x0000000002a79142: cmp    0x190(%rdi),%rbx
  0x0000000002a79149: jne    0x0000000002a79158
  0x0000000002a7914b: addq   $0x1,0x198(%rdi)
  0x0000000002a79153: jmpq   0x0000000002a791c1
  0x0000000002a79158: cmpq   $0x0,0x180(%rdi)
  0x0000000002a79163: jne    0x0000000002a7917c
  0x0000000002a79165: mov    %rbx,0x180(%rdi)
  0x0000000002a7916c: movq   $0x1,0x188(%rdi)
  0x0000000002a79177: jmpq   0x0000000002a791c1
  0x0000000002a7917c: cmpq   $0x0,0x190(%rdi)
  0x0000000002a79187: jne    0x0000000002a791a0
  0x0000000002a79189: mov    %rbx,0x190(%rdi)
  0x0000000002a79190: movq   $0x1,0x198(%rdi)
  0x0000000002a7919b: jmpq   0x0000000002a791c1
  0x0000000002a791a0: jmpq   0x0000000002a791c1
  0x0000000002a791a5: movabs $0x16c62b38,%rdi   ;   {metadata(method data for {method} {0x0000000016a345d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a791af: subq   $0x1,0x178(%rdi)
  0x0000000002a791b7: jmpq   0x0000000002a7935d
  0x0000000002a791bc: jmpq   0x0000000002a791c1
  0x0000000002a791c1: mov    %r8,%rax           ;*checkcast
                                                ; - java.lang.String::equals@15 (line 981)

  0x0000000002a791c4: mov    0xc(%rdx),%esi     ;*getfield value
                                                ; - java.lang.String::equals@20 (line 982)

  0x0000000002a791c7: mov    0xc(%rsi),%edi     ;*arraylength
                                                ; - java.lang.String::equals@23 (line 982)
                                                ; implicit exception: dispatches to 0x0000000002a79366
  0x0000000002a791ca: mov    0xc(%rax),%eax     ;*getfield value
                                                ; - java.lang.String::equals@27 (line 983)
                                                ; implicit exception: dispatches to 0x0000000002a7936b
  0x0000000002a791cd: mov    0xc(%rax),%ebx     ;*arraylength
                                                ; - java.lang.String::equals@30 (line 983)
                                                ; implicit exception: dispatches to 0x0000000002a79370
  0x0000000002a791d0: cmp    %ebx,%edi
  0x0000000002a791d2: movabs $0x16c62b38,%rbx   ;   {metadata(method data for {method} {0x0000000016a345d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a791dc: movabs $0x1a8,%rdx
  0x0000000002a791e6: jne    0x0000000002a791f6
  0x0000000002a791ec: movabs $0x1b8,%rdx
  0x0000000002a791f6: mov    (%rbx,%rdx,1),%rcx
  0x0000000002a791fa: lea    0x1(%rcx),%rcx
  0x0000000002a791fe: mov    %rcx,(%rbx,%rdx,1)
  0x0000000002a79202: jne    0x0000000002a79324  ;*if_icmpne
                                                ; - java.lang.String::equals@31 (line 983)

  0x0000000002a79208: mov    $0x0,%ebx
  0x0000000002a7920d: jmpq   0x0000000002a792bf  ;*iload_3
                                                ; - java.lang.String::equals@49 (line 987)

  0x0000000002a79212: nopw   0x0(%rax,%rax,1)
  0x0000000002a79218: movslq %ebx,%rdi
  0x0000000002a7921b: cmp    0xc(%rsi),%ebx
  0x0000000002a7921e: jae    0x0000000002a79375
  0x0000000002a79224: movzwl 0x10(%rsi,%rdi,2),%edi  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x0000000002a79229: movslq %ebx,%rcx
  0x0000000002a7922c: cmp    0xc(%rax),%ebx
  0x0000000002a7922f: jae    0x0000000002a7937e
  0x0000000002a79235: movzwl 0x10(%rax,%rcx,2),%ecx  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x0000000002a7923a: cmp    %ecx,%edi
  0x0000000002a7923c: movabs $0x16c62b38,%rdi   ;   {metadata(method data for {method} {0x0000000016a345d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a79246: movabs $0x1e8,%rcx
  0x0000000002a79250: je     0x0000000002a79260
  0x0000000002a79256: movabs $0x1f8,%rcx
  0x0000000002a79260: mov    (%rdi,%rcx,1),%r8
  0x0000000002a79264: lea    0x1(%r8),%r8
  0x0000000002a79268: mov    %r8,(%rdi,%rcx,1)
  0x0000000002a7926c: jne    0x0000000002a79302  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x0000000002a79272: inc    %ebx
  0x0000000002a79274: movabs $0x16c62b38,%rdi   ;   {metadata(method data for {method} {0x0000000016a345d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a7927e: mov    0xe0(%rdi),%ecx
  0x0000000002a79284: add    $0x8,%ecx
  0x0000000002a79287: mov    %ecx,0xe0(%rdi)
  0x0000000002a7928d: movabs $0x16a345d0,%rdi   ;   {metadata({method} {0x0000000016a345d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a79297: and    $0xfff8,%ecx
  0x0000000002a7929d: cmp    $0x0,%ecx
  0x0000000002a792a0: je     0x0000000002a79387  ; OopMap{rax=Oop rsi=Oop off=902}
                                                ;*goto
                                                ; - java.lang.String::equals@74 (line 990)

  0x0000000002a792a6: test   %eax,-0x28891ac(%rip)        # 0x00000000001f0100
                                                ;   {poll}
  0x0000000002a792ac: movabs $0x16c62b38,%rdi   ;   {metadata(method data for {method} {0x0000000016a345d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a792b6: incl   0x208(%rdi)
  0x0000000002a792bc: mov    %rdx,%rdi          ;*goto
                                                ; - java.lang.String::equals@74 (line 990)

  0x0000000002a792bf: mov    %rdi,%rdx
  0x0000000002a792c2: dec    %edx
  0x0000000002a792c4: cmp    $0x0,%edi
  0x0000000002a792c7: movabs $0x16c62b38,%rdi   ;   {metadata(method data for {method} {0x0000000016a345d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a792d1: movabs $0x1c8,%rcx
  0x0000000002a792db: je     0x0000000002a792eb
  0x0000000002a792e1: movabs $0x1d8,%rcx
<writer thread='1672'/>
[Loaded org.gallant.jitwatch.Summary from file:/D:/git/private/jitwatch/target/classes/]
<writer thread='14520'/>

  0x0000000002a792eb: mov    (%rdi,%rcx,1),%r8
  0x0000000002a792ef: lea    0x1(%r8),%r8
  0x0000000002a792f3: mov    %r8,(%rdi,%rcx,1)
  0x0000000002a792f7: je     0x0000000002a79313
  0x0000000002a792fd: jmpq   0x0000000002a79218  ;*ifeq
                                                ; - java.lang.String::equals@53 (line 987)

  0x0000000002a79302: mov    $0x0,%eax
  0x0000000002a79307: add    $0x30,%rsp
  0x0000000002a7930b: pop    %rbp
  0x0000000002a7930c: test   %eax,-0x2889212(%rip)        # 0x00000000001f0100
                                                ;   {poll_return}
  0x0000000002a79312: retq                      ;*ireturn
                                                ; - java.lang.String::equals@70 (line 989)

  0x0000000002a79313: mov    $0x1,%eax
  0x0000000002a79318: add    $0x30,%rsp
  0x0000000002a7931c: pop    %rbp
  0x0000000002a7931d: test   %eax,-0x2889223(%rip)        # 0x00000000001f0100
                                                ;   {poll_return}
  0x0000000002a79323: retq                      ;*ireturn
                                                ; - java.lang.String::equals@78 (line 992)

  0x0000000002a79324: mov    $0x0,%eax
  0x0000000002a79329: add    $0x30,%rsp
  0x0000000002a7932d: pop    %rbp
  0x0000000002a7932e: test   %eax,-0x2889234(%rip)        # 0x00000000001f0100
                                                ;   {poll_return}
  0x0000000002a79334: retq                      ;*ireturn
                                                ; - java.lang.String::equals@80 (line 995)

  0x0000000002a79335: mov    $0x1,%eax
  0x0000000002a7933a: add    $0x30,%rsp
  0x0000000002a7933e: pop    %rbp
  0x0000000002a7933f: test   %eax,-0x2889245(%rip)        # 0x00000000001f0100
                                                ;   {poll_return}
  0x0000000002a79345: retq   
  0x0000000002a79346: mov    %rax,0x8(%rsp)
  0x0000000002a7934b: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002a79353: callq  0x0000000002a5f7a0  ; OopMap{rdx=Oop r8=Oop off=1080}
                                                ;*synchronization entry
                                                ; - java.lang.String::equals@-1 (line 977)
                                                ;   {runtime_call}
  0x0000000002a79358: jmpq   0x0000000002a78f7e
  0x0000000002a7935d: mov    %r8,(%rsp)
  0x0000000002a79361: callq  0x00000000029cf700  ; OopMap{rdx=Oop off=1094}
                                                ;*checkcast
                                                ; - java.lang.String::equals@15 (line 981)
                                                ;   {runtime_call}
  0x0000000002a79366: callq  0x00000000029d1b80  ; OopMap{rax=Oop rsi=Oop off=1099}
                                                ;*arraylength
                                                ; - java.lang.String::equals@23 (line 982)
                                                ;   {runtime_call}
  0x0000000002a7936b: callq  0x00000000029d1b80  ; OopMap{rsi=Oop off=1104}
                                                ;*getfield value
                                                ; - java.lang.String::equals@27 (line 983)
                                                ;   {runtime_call}
  0x0000000002a79370: callq  0x00000000029d1b80  ; OopMap{rsi=Oop rax=Oop off=1109}
                                                ;*arraylength
                                                ; - java.lang.String::equals@30 (line 983)
                                                ;   {runtime_call}
  0x0000000002a79375: mov    %rbx,(%rsp)
  0x0000000002a79379: callq  0x00000000029cec40  ; OopMap{rax=Oop rsi=Oop off=1118}
                                                ;*caload
                                                ; - java.lang.String::equals@60 (line 988)
                                                ;   {runtime_call}
  0x0000000002a7937e: mov    %rbx,(%rsp)
  0x0000000002a79382: callq  0x00000000029cec40  ; OopMap{rax=Oop rsi=Oop off=1127}
                                                ;*caload
                                                ; - java.lang.String::equals@65 (line 988)
                                                ;   {runtime_call}
  0x0000000002a79387: mov    %rdi,0x8(%rsp)
  0x0000000002a7938c: movq   $0x4a,(%rsp)
  0x0000000002a79394: callq  0x0000000002a5f7a0  ; OopMap{rax=Oop rsi=Oop off=1145}
                                                ;*goto
                                                ; - java.lang.String::equals@74 (line 990)
                                                ;   {runtime_call}
  0x0000000002a79399: jmpq   0x0000000002a792a6
  0x0000000002a7939e: nop
  0x0000000002a7939f: nop
  0x0000000002a793a0: mov    0x2a8(%r15),%rax
  0x0000000002a793a7: movabs $0x0,%r10
  0x0000000002a793b1: mov    %r10,0x2a8(%r15)
  0x0000000002a793b8: movabs $0x0,%r10
  0x0000000002a793c2: mov    %r10,0x2b0(%r15)
  0x0000000002a793c9: add    $0x30,%rsp
  0x0000000002a793cd: pop    %rbp
  0x0000000002a793ce: jmpq   0x00000000029cf0e0  ;   {runtime_call}
  0x0000000002a793d3: hlt    
  0x0000000002a793d4: hlt    
  0x0000000002a793d5: hlt    
  0x0000000002a793d6: hlt    
  0x0000000002a793d7: hlt    
  0x0000000002a793d8: hlt    
  0x0000000002a793d9: hlt    
  0x0000000002a793da: hlt    
  0x0000000002a793db: hlt    
  0x0000000002a793dc: hlt    
  0x0000000002a793dd: hlt    
  0x0000000002a793de: hlt    
  0x0000000002a793df: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002a793e0: callq  0x00000000029cfc60  ;   {no_reloc}
  0x0000000002a793e5: mov    %rsp,-0x28(%rsp)
  0x0000000002a793ea: sub    $0x80,%rsp
  0x0000000002a793f1: mov    %rax,0x78(%rsp)
  0x0000000002a793f6: mov    %rcx,0x70(%rsp)
  0x0000000002a793fb: mov    %rdx,0x68(%rsp)
  0x0000000002a79400: mov    %rbx,0x60(%rsp)
  0x0000000002a79405: mov    %rbp,0x50(%rsp)
  0x0000000002a7940a: mov    %rsi,0x48(%rsp)
  0x0000000002a7940f: mov    %rdi,0x40(%rsp)
  0x0000000002a79414: mov    %r8,0x38(%rsp)
  0x0000000002a79419: mov    %r9,0x30(%rsp)
  0x0000000002a7941e: mov    %r10,0x28(%rsp)
  0x0000000002a79423: mov    %r11,0x20(%rsp)
  0x0000000002a79428: mov    %r12,0x18(%rsp)
  0x0000000002a7942d: mov    %r13,0x10(%rsp)
  0x0000000002a79432: mov    %r14,0x8(%rsp)
  0x0000000002a79437: mov    %r15,(%rsp)
  0x0000000002a7943b: movabs $0x623d8e30,%rcx   ;   {external_word}
  0x0000000002a79445: movabs $0x2a793e5,%rdx    ;   {internal_word}
  0x0000000002a7944f: mov    %rsp,%r8
  0x0000000002a79452: and    $0xfffffffffffffff0,%rsp
  0x0000000002a79456: callq  0x0000000062093d40  ;   {runtime_call}
  0x0000000002a7945b: hlt    
[Deopt Handler Code]
  0x0000000002a7945c: movabs $0x2a7945c,%r10    ;   {section_word}
  0x0000000002a79466: push   %r10
  0x0000000002a79468: jmpq   0x00000000029a7600  ;   {runtime_call}
  0x0000000002a7946d: hlt    
  0x0000000002a7946e: hlt    
  0x0000000002a7946f: hlt    
<nmethod compile_id='31' compiler='C1' level='3' entry='0x0000000002a78f20' size='2504' address='0x0000000002a78d90' relocation_offset='288' insts_offset='400' stub_offset='1616' scopes_data_offset='1768' scopes_pcs_offset='1984' dependencies_offset='2464' nul_chk_table_offset='2472' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='759' backedge_count='3528' iicount='759' stamp='0.580'/>
<writer thread='1672'/>
[Loaded sun.launcher.LauncherHelper$FXHelper from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.Void from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
<task_queued compile_id='32' method='org/gallant/jitwatch/Summary add (II)I' bytes='17' count='256' iicount='256' level='3' stamp='0.582' comment='tiered' hot_count='256'/>
<writer thread='14520'/>
Decoding compiled method 0x0000000002a775d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000016e32c28} &apos;add&apos; &apos;(II)I&apos; in &apos;org/gallant/jitwatch/Summary&apos;
  # this:     rdx:rdx   = &apos;org/gallant/jitwatch/Summary&apos;
  # parm0:    r8        = int
  # parm1:    r9        = int
  #           [sp+0x50]  (sp of caller)
  0x0000000002a77720: mov    0x8(%rdx),%r10d
  0x0000000002a77724: shl    $0x3,%r10
  0x0000000002a77728: cmp    %rax,%r10
  0x0000000002a7772b: jne    0x00000000029a5f60  ;   {runtime_call}
  0x0000000002a77731: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002a7773c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002a77740: mov    %eax,-0x6000(%rsp)
  0x0000000002a77747: push   %rbp
  0x0000000002a77748: sub    $0x40,%rsp
  0x0000000002a7774c: movabs $0x16e33028,%rax   ;   {metadata(method data for {method} {0x0000000016e32c28} &apos;add&apos; &apos;(II)I&apos; in &apos;org/gallant/jitwatch/Summary&apos;)}
  0x0000000002a77756: mov    0xdc(%rax),%esi
  0x0000000002a7775c: add    $0x8,%esi
  0x0000000002a7775f: mov    %esi,0xdc(%rax)
  0x0000000002a77765: movabs $0x16e32c20,%rax   ;   {metadata({method} {0x0000000016e32c28} &apos;add&apos; &apos;(II)I&apos; in &apos;org/gallant/jitwatch/Summary&apos;)}
  0x0000000002a7776f: and    $0x1ff8,%esi
  0x0000000002a77775: cmp    $0x0,%esi
  0x0000000002a77778: je     0x0000000002a777b5  ;*iload_1
                                                ; - org.gallant.jitwatch.Summary::add@0 (line 12)

  0x0000000002a7777e: add    %r9d,%r8d
  0x0000000002a77781: vmovsd 0x10(%rdx),%xmm0
  0x0000000002a77786: vmovq  %xmm0,%rax         ;*getfield summary
                                                ; - org.gallant.jitwatch.Summary::add@6 (line 13)

  0x0000000002a7778b: movslq %r8d,%rsi
  0x0000000002a7778e: add    %rsi,%rax
  0x0000000002a77791: mov    %rax,0x30(%rsp)
  0x0000000002a77796: vmovsd 0x30(%rsp),%xmm0
  0x0000000002a7779c: vmovsd %xmm0,0x10(%rdx)
  0x0000000002a777a1: lock addl $0x0,(%rsp)     ;*putfield summary
                                                ; - org.gallant.jitwatch.Summary::add@12 (line 13)

  0x0000000002a777a6: mov    %r8,%rax
  0x0000000002a777a9: add    $0x40,%rsp
  0x0000000002a777ad: pop    %rbp
  0x0000000002a777ae: test   %eax,-0x28876b4(%rip)        # 0x00000000001f0100
                                                ;   {poll_return}
  0x0000000002a777b4: retq   
  0x0000000002a777b5: mov    %rax,0x8(%rsp)
  0x0000000002a777ba: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002a777c2: callq  0x0000000002a5f7a0  ; OopMap{rdx=Oop off=167}
                                                ;*synchronization entry
                                                ; - org.gallant.jitwatch.Summary::add@-1 (line 12)
                                                ;   {runtime_call}
  0x0000000002a777c7: jmp    0x0000000002a7777e
  0x0000000002a777c9: nop
  0x0000000002a777ca: nop
  0x0000000002a777cb: mov    0x2a8(%r15),%rax
  0x0000000002a777d2: movabs $0x0,%r10
  0x0000000002a777dc: mov    %r10,0x2a8(%r15)
  0x0000000002a777e3: movabs $0x0,%r10
  0x0000000002a777ed: mov    %r10,0x2b0(%r15)
  0x0000000002a777f4: add    $0x40,%rsp
  0x0000000002a777f8: pop    %rbp
  0x0000000002a777f9: jmpq   0x00000000029cf0e0  ;   {runtime_call}
  0x0000000002a777fe: hlt    
  0x0000000002a777ff: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002a77800: callq  0x00000000029cfc60  ;   {no_reloc}
  0x0000000002a77805: mov    %rsp,-0x28(%rsp)
  0x0000000002a7780a: sub    $0x80,%rsp
  0x0000000002a77811: mov    %rax,0x78(%rsp)
  0x0000000002a77816: mov    %rcx,0x70(%rsp)
  0x0000000002a7781b: mov    %rdx,0x68(%rsp)
  0x0000000002a77820: mov    %rbx,0x60(%rsp)
  0x0000000002a77825: mov    %rbp,0x50(%rsp)
  0x0000000002a7782a: mov    %rsi,0x48(%rsp)
  0x0000000002a7782f: mov    %rdi,0x40(%rsp)
  0x0000000002a77834: mov    %r8,0x38(%rsp)
  0x0000000002a77839: mov    %r9,0x30(%rsp)
  0x0000000002a7783e: mov    %r10,0x28(%rsp)
  0x0000000002a77843: mov    %r11,0x20(%rsp)
  0x0000000002a77848: mov    %r12,0x18(%rsp)
  0x0000000002a7784d: mov    %r13,0x10(%rsp)
  0x0000000002a77852: mov    %r14,0x8(%rsp)
  0x0000000002a77857: mov    %r15,(%rsp)
  0x0000000002a7785b: movabs $0x623d8e30,%rcx   ;   {external_word}
  0x0000000002a77865: movabs $0x2a77805,%rdx    ;   {internal_word}
  0x0000000002a7786f: mov    %rsp,%r8
  0x0000000002a77872: and    $0xfffffffffffffff0,%rsp
  0x0000000002a77876: callq  0x0000000062093d40  ;   {runtime_call}
  0x0000000002a7787b: hlt    
[Deopt Handler Code]
  0x0000000002a7787c: movabs $0x2a7787c,%r10    ;   {section_word}
  0x0000000002a77886: push   %r10
  0x0000000002a77888: jmpq   0x00000000029a7600  ;   {runtime_call}
  0x0000000002a7788d: hlt    
  0x0000000002a7788e: hlt    
  0x0000000002a7788f: hlt    
<nmethod compile_id='32' compiler='C1' level='3' entry='0x0000000002a77720' size='864' address='0x0000000002a775d0' relocation_offset='288' insts_offset='336' stub_offset='560' scopes_data_offset='720' scopes_pcs_offset='760' dependencies_offset='856' oops_offset='704' method='org/gallant/jitwatch/Summary add (II)I' bytes='17' count='46197' iicount='46197' stamp='0.603'/>
<writer thread='1672'/>
<task_queued compile_id='33' method='org/gallant/jitwatch/Summary add (II)I' bytes='17' count='46336' iicount='46336' stamp='0.603' comment='tiered' hot_count='46336'/>
<writer thread='1572'/>
Decoding compiled method 0x0000000002a73010:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000016e32c28} &apos;add&apos; &apos;(II)I&apos; in &apos;org/gallant/jitwatch/Summary&apos;
  # this:     rdx:rdx   = &apos;org/gallant/jitwatch/Summary&apos;
  # parm0:    r8        = int
  # parm1:    r9        = int
  #           [sp+0x20]  (sp of caller)
  0x0000000002a73140: mov    0x8(%rdx),%r10d
  0x0000000002a73144: shl    $0x3,%r10
  0x0000000002a73148: cmp    %r10,%rax
  0x0000000002a7314b: jne    0x00000000029a5f60  ;   {runtime_call}
  0x0000000002a73151: data16 xchg %ax,%ax
  0x0000000002a73154: nopl   0x0(%rax,%rax,1)
  0x0000000002a7315c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002a73160: sub    $0x18,%rsp
  0x0000000002a73167: mov    %rbp,0x10(%rsp)    ;*synchronization entry
                                                ; - org.gallant.jitwatch.Summary::add@-1 (line 12)

  0x0000000002a7316c: mov    0x10(%rdx),%r10    ;*putfield summary
                                                ; - org.gallant.jitwatch.Summary::add@12 (line 13)

  0x0000000002a73170: mov    %r8d,%eax
  0x0000000002a73173: add    %r9d,%eax          ;*iadd
                                                ; - org.gallant.jitwatch.Summary::add@2 (line 12)

  0x0000000002a73176: movslq %eax,%r11
  0x0000000002a73179: add    %r10,%r11
  0x0000000002a7317c: mov    %r11,0x10(%rdx)
  0x0000000002a73180: lock addl $0x0,(%rsp)     ;*putfield summary
                                                ; - org.gallant.jitwatch.Summary::add@12 (line 13)

  0x0000000002a73185: add    $0x10,%rsp
  0x0000000002a73189: pop    %rbp
  0x0000000002a7318a: test   %eax,-0x2883190(%rip)        # 0x00000000001f0000
                                                ;   {poll_return}
  0x0000000002a73190: retq   
  0x0000000002a73191: hlt    
  0x0000000002a73192: hlt    
  0x0000000002a73193: hlt    
  0x0000000002a73194: hlt    
  0x0000000002a73195: hlt    
  0x0000000002a73196: hlt    
  0x0000000002a73197: hlt    
  0x0000000002a73198: hlt    
  0x0000000002a73199: hlt    
  0x0000000002a7319a: hlt    
  0x0000000002a7319b: hlt    
  0x0000000002a7319c: hlt    
  0x0000000002a7319d: hlt    
  0x0000000002a7319e: hlt    
  0x0000000002a7319f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002a731a0: jmpq   0x00000000029cf4a0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000002a731a5: callq  0x0000000002a731aa
  0x0000000002a731aa: subq   $0x5,(%rsp)
  0x0000000002a731af: jmpq   0x00000000029a7600  ;   {runtime_call}
  0x0000000002a731b4: hlt    
  0x0000000002a731b5: hlt    
  0x0000000002a731b6: hlt    
  0x0000000002a731b7: hlt    
<nmethod compile_id='33' compiler='C2' level='4' entry='0x0000000002a73140' size='568' address='0x0000000002a73010' relocation_offset='288' insts_offset='304' stub_offset='400' scopes_data_offset='440' scopes_pcs_offset='464' dependencies_offset='560' oops_offset='424' method='org/gallant/jitwatch/Summary add (II)I' bytes='17' count='60416' iicount='60416' stamp='0.605'/>
<make_not_entrant thread='1572' compile_id='32' compiler='C1' level='3' stamp='0.605'/>
<writer thread='1672'/>
<task_queued compile_id='34' compile_kind='osr' method='org/gallant/jitwatch/Summary main ([Ljava/lang/String;)V' bytes='85' count='1' backedge_count='60416' iicount='1' osr_bci='12' level='3' stamp='0.607' comment='tiered' hot_count='60416'/>
<writer thread='14520'/>
Decoding compiled method 0x0000000002a7c2d0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000016e32d48} &apos;main&apos; &apos;([Ljava/lang/String;)V&apos; in &apos;org/gallant/jitwatch/Summary&apos;
  0x0000000002a7c520: mov    %eax,-0x6000(%rsp)
  0x0000000002a7c527: push   %rbp
  0x0000000002a7c528: sub    $0xb0,%rsp
  0x0000000002a7c52f: movabs $0x16e33158,%rsi   ;   {metadata(method data for {method} {0x0000000016e32d48} &apos;main&apos; &apos;([Ljava/lang/String;)V&apos; in &apos;org/gallant/jitwatch/Summary&apos;)}
  0x0000000002a7c539: mov    0xdc(%rsi),%edi
  0x0000000002a7c53f: add    $0x8,%edi
  0x0000000002a7c542: mov    %edi,0xdc(%rsi)
  0x0000000002a7c548: movabs $0x16e32d40,%rsi   ;   {metadata({method} {0x0000000016e32d48} &apos;main&apos; &apos;([Ljava/lang/String;)V&apos; in &apos;org/gallant/jitwatch/Summary&apos;)}
  0x0000000002a7c552: and    $0x1ff8,%edi
  0x0000000002a7c558: cmp    $0x0,%edi
  0x0000000002a7c55b: je     0x0000000002a7cde8
  0x0000000002a7c561: movabs $0x100060828,%rdx  ;   {metadata(&apos;org/gallant/jitwatch/Summary&apos;)}
  0x0000000002a7c56b: mov    0x60(%r15),%rax
  0x0000000002a7c56f: lea    0x18(%rax),%rdi
  0x0000000002a7c573: cmp    0x70(%r15),%rdi
  0x0000000002a7c577: ja     0x0000000002a7cdff
  0x0000000002a7c57d: mov    %rdi,0x60(%r15)
  0x0000000002a7c581: mov    0xa8(%rdx),%rcx
  0x0000000002a7c588: mov    %rcx,(%rax)
  0x0000000002a7c58b: mov    %rdx,%rcx
  0x0000000002a7c58e: shr    $0x3,%rcx
  0x0000000002a7c592: mov    %ecx,0x8(%rax)
  0x0000000002a7c595: xor    %rcx,%rcx
  0x0000000002a7c598: mov    %ecx,0xc(%rax)
  0x0000000002a7c59b: xor    %rcx,%rcx
  0x0000000002a7c59e: mov    %rcx,0x10(%rax)    ;*new  ; - org.gallant.jitwatch.Summary::main@0 (line 18)

  0x0000000002a7c5a2: mov    %rax,%rdx
  0x0000000002a7c5a5: movabs $0x16e33158,%rcx   ;   {metadata(method data for {method} {0x0000000016e32d48} &apos;main&apos; &apos;([Ljava/lang/String;)V&apos; in &apos;org/gallant/jitwatch/Summary&apos;)}
  0x0000000002a7c5af: addq   $0x1,0x108(%rcx)
  0x0000000002a7c5b7: movabs $0x16e334b8,%rdx   ;   {metadata(method data for {method} {0x0000000016e32b50} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;org/gallant/jitwatch/Summary&apos;)}
  0x0000000002a7c5c1: mov    0xdc(%rdx),%ecx
  0x0000000002a7c5c7: add    $0x8,%ecx
  0x0000000002a7c5ca: mov    %ecx,0xdc(%rdx)
  0x0000000002a7c5d0: movabs $0x16e32b48,%rdx   ;   {metadata({method} {0x0000000016e32b50} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;org/gallant/jitwatch/Summary&apos;)}
  0x0000000002a7c5da: and    $0x7ffff8,%ecx
  0x0000000002a7c5e0: cmp    $0x0,%ecx
  0x0000000002a7c5e3: je     0x0000000002a7ce0c
  0x0000000002a7c5e9: mov    %rax,%rdx
  0x0000000002a7c5ec: movabs $0x16e334b8,%rcx   ;   {metadata(method data for {method} {0x0000000016e32b50} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;org/gallant/jitwatch/Summary&apos;)}
  0x0000000002a7c5f6: addq   $0x1,0x108(%rcx)
  0x0000000002a7c5fe: movabs $0x16b633b0,%rdx   ;   {metadata(method data for {method} {0x0000000016a30488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002a7c608: mov    0xdc(%rdx),%ecx
  0x0000000002a7c60e: add    $0x8,%ecx
  0x0000000002a7c611: mov    %ecx,0xdc(%rdx)
  0x0000000002a7c617: movabs $0x16a30480,%rdx   ;   {metadata({method} {0x0000000016a30488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002a7c621: and    $0x7ffff8,%ecx
  0x0000000002a7c627: cmp    $0x0,%ecx
  0x0000000002a7c62a: je     0x0000000002a7ce23
  0x0000000002a7c630: mov    $0x0,%esi
  0x0000000002a7c635: mov    $0x0,%edi
  0x0000000002a7c63a: jmpq   0x0000000002a7c70c  ;*iload_3
                                                ; - org.gallant.jitwatch.Summary::main@12 (line 20)

  0x0000000002a7c63f: nop
  0x0000000002a7c640: cmp    (%rax),%rax        ;*invokevirtual add
                                                ; - org.gallant.jitwatch.Summary::main@21 (line 21)
                                                ; implicit exception: dispatches to 0x0000000002a7ce3a
  0x0000000002a7c643: mov    %rax,%rdx
  0x0000000002a7c646: movabs $0x16e33158,%rbx   ;   {metadata(method data for {method} {0x0000000016e32d48} &apos;main&apos; &apos;([Ljava/lang/String;)V&apos; in &apos;org/gallant/jitwatch/Summary&apos;)}
  0x0000000002a7c650: movabs $0x100060828,%r10  ;   {metadata(&apos;org/gallant/jitwatch/Summary&apos;)}
  0x0000000002a7c65a: mov    %r10,0x140(%rbx)
  0x0000000002a7c661: addq   $0x1,0x148(%rbx)
  0x0000000002a7c669: movabs $0x16e33028,%rdx   ;   {metadata(method data for {method} {0x0000000016e32c28} &apos;add&apos; &apos;(II)I&apos; in &apos;org/gallant/jitwatch/Summary&apos;)}
  0x0000000002a7c673: mov    0xdc(%rdx),%ebx
  0x0000000002a7c679: add    $0x8,%ebx
  0x0000000002a7c67c: mov    %ebx,0xdc(%rdx)
  0x0000000002a7c682: movabs $0x16e32c20,%rdx   ;   {metadata({method} {0x0000000016e32c28} &apos;add&apos; &apos;(II)I&apos; in &apos;org/gallant/jitwatch/Summary&apos;)}
  0x0000000002a7c68c: and    $0x7ffff8,%ebx
  0x0000000002a7c692: cmp    $0x0,%ebx
  0x0000000002a7c695: je     0x0000000002a7ce3f
  0x0000000002a7c69b: inc    %edi
  0x0000000002a7c69d: vmovsd 0x10(%rax),%xmm0
  0x0000000002a7c6a2: vmovq  %xmm0,%rdx         ;*getfield summary
                                                ; - org.gallant.jitwatch.Summary::add@6 (line 13)
                                                ; - org.gallant.jitwatch.Summary::main@21 (line 21)

  0x0000000002a7c6a7: movslq %edi,%rbx
  0x0000000002a7c6aa: add    %rbx,%rdx
  0x0000000002a7c6ad: mov    %rdx,0x68(%rsp)
  0x0000000002a7c6b2: vmovsd 0x68(%rsp),%xmm0
  0x0000000002a7c6b8: vmovsd %xmm0,0x10(%rax)
  0x0000000002a7c6bd: lock addl $0x0,(%rsp)     ;*putfield summary
                                                ; - org.gallant.jitwatch.Summary::add@12 (line 13)
                                                ; - org.gallant.jitwatch.Summary::main@21 (line 21)

  0x0000000002a7c6c2: inc    %esi
  0x0000000002a7c6c4: movabs $0x16e33158,%rdx   ;   {metadata(method data for {method} {0x0000000016e32d48} &apos;main&apos; &apos;([Ljava/lang/String;)V&apos; in &apos;org/gallant/jitwatch/Summary&apos;)}
  0x0000000002a7c6ce: mov    0xe0(%rdx),%ebx
  0x0000000002a7c6d4: add    $0x8,%ebx
  0x0000000002a7c6d7: mov    %ebx,0xe0(%rdx)
  0x0000000002a7c6dd: movabs $0x16e32d40,%rdx   ;   {metadata({method} {0x0000000016e32d48} &apos;main&apos; &apos;([Ljava/lang/String;)V&apos; in &apos;org/gallant/jitwatch/Summary&apos;)}
  0x0000000002a7c6e7: and    $0xfff8,%ebx
  0x0000000002a7c6ed: cmp    $0x0,%ebx
  0x0000000002a7c6f0: je     0x0000000002a7ce56  ; OopMap{rax=Oop off=470}
                                                ;*goto
                                                ; - org.gallant.jitwatch.Summary::main@28 (line 20)

  0x0000000002a7c6f6: test   %eax,-0x288c5fc(%rip)        # 0x00000000001f0100
                                                ;   {poll}
  0x0000000002a7c6fc: movabs $0x16e33158,%rdx   ;   {metadata(method data for {method} {0x0000000016e32d48} &apos;main&apos; &apos;([Ljava/lang/String;)V&apos; in &apos;org/gallant/jitwatch/Summary&apos;)}
  0x0000000002a7c706: incl   0x168(%rdx)        ;*goto
                                                ; - org.gallant.jitwatch.Summary::main@28 (line 20)

  0x0000000002a7c70c: cmp    $0xf4240,%esi
  0x0000000002a7c712: movabs $0x16e33158,%rdx   ;   {metadata(method data for {method} {0x0000000016e32d48} &apos;main&apos; &apos;([Ljava/lang/String;)V&apos; in &apos;org/gallant/jitwatch/Summary&apos;)}
  0x0000000002a7c71c: movabs $0x118,%rbx
  0x0000000002a7c726: jge    0x0000000002a7c736
  0x0000000002a7c72c: movabs $0x128,%rbx
  0x0000000002a7c736: mov    (%rdx,%rbx,1),%rcx
  0x0000000002a7c73a: lea    0x1(%rcx),%rcx
  0x0000000002a7c73e: mov    %rcx,(%rdx,%rbx,1)
  0x0000000002a7c742: jl     0x0000000002a7c640  ;*if_icmpge
                                                ; - org.gallant.jitwatch.Summary::main@15 (line 20)

  0x0000000002a7c748: mov    %edi,0x78(%rsp)
  0x0000000002a7c74c: mov    %rax,0x88(%rsp)
  0x0000000002a7c754: nopl   0x0(%rax)
  0x0000000002a7c758: jmpq   0x0000000002a7ceca  ;   {no_reloc}
  0x0000000002a7c75d: add    %al,(%rax)
  0x0000000002a7c75f: add    %al,(%rax)
  0x0000000002a7c761: add    %ah,0xf(%rsi)
  0x0000000002a7c764: (bad)  
  0x0000000002a7c765: add    %r8b,(%rax)
  0x0000000002a7c768: jmpq   0x0000000002a7cee4  ; implicit exception: dispatches to 0x0000000002a7ced4
  0x0000000002a7c76d: nop                       ;*getstatic out
                                                ; - org.gallant.jitwatch.Summary::main@31 (line 23)

  0x0000000002a7c76e: xchg   %ax,%ax
  0x0000000002a7c770: jmpq   0x0000000002a7cefd  ;   {no_reloc}
  0x0000000002a7c775: add    %al,(%rax)
  0x0000000002a7c777: add    %al,(%rax)
  0x0000000002a7c779: add    %ch,%cl
  0x0000000002a7c77b: mov    %al,(%rdi)
  0x0000000002a7c77d: add    %al,(%rax)         ;*new  ; - org.gallant.jitwatch.Summary::main@34 (line 23)

  0x0000000002a7c77f: mov    %rax,%rdx
  0x0000000002a7c782: movabs $0x16e33158,%rcx   ;   {metadata(method data for {method} {0x0000000016e32d48} &apos;main&apos; &apos;([Ljava/lang/String;)V&apos; in &apos;org/gallant/jitwatch/Summary&apos;)}
  0x0000000002a7c78c: addq   $0x1,0x180(%rcx)
  0x0000000002a7c794: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - org.gallant.jitwatch.Summary::main@38 (line 23)

  0x0000000002a7c797: mov    %rsi,0x80(%rsp)
  0x0000000002a7c79f: mov    %rax,0x70(%rsp)
  0x0000000002a7c7a4: nop
  0x0000000002a7c7a5: nop
  0x0000000002a7c7a6: nop
  0x0000000002a7c7a7: callq  0x00000000029a61a0  ; OopMap{[112]=Oop [136]=Oop [128]=Oop off=652}
                                                ;*invokespecial &lt;init&gt;
                                                ; - org.gallant.jitwatch.Summary::main@38 (line 23)
                                                ;   {optimized virtual_call}
  0x0000000002a7c7ac: mov    0x70(%rsp),%rax
  0x0000000002a7c7b1: movabs $0x16e33158,%r8    ;   {metadata(method data for {method} {0x0000000016e32d48} &apos;main&apos; &apos;([Ljava/lang/String;)V&apos; in &apos;org/gallant/jitwatch/Summary&apos;)}
  0x0000000002a7c7bb: mov    0x8(%rax),%eax
  0x0000000002a7c7be: shl    $0x3,%rax
  0x0000000002a7c7c2: cmp    0x198(%r8),%rax
  0x0000000002a7c7c9: jne    0x0000000002a7c7d8
  0x0000000002a7c7cb: addq   $0x1,0x1a0(%r8)
  0x0000000002a7c7d3: jmpq   0x0000000002a7c83e
  0x0000000002a7c7d8: cmp    0x1a8(%r8),%rax
  0x0000000002a7c7df: jne    0x0000000002a7c7ee
  0x0000000002a7c7e1: addq   $0x1,0x1b0(%r8)
  0x0000000002a7c7e9: jmpq   0x0000000002a7c83e
  0x0000000002a7c7ee: cmpq   $0x0,0x198(%r8)
  0x0000000002a7c7f9: jne    0x0000000002a7c812
  0x0000000002a7c7fb: mov    %rax,0x198(%r8)
  0x0000000002a7c802: movq   $0x1,0x1a0(%r8)
  0x0000000002a7c80d: jmpq   0x0000000002a7c83e
  0x0000000002a7c812: cmpq   $0x0,0x1a8(%r8)
  0x0000000002a7c81d: jne    0x0000000002a7c836
  0x0000000002a7c81f: mov    %rax,0x1a8(%r8)
  0x0000000002a7c826: movq   $0x1,0x1b0(%r8)
  0x0000000002a7c831: jmpq   0x0000000002a7c83e
  0x0000000002a7c836: addq   $0x1,0x190(%r8)
  0x0000000002a7c83e: movabs $0xd66b4d80,%r8    ;   {oop(&quot;Summary:&quot;)}
  0x0000000002a7c848: mov    0x70(%rsp),%rdx    ;*invokevirtual append
                                                ; - org.gallant.jitwatch.Summary::main@43 (line 23)

  0x0000000002a7c84d: movabs $0xffffffffffffffff,%rax
  0x0000000002a7c857: callq  0x00000000029a63e0  ; OopMap{[136]=Oop [128]=Oop off=828}
                                                ;*invokevirtual append
                                                ; - org.gallant.jitwatch.Summary::main@43 (line 23)
                                                ;   {virtual_call}
  0x0000000002a7c85c: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x0000000002a7cf14
  0x0000000002a7c85f: mov    %rax,%r8
  0x0000000002a7c862: movabs $0x16e33158,%rdx   ;   {metadata(method data for {method} {0x0000000016e32d48} &apos;main&apos; &apos;([Ljava/lang/String;)V&apos; in &apos;org/gallant/jitwatch/Summary&apos;)}
  0x0000000002a7c86c: mov    0x8(%r8),%r8d
  0x0000000002a7c870: shl    $0x3,%r8
  0x0000000002a7c874: cmp    0x1c8(%rdx),%r8
  0x0000000002a7c87b: jne    0x0000000002a7c88a
  0x0000000002a7c87d: addq   $0x1,0x1d0(%rdx)
  0x0000000002a7c885: jmpq   0x0000000002a7c8f0
  0x0000000002a7c88a: cmp    0x1d8(%rdx),%r8
  0x0000000002a7c891: jne    0x0000000002a7c8a0
  0x0000000002a7c893: addq   $0x1,0x1e0(%rdx)
  0x0000000002a7c89b: jmpq   0x0000000002a7c8f0
  0x0000000002a7c8a0: cmpq   $0x0,0x1c8(%rdx)
  0x0000000002a7c8ab: jne    0x0000000002a7c8c4
  0x0000000002a7c8ad: mov    %r8,0x1c8(%rdx)
  0x0000000002a7c8b4: movq   $0x1,0x1d0(%rdx)
  0x0000000002a7c8bf: jmpq   0x0000000002a7c8f0
  0x0000000002a7c8c4: cmpq   $0x0,0x1d8(%rdx)
  0x0000000002a7c8cf: jne    0x0000000002a7c8e8
  0x0000000002a7c8d1: mov    %r8,0x1d8(%rdx)
  0x0000000002a7c8d8: movq   $0x1,0x1e0(%rdx)
  0x0000000002a7c8e3: jmpq   0x0000000002a7c8f0
  0x0000000002a7c8e8: addq   $0x1,0x1c0(%rdx)
  0x0000000002a7c8f0: mov    0x78(%rsp),%r8d
  0x0000000002a7c8f5: mov    %rax,%rdx          ;*invokevirtual append
                                                ; - org.gallant.jitwatch.Summary::main@47 (line 23)

  0x0000000002a7c8f8: nop
  0x0000000002a7c8f9: nop
  0x0000000002a7c8fa: nop
  0x0000000002a7c8fb: nop
  0x0000000002a7c8fc: nop
  0x0000000002a7c8fd: movabs $0xffffffffffffffff,%rax
  0x0000000002a7c907: callq  0x00000000029a63e0  ; OopMap{[136]=Oop [128]=Oop off=1004}
                                                ;*invokevirtual append
                                                ; - org.gallant.jitwatch.Summary::main@47 (line 23)
                                                ;   {virtual_call}
  0x0000000002a7c90c: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x0000000002a7cf19
  0x0000000002a7c90f: mov    %rax,%rdx
  0x0000000002a7c912: movabs $0x16e33158,%rsi   ;   {metadata(method data for {method} {0x0000000016e32d48} &apos;main&apos; &apos;([Ljava/lang/String;)V&apos; in &apos;org/gallant/jitwatch/Summary&apos;)}
  0x0000000002a7c91c: mov    0x8(%rdx),%edx
  0x0000000002a7c91f: shl    $0x3,%rdx
  0x0000000002a7c923: cmp    0x1f8(%rsi),%rdx
  0x0000000002a7c92a: jne    0x0000000002a7c939
  0x0000000002a7c92c: addq   $0x1,0x200(%rsi)
  0x0000000002a7c934: jmpq   0x0000000002a7c99f
  0x0000000002a7c939: cmp    0x208(%rsi),%rdx
  0x0000000002a7c940: jne    0x0000000002a7c94f
  0x0000000002a7c942: addq   $0x1,0x210(%rsi)
  0x0000000002a7c94a: jmpq   0x0000000002a7c99f
  0x0000000002a7c94f: cmpq   $0x0,0x1f8(%rsi)
  0x0000000002a7c95a: jne    0x0000000002a7c973
  0x0000000002a7c95c: mov    %rdx,0x1f8(%rsi)
  0x0000000002a7c963: movq   $0x1,0x200(%rsi)
  0x0000000002a7c96e: jmpq   0x0000000002a7c99f
  0x0000000002a7c973: cmpq   $0x0,0x208(%rsi)
  0x0000000002a7c97e: jne    0x0000000002a7c997
  0x0000000002a7c980: mov    %rdx,0x208(%rsi)
  0x0000000002a7c987: movq   $0x1,0x210(%rsi)
  0x0000000002a7c992: jmpq   0x0000000002a7c99f
  0x0000000002a7c997: addq   $0x1,0x1f0(%rsi)
  0x0000000002a7c99f: mov    %rax,%rdx          ;*invokevirtual toString
                                                ; - org.gallant.jitwatch.Summary::main@50 (line 23)

  0x0000000002a7c9a2: nop
  0x0000000002a7c9a3: nop
  0x0000000002a7c9a4: nop
  0x0000000002a7c9a5: movabs $0xffffffffffffffff,%rax
  0x0000000002a7c9af: callq  0x00000000029a63e0  ; OopMap{[136]=Oop [128]=Oop off=1172}
                                                ;*invokevirtual toString
                                                ; - org.gallant.jitwatch.Summary::main@50 (line 23)
                                                ;   {virtual_call}
  0x0000000002a7c9b4: mov    0x80(%rsp),%rsi
  0x0000000002a7c9bc: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x0000000002a7cf1e
  0x0000000002a7c9bf: mov    %rsi,%r8
  0x0000000002a7c9c2: movabs $0x16e33158,%rdx   ;   {metadata(method data for {method} {0x0000000016e32d48} &apos;main&apos; &apos;([Ljava/lang/String;)V&apos; in &apos;org/gallant/jitwatch/Summary&apos;)}
  0x0000000002a7c9cc: mov    0x8(%r8),%r8d
  0x0000000002a7c9d0: shl    $0x3,%r8
  0x0000000002a7c9d4: cmp    0x228(%rdx),%r8
  0x0000000002a7c9db: jne    0x0000000002a7c9ea
  0x0000000002a7c9dd: addq   $0x1,0x230(%rdx)
  0x0000000002a7c9e5: jmpq   0x0000000002a7ca50
  0x0000000002a7c9ea: cmp    0x238(%rdx),%r8
  0x0000000002a7c9f1: jne    0x0000000002a7ca00
  0x0000000002a7c9f3: addq   $0x1,0x240(%rdx)
  0x0000000002a7c9fb: jmpq   0x0000000002a7ca50
  0x0000000002a7ca00: cmpq   $0x0,0x228(%rdx)
  0x0000000002a7ca0b: jne    0x0000000002a7ca24
  0x0000000002a7ca0d: mov    %r8,0x228(%rdx)
  0x0000000002a7ca14: movq   $0x1,0x230(%rdx)
  0x0000000002a7ca1f: jmpq   0x0000000002a7ca50
  0x0000000002a7ca24: cmpq   $0x0,0x238(%rdx)
  0x0000000002a7ca2f: jne    0x0000000002a7ca48
  0x0000000002a7ca31: mov    %r8,0x238(%rdx)
  0x0000000002a7ca38: movq   $0x1,0x240(%rdx)
  0x0000000002a7ca43: jmpq   0x0000000002a7ca50
  0x0000000002a7ca48: addq   $0x1,0x220(%rdx)
  0x0000000002a7ca50: mov    %rax,%r8
  0x0000000002a7ca53: mov    %rsi,%rdx          ;*invokevirtual println
                                                ; - org.gallant.jitwatch.Summary::main@53 (line 23)

  0x0000000002a7ca56: nop
  0x0000000002a7ca57: nop
  0x0000000002a7ca58: nop
  0x0000000002a7ca59: nop
  0x0000000002a7ca5a: nop
  0x0000000002a7ca5b: nop
  0x0000000002a7ca5c: nop
  0x0000000002a7ca5d: movabs $0xffffffffffffffff,%rax
  0x0000000002a7ca67: callq  0x00000000029a63e0  ; OopMap{[136]=Oop off=1356}
                                                ;*invokevirtual println
                                                ; - org.gallant.jitwatch.Summary::main@53 (line 23)
                                                ;   {virtual_call}
  0x0000000002a7ca6c: nopl   0x0(%rax)
  0x0000000002a7ca70: jmpq   0x0000000002a7cf80  ;   {no_reloc}
  0x0000000002a7ca75: add    %al,(%rax)
  0x0000000002a7ca77: add    %al,(%rax)
  0x0000000002a7ca79: add    %ah,0xf(%rsi)
  0x0000000002a7ca7c: (bad)  
  0x0000000002a7ca7d: add    %r8b,(%rax)
  0x0000000002a7ca80: jmpq   0x0000000002a7cf9a  ; implicit exception: dispatches to 0x0000000002a7cf8a
  0x0000000002a7ca85: nop                       ;*getstatic out
                                                ; - org.gallant.jitwatch.Summary::main@56 (line 24)

  0x0000000002a7ca86: xchg   %ax,%ax
  0x0000000002a7ca88: jmpq   0x0000000002a7cfb3  ;   {no_reloc}
  0x0000000002a7ca8d: add    %al,(%rax)
  0x0000000002a7ca8f: add    %al,(%rax)
  0x0000000002a7ca91: add    %ch,%cl
  0x0000000002a7ca93: es add $0x8b480000,%eax   ;*new  ; - org.gallant.jitwatch.Summary::main@59 (line 24)

  0x0000000002a7ca99: rorb   -0x41(%rax)        ;   {metadata(method data for {method} {0x0000000016e32d48} &apos;main&apos; &apos;([Ljava/lang/String;)V&apos; in &apos;org/gallant/jitwatch/Summary&apos;)}
  0x0000000002a7ca9c: pop    %rax
  0x0000000002a7ca9d: xor    %esp,%ebx
  0x0000000002a7ca9f: (bad)  
  0x0000000002a7caa0: add    %al,(%rax)
  0x0000000002a7caa2: add    %al,(%rax)
  0x0000000002a7caa4: addq   $0x1,0x250(%rdi)
  0x0000000002a7caac: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - org.gallant.jitwatch.Summary::main@63 (line 24)

  0x0000000002a7caaf: mov    %rsi,0x98(%rsp)
  0x0000000002a7cab7: mov    %rax,0x90(%rsp)
  0x0000000002a7cabf: callq  0x00000000029a61a0  ; OopMap{[136]=Oop [144]=Oop [152]=Oop off=1444}
                                                ;*invokespecial &lt;init&gt;
                                                ; - org.gallant.jitwatch.Summary::main@63 (line 24)
                                                ;   {optimized virtual_call}
  0x0000000002a7cac4: mov    0x90(%rsp),%rax
  0x0000000002a7cacc: movabs $0x16e33158,%r8    ;   {metadata(method data for {method} {0x0000000016e32d48} &apos;main&apos; &apos;([Ljava/lang/String;)V&apos; in &apos;org/gallant/jitwatch/Summary&apos;)}
  0x0000000002a7cad6: mov    0x8(%rax),%eax
  0x0000000002a7cad9: shl    $0x3,%rax
  0x0000000002a7cadd: cmp    0x268(%r8),%rax
  0x0000000002a7cae4: jne    0x0000000002a7caf3
  0x0000000002a7cae6: addq   $0x1,0x270(%r8)
  0x0000000002a7caee: jmpq   0x0000000002a7cb59
  0x0000000002a7caf3: cmp    0x278(%r8),%rax
  0x0000000002a7cafa: jne    0x0000000002a7cb09
  0x0000000002a7cafc: addq   $0x1,0x280(%r8)
  0x0000000002a7cb04: jmpq   0x0000000002a7cb59
  0x0000000002a7cb09: cmpq   $0x0,0x268(%r8)
  0x0000000002a7cb14: jne    0x0000000002a7cb2d
  0x0000000002a7cb16: mov    %rax,0x268(%r8)
  0x0000000002a7cb1d: movq   $0x1,0x270(%r8)
  0x0000000002a7cb28: jmpq   0x0000000002a7cb59
  0x0000000002a7cb2d: cmpq   $0x0,0x278(%r8)
  0x0000000002a7cb38: jne    0x0000000002a7cb51
  0x0000000002a7cb3a: mov    %rax,0x278(%r8)
  0x0000000002a7cb41: movq   $0x1,0x280(%r8)
  0x0000000002a7cb4c: jmpq   0x0000000002a7cb59
  0x0000000002a7cb51: addq   $0x1,0x260(%r8)
  0x0000000002a7cb59: movabs $0xd66b4db8,%r8    ;   {oop(&quot;Summary.sum:&quot;)}
  0x0000000002a7cb63: mov    0x90(%rsp),%rdx    ;*invokevirtual append
                                                ; - org.gallant.jitwatch.Summary::main@68 (line 24)

  0x0000000002a7cb6b: nop
  0x0000000002a7cb6c: nop
  0x0000000002a7cb6d: movabs $0xffffffffffffffff,%rax
  0x0000000002a7cb77: callq  0x00000000029a63e0  ; OopMap{[136]=Oop [152]=Oop off=1628}
                                                ;*invokevirtual append
                                                ; - org.gallant.jitwatch.Summary::main@68 (line 24)
                                                ;   {virtual_call}
  0x0000000002a7cb7c: mov    0x88(%rsp),%r8
  0x0000000002a7cb84: vmovsd 0x10(%r8),%xmm0    ; implicit exception: dispatches to 0x0000000002a7cfca
  0x0000000002a7cb8a: vmovq  %xmm0,%r8          ;*getfield summary
                                                ; - org.gallant.jitwatch.Summary::main@72 (line 24)

  0x0000000002a7cb8f: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x0000000002a7cfcf
  0x0000000002a7cb92: mov    %rax,%rdx
  0x0000000002a7cb95: movabs $0x16e33158,%rsi   ;   {metadata(method data for {method} {0x0000000016e32d48} &apos;main&apos; &apos;([Ljava/lang/String;)V&apos; in &apos;org/gallant/jitwatch/Summary&apos;)}
  0x0000000002a7cb9f: mov    0x8(%rdx),%edx
  0x0000000002a7cba2: shl    $0x3,%rdx
  0x0000000002a7cba6: cmp    0x298(%rsi),%rdx
  0x0000000002a7cbad: jne    0x0000000002a7cbbc
  0x0000000002a7cbaf: addq   $0x1,0x2a0(%rsi)
  0x0000000002a7cbb7: jmpq   0x0000000002a7cc22
  0x0000000002a7cbbc: cmp    0x2a8(%rsi),%rdx
  0x0000000002a7cbc3: jne    0x0000000002a7cbd2
  0x0000000002a7cbc5: addq   $0x1,0x2b0(%rsi)
  0x0000000002a7cbcd: jmpq   0x0000000002a7cc22
  0x0000000002a7cbd2: cmpq   $0x0,0x298(%rsi)
  0x0000000002a7cbdd: jne    0x0000000002a7cbf6
  0x0000000002a7cbdf: mov    %rdx,0x298(%rsi)
  0x0000000002a7cbe6: movq   $0x1,0x2a0(%rsi)
  0x0000000002a7cbf1: jmpq   0x0000000002a7cc22
  0x0000000002a7cbf6: cmpq   $0x0,0x2a8(%rsi)
  0x0000000002a7cc01: jne    0x0000000002a7cc1a
  0x0000000002a7cc03: mov    %rdx,0x2a8(%rsi)
  0x0000000002a7cc0a: movq   $0x1,0x2b0(%rsi)
  0x0000000002a7cc15: jmpq   0x0000000002a7cc22
  0x0000000002a7cc1a: addq   $0x1,0x290(%rsi)
  0x0000000002a7cc22: mov    %rax,%rdx          ;*invokevirtual append
                                                ; - org.gallant.jitwatch.Summary::main@75 (line 24)

  0x0000000002a7cc25: movabs $0xffffffffffffffff,%rax
  0x0000000002a7cc2f: callq  0x00000000029a63e0  ; OopMap{[152]=Oop off=1812}
                                                ;*invokevirtual append
                                                ; - org.gallant.jitwatch.Summary::main@75 (line 24)
                                                ;   {virtual_call}
  0x0000000002a7cc34: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x0000000002a7cfd4
  0x0000000002a7cc37: mov    %rax,%rdx
  0x0000000002a7cc3a: movabs $0x16e33158,%rsi   ;   {metadata(method data for {method} {0x0000000016e32d48} &apos;main&apos; &apos;([Ljava/lang/String;)V&apos; in &apos;org/gallant/jitwatch/Summary&apos;)}
  0x0000000002a7cc44: mov    0x8(%rdx),%edx
  0x0000000002a7cc47: shl    $0x3,%rdx
  0x0000000002a7cc4b: cmp    0x2c8(%rsi),%rdx
  0x0000000002a7cc52: jne    0x0000000002a7cc61
  0x0000000002a7cc54: addq   $0x1,0x2d0(%rsi)
  0x0000000002a7cc5c: jmpq   0x0000000002a7ccc7
  0x0000000002a7cc61: cmp    0x2d8(%rsi),%rdx
  0x0000000002a7cc68: jne    0x0000000002a7cc77
  0x0000000002a7cc6a: addq   $0x1,0x2e0(%rsi)
  0x0000000002a7cc72: jmpq   0x0000000002a7ccc7
  0x0000000002a7cc77: cmpq   $0x0,0x2c8(%rsi)
  0x0000000002a7cc82: jne    0x0000000002a7cc9b
  0x0000000002a7cc84: mov    %rdx,0x2c8(%rsi)
  0x0000000002a7cc8b: movq   $0x1,0x2d0(%rsi)
  0x0000000002a7cc96: jmpq   0x0000000002a7ccc7
  0x0000000002a7cc9b: cmpq   $0x0,0x2d8(%rsi)
  0x0000000002a7cca6: jne    0x0000000002a7ccbf
  0x0000000002a7cca8: mov    %rdx,0x2d8(%rsi)
  0x0000000002a7ccaf: movq   $0x1,0x2e0(%rsi)
  0x0000000002a7ccba: jmpq   0x0000000002a7ccc7
  0x0000000002a7ccbf: addq   $0x1,0x2c0(%rsi)
  0x0000000002a7ccc7: mov    %rax,%rdx          ;*invokevirtual toString
                                                ; - org.gallant.jitwatch.Summary::main@78 (line 24)

  0x0000000002a7ccca: nop
  0x0000000002a7cccb: nop
  0x0000000002a7cccc: nop
  0x0000000002a7cccd: movabs $0xffffffffffffffff,%rax
  0x0000000002a7ccd7: callq  0x00000000029a63e0  ; OopMap{[152]=Oop off=1980}
                                                ;*invokevirtual toString
                                                ; - org.gallant.jitwatch.Summary::main@78 (line 24)
                                                ;   {virtual_call}
  0x0000000002a7ccdc: mov    0x98(%rsp),%rsi
  0x0000000002a7cce4: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x0000000002a7cfd9
  0x0000000002a7cce7: mov    %rsi,%r8
  0x0000000002a7ccea: movabs $0x16e33158,%rdx   ;   {metadata(method data for {method} {0x0000000016e32d48} &apos;main&apos; &apos;([Ljava/lang/String;)V&apos; in &apos;org/gallant/jitwatch/Summary&apos;)}
  0x0000000002a7ccf4: mov    0x8(%r8),%r8d
  0x0000000002a7ccf8: shl    $0x3,%r8
  0x0000000002a7ccfc: cmp    0x2f8(%rdx),%r8
  0x0000000002a7cd03: jne    0x0000000002a7cd12
  0x0000000002a7cd05: addq   $0x1,0x300(%rdx)
  0x0000000002a7cd0d: jmpq   0x0000000002a7cd78
  0x0000000002a7cd12: cmp    0x308(%rdx),%r8
  0x0000000002a7cd19: jne    0x0000000002a7cd28
  0x0000000002a7cd1b: addq   $0x1,0x310(%rdx)
  0x0000000002a7cd23: jmpq   0x0000000002a7cd78
  0x0000000002a7cd28: cmpq   $0x0,0x2f8(%rdx)
  0x0000000002a7cd33: jne    0x0000000002a7cd4c
  0x0000000002a7cd35: mov    %r8,0x2f8(%rdx)
  0x0000000002a7cd3c: movq   $0x1,0x300(%rdx)
  0x0000000002a7cd47: jmpq   0x0000000002a7cd78
  0x0000000002a7cd4c: cmpq   $0x0,0x308(%rdx)
  0x0000000002a7cd57: jne    0x0000000002a7cd70
  0x0000000002a7cd59: mov    %r8,0x308(%rdx)
  0x0000000002a7cd60: movq   $0x1,0x310(%rdx)
  0x0000000002a7cd6b: jmpq   0x0000000002a7cd78
  0x0000000002a7cd70: addq   $0x1,0x2f0(%rdx)
  0x0000000002a7cd78: mov    %rax,%r8
  0x0000000002a7cd7b: mov    %rsi,%rdx          ;*invokevirtual println
                                                ; - org.gallant.jitwatch.Summary::main@81 (line 24)

  0x0000000002a7cd7e: nop
  0x0000000002a7cd7f: nop
  0x0000000002a7cd80: nop
  0x0000000002a7cd81: nop
  0x0000000002a7cd82: nop
  0x0000000002a7cd83: nop
  0x0000000002a7cd84: nop
  0x0000000002a7cd85: movabs $0xffffffffffffffff,%rax
  0x0000000002a7cd8f: callq  0x00000000029a63e0  ; OopMap{off=2164}
                                                ;*invokevirtual println
                                                ; - org.gallant.jitwatch.Summary::main@81 (line 24)
                                                ;   {virtual_call}
  0x0000000002a7cd94: add    $0xb0,%rsp
  0x0000000002a7cd9b: pop    %rbp
  0x0000000002a7cd9c: test   %eax,-0x288cca2(%rip)        # 0x00000000001f0100
                                                ;   {poll_return}
  0x0000000002a7cda2: retq                      ;*return
                                                ; - org.gallant.jitwatch.Summary::main@84 (line 25)

  0x0000000002a7cda3: mov    %eax,-0x6000(%rsp)
  0x0000000002a7cdaa: push   %rbp
  0x0000000002a7cdab: sub    $0xb0,%rsp
  0x0000000002a7cdb2: mov    0x10(%rdx),%rsi
  0x0000000002a7cdb6: mov    0x8(%rdx),%edi
  0x0000000002a7cdb9: mov    (%rdx),%ebx
  0x0000000002a7cdbb: mov    %rdx,%rcx
  0x0000000002a7cdbe: mov    %rsi,0x60(%rsp)
  0x0000000002a7cdc3: mov    %edi,0x5c(%rsp)
  0x0000000002a7cdc7: mov    %ebx,0x58(%rsp)
  0x0000000002a7cdcb: callq  0x0000000061fcc6d0  ;   {runtime_call}
  0x0000000002a7cdd0: mov    0x58(%rsp),%ebx
  0x0000000002a7cdd4: mov    %rbx,%rsi
  0x0000000002a7cdd7: mov    0x5c(%rsp),%edi
  0x0000000002a7cddb: mov    0x60(%rsp),%rdx
  0x0000000002a7cde0: mov    %rdx,%rax
  0x0000000002a7cde3: jmpq   0x0000000002a7c70c
  0x0000000002a7cde8: mov    %rsi,0x8(%rsp)
  0x0000000002a7cded: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002a7cdf5: callq  0x0000000002a5f7a0  ; OopMap{rdx=Oop off=2266}
                                                ;*synchronization entry
                                                ; - org.gallant.jitwatch.Summary::main@-1 (line 18)
                                                ;   {runtime_call}
  0x0000000002a7cdfa: jmpq   0x0000000002a7c561
  0x0000000002a7cdff: mov    %rdx,%rdx
  0x0000000002a7ce02: callq  0x00000000029d1240  ; OopMap{off=2279}
                                                ;*new  ; - org.gallant.jitwatch.Summary::main@0 (line 18)
                                                ;   {runtime_call}
  0x0000000002a7ce07: jmpq   0x0000000002a7c5a2
  0x0000000002a7ce0c: mov    %rdx,0x8(%rsp)
  0x0000000002a7ce11: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002a7ce19: callq  0x0000000002a5f7a0  ; OopMap{rax=Oop off=2302}
                                                ;*synchronization entry
                                                ; - org.gallant.jitwatch.Summary::&lt;init&gt;@-1 (line 8)
                                                ; - org.gallant.jitwatch.Summary::main@4 (line 18)
                                                ;   {runtime_call}
  0x0000000002a7ce1e: jmpq   0x0000000002a7c5e9
  0x0000000002a7ce23: mov    %rdx,0x8(%rsp)
  0x0000000002a7ce28: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002a7ce30: callq  0x0000000002a5f7a0  ; OopMap{rax=Oop off=2325}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - org.gallant.jitwatch.Summary::&lt;init&gt;@1 (line 8)
                                                ; - org.gallant.jitwatch.Summary::main@4 (line 18)
                                                ;   {runtime_call}
  0x0000000002a7ce35: jmpq   0x0000000002a7c630
  0x0000000002a7ce3a: callq  0x00000000029d1b80  ; OopMap{rax=Oop off=2335}
                                                ;*invokevirtual add
                                                ; - org.gallant.jitwatch.Summary::main@21 (line 21)
                                                ;   {runtime_call}
  0x0000000002a7ce3f: mov    %rdx,0x8(%rsp)
  0x0000000002a7ce44: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002a7ce4c: callq  0x0000000002a5f7a0  ; OopMap{rax=Oop off=2353}
                                                ;*synchronization entry
                                                ; - org.gallant.jitwatch.Summary::add@-1 (line 12)
                                                ; - org.gallant.jitwatch.Summary::main@21 (line 21)
                                                ;   {runtime_call}
  0x0000000002a7ce51: jmpq   0x0000000002a7c69b
  0x0000000002a7ce56: mov    %rdx,0x8(%rsp)
  0x0000000002a7ce5b: movq   $0x1c,(%rsp)
  0x0000000002a7ce63: callq  0x0000000002a5f7a0  ; OopMap{rax=Oop off=2376}
                                                ;*goto
                                                ; - org.gallant.jitwatch.Summary::main@28 (line 20)
                                                ;   {runtime_call}
  0x0000000002a7ce68: jmpq   0x0000000002a7c6f6
  0x0000000002a7ce6d: movabs $0x0,%rdx          ;   {oop(NULL)}
  0x0000000002a7ce77: push   %rax
  0x0000000002a7ce78: push   %rbx
  0x0000000002a7ce79: mov    0x48(%rdx),%rbx
  0x0000000002a7ce7d: push   %rdi
  0x0000000002a7ce7e: push   %rsi
  0x0000000002a7ce7f: push   %rdx
  0x0000000002a7ce80: push   %rcx
  0x0000000002a7ce81: push   %r8
  0x0000000002a7ce83: push   %r9
  0x0000000002a7ce85: push   %r10
  0x0000000002a7ce87: mov    %rsp,%r10
  0x0000000002a7ce8a: and    $0xfffffffffffffff0,%rsp
  0x0000000002a7ce8e: push   %r10
  0x0000000002a7ce90: push   %r11
  0x0000000002a7ce92: mov    $0x7,%ecx
  0x0000000002a7ce97: movabs $0x7ff855285e40,%r10  ;   {runtime_call}
  0x0000000002a7cea1: callq  *%r10
  0x0000000002a7cea4: pop    %r11
  0x0000000002a7cea6: pop    %rsp
  0x0000000002a7cea7: pop    %r10
  0x0000000002a7cea9: pop    %r9
  0x0000000002a7ceab: pop    %r8
  0x0000000002a7cead: pop    %rcx
  0x0000000002a7ceae: pop    %rdx
  0x0000000002a7ceaf: pop    %rsi
  0x0000000002a7ceb0: pop    %rdi
  0x0000000002a7ceb1: cmp    0x118(%rbx),%rax
  0x0000000002a7ceb8: pop    %rbx
  0x0000000002a7ceb9: pop    %rax
  0x0000000002a7ceba: jne    0x0000000002a7ceca
  0x0000000002a7cec0: jmpq   0x0000000002a7c762
  0x0000000002a7cec5: mov    $0xa535d00,%eax
  0x0000000002a7ceca: callq  0x0000000002a60260  ; OopMap{[136]=Oop off=2479}
                                                ;*getstatic out
                                                ; - org.gallant.jitwatch.Summary::main@31 (line 23)
                                                ;   {runtime_call}
  0x0000000002a7cecf: jmpq   0x0000000002a7c758
  0x0000000002a7ced4: callq  0x00000000029d1b80  ; OopMap{[136]=Oop rdx=Oop off=2489}
                                                ;*getstatic out
                                                ; - org.gallant.jitwatch.Summary::main@31 (line 23)
                                                ;   {runtime_call}
  0x0000000002a7ced9: mov    0x0(%rdx),%esi
  0x0000000002a7cedf: mov    $0x6050b00,%eax
  0x0000000002a7cee4: callq  0x0000000002a60ae0  ; OopMap{[136]=Oop rdx=Oop off=2505}
                                                ;*getstatic out
                                                ; - org.gallant.jitwatch.Summary::main@31 (line 23)
                                                ;   {runtime_call}
  0x0000000002a7cee9: jmpq   0x0000000002a7c768
  0x0000000002a7ceee: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002a7cef8: mov    $0xa050f00,%eax
  0x0000000002a7cefd: callq  0x0000000002a606a0  ; OopMap{[136]=Oop rsi=Oop off=2530}
                                                ;*new  ; - org.gallant.jitwatch.Summary::main@34 (line 23)
                                                ;   {runtime_call}
  0x0000000002a7cf02: jmpq   0x0000000002a7c770
  0x0000000002a7cf07: mov    %rdx,%rdx
  0x0000000002a7cf0a: callq  0x00000000029d1660  ; OopMap{rsi=Oop [136]=Oop off=2543}
                                                ;*new  ; - org.gallant.jitwatch.Summary::main@34 (line 23)
                                                ;   {runtime_call}
  0x0000000002a7cf0f: jmpq   0x0000000002a7c77f
  0x0000000002a7cf14: callq  0x00000000029d1b80  ; OopMap{[136]=Oop [128]=Oop rax=Oop off=2553}
                                                ;*invokevirtual append
                                                ; - org.gallant.jitwatch.Summary::main@47 (line 23)
                                                ;   {runtime_call}
  0x0000000002a7cf19: callq  0x00000000029d1b80  ; OopMap{[136]=Oop [128]=Oop rax=Oop off=2558}
                                                ;*invokevirtual toString
                                                ; - org.gallant.jitwatch.Summary::main@50 (line 23)
                                                ;   {runtime_call}
  0x0000000002a7cf1e: callq  0x00000000029d1b80  ; OopMap{[136]=Oop rax=Oop rsi=Oop off=2563}
                                                ;*invokevirtual println
                                                ; - org.gallant.jitwatch.Summary::main@53 (line 23)
                                                ;   {runtime_call}
  0x0000000002a7cf23: movabs $0x0,%rdx          ;   {oop(NULL)}
  0x0000000002a7cf2d: push   %rax
  0x0000000002a7cf2e: push   %rbx
  0x0000000002a7cf2f: mov    0x48(%rdx),%rbx
  0x0000000002a7cf33: push   %rdi
  0x0000000002a7cf34: push   %rsi
  0x0000000002a7cf35: push   %rdx
  0x0000000002a7cf36: push   %rcx
  0x0000000002a7cf37: push   %r8
  0x0000000002a7cf39: push   %r9
  0x0000000002a7cf3b: push   %r10
  0x0000000002a7cf3d: mov    %rsp,%r10
  0x0000000002a7cf40: and    $0xfffffffffffffff0,%rsp
  0x0000000002a7cf44: push   %r10
  0x0000000002a7cf46: push   %r11
  0x0000000002a7cf48: mov    $0x7,%ecx
  0x0000000002a7cf4d: movabs $0x7ff855285e40,%r10  ;   {runtime_call}
  0x0000000002a7cf57: callq  *%r10
  0x0000000002a7cf5a: pop    %r11
  0x0000000002a7cf5c: pop    %rsp
  0x0000000002a7cf5d: pop    %r10
  0x0000000002a7cf5f: pop    %r9
  0x0000000002a7cf61: pop    %r8
  0x0000000002a7cf63: pop    %rcx
  0x0000000002a7cf64: pop    %rdx
  0x0000000002a7cf65: pop    %rsi
  0x0000000002a7cf66: pop    %rdi
  0x0000000002a7cf67: cmp    0x118(%rbx),%rax
  0x0000000002a7cf6e: pop    %rbx
  0x0000000002a7cf6f: pop    %rax
  0x0000000002a7cf70: jne    0x0000000002a7cf80
  0x0000000002a7cf76: jmpq   0x0000000002a7ca7a
  0x0000000002a7cf7b: mov    $0xa535d00,%eax
  0x0000000002a7cf80: callq  0x0000000002a60260  ; OopMap{[136]=Oop off=2661}
                                                ;*getstatic out
                                                ; - org.gallant.jitwatch.Summary::main@56 (line 24)
                                                ;   {runtime_call}
  0x0000000002a7cf85: jmpq   0x0000000002a7ca70
  0x0000000002a7cf8a: callq  0x00000000029d1b80  ; OopMap{[136]=Oop rdx=Oop off=2671}
                                                ;*getstatic out
                                                ; - org.gallant.jitwatch.Summary::main@56 (line 24)
                                                ;   {runtime_call}
  0x0000000002a7cf8f: mov    0x0(%rdx),%esi
  0x0000000002a7cf95: mov    $0x6050b00,%eax
  0x0000000002a7cf9a: callq  0x0000000002a60ae0  ; OopMap{[136]=Oop rdx=Oop off=2687}
                                                ;*getstatic out
                                                ; - org.gallant.jitwatch.Summary::main@56 (line 24)
                                                ;   {runtime_call}
  0x0000000002a7cf9f: jmpq   0x0000000002a7ca80
  0x0000000002a7cfa4: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002a7cfae: mov    $0xa050f00,%eax
  0x0000000002a7cfb3: callq  0x0000000002a606a0  ; OopMap{[136]=Oop rsi=Oop off=2712}
                                                ;*new  ; - org.gallant.jitwatch.Summary::main@59 (line 24)
                                                ;   {runtime_call}
  0x0000000002a7cfb8: jmpq   0x0000000002a7ca88
  0x0000000002a7cfbd: mov    %rdx,%rdx
  0x0000000002a7cfc0: callq  0x00000000029d1660  ; OopMap{[136]=Oop rsi=Oop off=2725}
                                                ;*new  ; - org.gallant.jitwatch.Summary::main@59 (line 24)
                                                ;   {runtime_call}
  0x0000000002a7cfc5: jmpq   0x0000000002a7ca97
  0x0000000002a7cfca: callq  0x00000000029d1b80  ; OopMap{[152]=Oop rax=Oop off=2735}
                                                ;*getfield summary
                                                ; - org.gallant.jitwatch.Summary::main@72 (line 24)
                                                ;   {runtime_call}
  0x0000000002a7cfcf: callq  0x00000000029d1b80  ; OopMap{[152]=Oop rax=Oop off=2740}
                                                ;*invokevirtual append
                                                ; - org.gallant.jitwatch.Summary::main@75 (line 24)
                                                ;   {runtime_call}
  0x0000000002a7cfd4: callq  0x00000000029d1b80  ; OopMap{[152]=Oop rax=Oop off=2745}
                                                ;*invokevirtual toString
                                                ; - org.gallant.jitwatch.Summary::main@78 (line 24)
                                                ;   {runtime_call}
  0x0000000002a7cfd9: callq  0x00000000029d1b80  ; OopMap{rax=Oop rsi=Oop off=2750}
                                                ;*invokevirtual println
                                                ; - org.gallant.jitwatch.Summary::main@81 (line 24)
                                                ;   {runtime_call}
  0x0000000002a7cfde: nop
  0x0000000002a7cfdf: nop
  0x0000000002a7cfe0: mov    0x2a8(%r15),%rax
  0x0000000002a7cfe7: movabs $0x0,%r10
  0x0000000002a7cff1: mov    %r10,0x2a8(%r15)
  0x0000000002a7cff8: movabs $0x0,%r10
  0x0000000002a7d002: mov    %r10,0x2b0(%r15)
  0x0000000002a7d009: add    $0xb0,%rsp
  0x0000000002a7d010: pop    %rbp
  0x0000000002a7d011: jmpq   0x00000000029cf0e0  ;   {runtime_call}
  0x0000000002a7d016: hlt    
  0x0000000002a7d017: hlt    
  0x0000000002a7d018: hlt    
  0x0000000002a7d019: hlt    
  0x0000000002a7d01a: hlt    
  0x0000000002a7d01b: hlt    
  0x0000000002a7d01c: hlt    
  0x0000000002a7d01d: hlt    
  0x0000000002a7d01e: hlt    
  0x0000000002a7d01f: hlt    
[Stub Code]
  0x0000000002a7d020: nop                       ;   {no_reloc}
  0x0000000002a7d021: nop
  0x0000000002a7d022: nop
  0x0000000002a7d023: nop
  0x0000000002a7d024: nop
  0x0000000002a7d025: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002a7d02f: jmpq   0x0000000002a7d02f  ;   {runtime_call}
  0x0000000002a7d034: nop
  0x0000000002a7d035: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002a7d03f: jmpq   0x0000000002a7d03f  ;   {runtime_call}
  0x0000000002a7d044: nop
  0x0000000002a7d045: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002a7d04f: jmpq   0x0000000002a7d04f  ;   {runtime_call}
  0x0000000002a7d054: nop
  0x0000000002a7d055: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002a7d05f: jmpq   0x0000000002a7d05f  ;   {runtime_call}
  0x0000000002a7d064: nop
  0x0000000002a7d065: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002a7d06f: jmpq   0x0000000002a7d06f  ;   {runtime_call}
  0x0000000002a7d074: nop
  0x0000000002a7d075: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002a7d07f: jmpq   0x0000000002a7d07f  ;   {runtime_call}
  0x0000000002a7d084: nop
  0x0000000002a7d085: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002a7d08f: jmpq   0x0000000002a7d08f  ;   {runtime_call}
  0x0000000002a7d094: nop
  0x0000000002a7d095: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002a7d09f: jmpq   0x0000000002a7d09f  ;   {runtime_call}
  0x0000000002a7d0a4: nop
  0x0000000002a7d0a5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002a7d0af: jmpq   0x0000000002a7d0af  ;   {runtime_call}
  0x0000000002a7d0b4: nop
  0x0000000002a7d0b5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002a7d0bf: jmpq   0x0000000002a7d0bf  ;   {runtime_call}
[Exception Handler]
  0x0000000002a7d0c4: callq  0x00000000029cfc60  ;   {runtime_call}
  0x0000000002a7d0c9: mov    %rsp,-0x28(%rsp)
  0x0000000002a7d0ce: sub    $0x80,%rsp
  0x0000000002a7d0d5: mov    %rax,0x78(%rsp)
  0x0000000002a7d0da: mov    %rcx,0x70(%rsp)
  0x0000000002a7d0df: mov    %rdx,0x68(%rsp)
  0x0000000002a7d0e4: mov    %rbx,0x60(%rsp)
  0x0000000002a7d0e9: mov    %rbp,0x50(%rsp)
  0x0000000002a7d0ee: mov    %rsi,0x48(%rsp)
  0x0000000002a7d0f3: mov    %rdi,0x40(%rsp)
  0x0000000002a7d0f8: mov    %r8,0x38(%rsp)
  0x0000000002a7d0fd: mov    %r9,0x30(%rsp)
  0x0000000002a7d102: mov    %r10,0x28(%rsp)
  0x0000000002a7d107: mov    %r11,0x20(%rsp)
  0x0000000002a7d10c: mov    %r12,0x18(%rsp)
  0x0000000002a7d111: mov    %r13,0x10(%rsp)
  0x0000000002a7d116: mov    %r14,0x8(%rsp)
  0x0000000002a7d11b: mov    %r15,(%rsp)
  0x0000000002a7d11f: movabs $0x623d8e30,%rcx   ;   {external_word}
  0x0000000002a7d129: movabs $0x2a7d0c9,%rdx    ;   {internal_word}
  0x0000000002a7d133: mov    %rsp,%r8
  0x0000000002a7d136: and    $0xfffffffffffffff0,%rsp
  0x0000000002a7d13a: callq  0x0000000062093d40  ;   {runtime_call}
  0x0000000002a7d13f: hlt    
[Deopt Handler Code]
  0x0000000002a7d140: movabs $0x2a7d140,%r10    ;   {section_word}
  0x0000000002a7d14a: push   %r10
  0x0000000002a7d14c: jmpq   0x00000000029a7600  ;   {runtime_call}
  0x0000000002a7d151: hlt    
  0x0000000002a7d152: hlt    
  0x0000000002a7d153: hlt    
  0x0000000002a7d154: hlt    
  0x0000000002a7d155: hlt    
  0x0000000002a7d156: hlt    
  0x0000000002a7d157: hlt    
<nmethod compile_id='34' compile_kind='osr' compiler='C1' level='3' entry='0x0000000002a7c520' size='5272' address='0x0000000002a7c2d0' relocation_offset='288' insts_offset='592' stub_offset='3408' scopes_data_offset='3768' scopes_pcs_offset='4216' dependencies_offset='5176' nul_chk_table_offset='5184' oops_offset='3720' method='org/gallant/jitwatch/Summary main ([Ljava/lang/String;)V' bytes='85' count='1' backedge_count='296981' iicount='1' stamp='0.644'/>
<writer thread='1672'/>
<task_queued compile_id='35' compile_kind='osr' method='org/gallant/jitwatch/Summary main ([Ljava/lang/String;)V' bytes='85' count='1' backedge_count='299799' iicount='1' osr_bci='12' stamp='0.644' comment='tiered' hot_count='299799'/>
<writer thread='1064'/>
Decoding compiled method 0x0000000002a7a810:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000016e32d48} &apos;main&apos; &apos;([Ljava/lang/String;)V&apos; in &apos;org/gallant/jitwatch/Summary&apos;
  0x0000000002a7a940: int3   
  0x0000000002a7a941: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002a7a94c: data16 data16 xchg %ax,%ax
  0x0000000002a7a950: mov    %eax,-0x6000(%rsp)
  0x0000000002a7a957: push   %rbp
  0x0000000002a7a958: sub    $0x40,%rsp
  0x0000000002a7a95c: mov    (%rdx),%r13d
  0x0000000002a7a95f: mov    0x10(%rdx),%rbx
  0x0000000002a7a963: mov    0x8(%rdx),%ebp
  0x0000000002a7a966: mov    %rdx,%rcx
  0x0000000002a7a969: movabs $0x61fcc6d0,%r10
  0x0000000002a7a973: callq  *%r10
  0x0000000002a7a976: mov    0x8(%rbx),%r10d    ; implicit exception: dispatches to 0x0000000002a7aada
  0x0000000002a7a97a: cmp    $0x2000c105,%r10d  ;   {metadata(&apos;org/gallant/jitwatch/Summary&apos;)}
  0x0000000002a7a981: jne    0x0000000002a7aac0  ;*iload_3
                                                ; - org.gallant.jitwatch.Summary::main@12 (line 20)

  0x0000000002a7a987: cmp    $0xf4240,%r13d
  0x0000000002a7a98e: jge    0x0000000002a7aad5  ;*if_icmpge
                                                ; - org.gallant.jitwatch.Summary::main@15 (line 20)

  0x0000000002a7a994: mov    0x10(%rbx),%rdx    ;*getfield summary
                                                ; - org.gallant.jitwatch.Summary::add@6 (line 13)
                                                ; - org.gallant.jitwatch.Summary::main@21 (line 21)

  0x0000000002a7a998: sub    %r13d,%ebp         ;*iload_3
                                                ; - org.gallant.jitwatch.Summary::main@12 (line 20)

  0x0000000002a7a99b: mov    %r13d,%r10d
  0x0000000002a7a99e: inc    %r10d              ;*putfield summary
                                                ; - org.gallant.jitwatch.Summary::add@12 (line 13)
                                                ; - org.gallant.jitwatch.Summary::main@21 (line 21)

  0x0000000002a7a9a1: mov    %r13d,%r8d
  0x0000000002a7a9a4: add    %ebp,%r8d
  0x0000000002a7a9a7: inc    %r8d               ;*iadd
                                                ; - org.gallant.jitwatch.Summary::add@2 (line 12)
                                                ; - org.gallant.jitwatch.Summary::main@21 (line 21)

  0x0000000002a7a9aa: movslq %r8d,%r11
  0x0000000002a7a9ad: add    %rdx,%r11
  0x0000000002a7a9b0: mov    %r11,0x10(%rbx)
  0x0000000002a7a9b4: lock addl $0x0,(%rsp)     ;*putfield summary
                                                ; - org.gallant.jitwatch.Summary::add@12 (line 13)
                                                ; - org.gallant.jitwatch.Summary::main@21 (line 21)

  0x0000000002a7a9b9: mov    0x10(%rbx),%rdx    ;*getfield summary
                                                ; - org.gallant.jitwatch.Summary::add@6 (line 13)
                                                ; - org.gallant.jitwatch.Summary::main@21 (line 21)

  0x0000000002a7a9bd: mov    %r13d,%edi
  0x0000000002a7a9c0: inc    %edi               ;*iinc
                                                ; - org.gallant.jitwatch.Summary::main@25 (line 20)

  0x0000000002a7a9c2: cmp    %r10d,%edi
  0x0000000002a7a9c5: jge    0x0000000002a7a9cc  ;*if_icmpge
                                                ; - org.gallant.jitwatch.Summary::main@15 (line 20)

  0x0000000002a7a9c7: mov    %edi,%r13d
  0x0000000002a7a9ca: jmp    0x0000000002a7a9a1
  0x0000000002a7a9cc: cmp    $0xf423d,%edi
  0x0000000002a7a9d2: jge    0x0000000002a7aaad
  0x0000000002a7a9d8: jmp    0x0000000002a7a9e3
  0x0000000002a7a9da: nopw   0x0(%rax,%rax,1)
  0x0000000002a7a9e0: mov    %r13d,%edi         ;*putfield summary
                                                ; - org.gallant.jitwatch.Summary::add@12 (line 13)
                                                ; - org.gallant.jitwatch.Summary::main@21 (line 21)

  0x0000000002a7a9e3: mov    %ebp,%r10d
  0x0000000002a7a9e6: add    %edi,%r10d
  0x0000000002a7a9e9: mov    %r10d,%r8d
  0x0000000002a7a9ec: add    $0x4,%r8d          ;*iadd
                                                ; - org.gallant.jitwatch.Summary::add@2 (line 12)
                                                ; - org.gallant.jitwatch.Summary::main@21 (line 21)

  0x0000000002a7a9f0: mov    %r10d,%r9d
  0x0000000002a7a9f3: add    $0x3,%r9d
  0x0000000002a7a9f7: movslq %r8d,%rsi
  0x0000000002a7a9fa: movslq %r9d,%r11
  0x0000000002a7a9fd: mov    %r10d,%ecx
  0x0000000002a7aa00: add    $0x2,%ecx
  0x0000000002a7aa03: inc    %r10d
  0x0000000002a7aa06: movslq %ecx,%r9
  0x0000000002a7aa09: movslq %r10d,%r10
  0x0000000002a7aa0c: add    %rdx,%r10
  0x0000000002a7aa0f: mov    %r10,0x10(%rbx)
  0x0000000002a7aa13: lock addl $0x0,(%rsp)
  0x0000000002a7aa18: mov    0x10(%rbx),%r10
  0x0000000002a7aa1c: add    %r10,%r9
  0x0000000002a7aa1f: mov    %r9,0x10(%rbx)
  0x0000000002a7aa23: lock addl $0x0,(%rsp)
  0x0000000002a7aa28: mov    0x10(%rbx),%r10
  0x0000000002a7aa2c: add    %r10,%r11
  0x0000000002a7aa2f: mov    %r11,0x10(%rbx)
  0x0000000002a7aa33: lock addl $0x0,(%rsp)
  0x0000000002a7aa38: mov    0x10(%rbx),%r10
  0x0000000002a7aa3c: add    %r10,%rsi
  0x0000000002a7aa3f: mov    %rsi,0x10(%rbx)
  0x0000000002a7aa43: lock addl $0x0,(%rsp)     ;*putfield summary
                                                ; - org.gallant.jitwatch.Summary::add@12 (line 13)
                                                ; - org.gallant.jitwatch.Summary::main@21 (line 21)

  0x0000000002a7aa48: mov    0x10(%rbx),%rdx    ;*getfield summary
                                                ; - org.gallant.jitwatch.Summary::add@6 (line 13)
                                                ; - org.gallant.jitwatch.Summary::main@21 (line 21)

  0x0000000002a7aa4c: mov    %edi,%r13d
  0x0000000002a7aa4f: add    $0x4,%r13d         ;*iinc
                                                ; - org.gallant.jitwatch.Summary::main@25 (line 20)

  0x0000000002a7aa53: cmp    $0xf423d,%r13d
  0x0000000002a7aa5a: jl     0x0000000002a7a9e0  ;*if_icmpge
                                                ; - org.gallant.jitwatch.Summary::main@15 (line 20)

  0x0000000002a7aa5c: add    $0x3,%edi          ;*iinc
                                                ; - org.gallant.jitwatch.Summary::main@25 (line 20)

  0x0000000002a7aa5f: cmp    $0xf4240,%r13d
  0x0000000002a7aa66: jge    0x0000000002a7aab8
  0x0000000002a7aa68: jmp    0x0000000002a7aa70
  0x0000000002a7aa6a: xchg   %ax,%ax
  0x0000000002a7aa6c: mov    0x10(%rbx),%rdx    ;*putfield summary
                                                ; - org.gallant.jitwatch.Summary::add@12 (line 13)
                                                ; - org.gallant.jitwatch.Summary::main@21 (line 21)

  0x0000000002a7aa70: mov    %r13d,%r8d
  0x0000000002a7aa73: add    %ebp,%r8d
  0x0000000002a7aa76: inc    %r8d               ;*iadd
                                                ; - org.gallant.jitwatch.Summary::add@2 (line 12)
                                                ; - org.gallant.jitwatch.Summary::main@21 (line 21)

  0x0000000002a7aa79: movslq %r8d,%r10
  0x0000000002a7aa7c: add    %rdx,%r10
  0x0000000002a7aa7f: mov    %r10,0x10(%rbx)
  0x0000000002a7aa83: lock addl $0x0,(%rsp)     ;*putfield summary
                                                ; - org.gallant.jitwatch.Summary::add@12 (line 13)
                                                ; - org.gallant.jitwatch.Summary::main@21 (line 21)

  0x0000000002a7aa88: inc    %r13d              ;*iinc
                                                ; - org.gallant.jitwatch.Summary::main@25 (line 20)

  0x0000000002a7aa8b: cmp    $0xf4240,%r13d
  0x0000000002a7aa92: jl     0x0000000002a7aa6c  ;*if_icmpge
                                                ; - org.gallant.jitwatch.Summary::main@15 (line 20)

  0x0000000002a7aa94: mov    $0xffffff65,%edx
  0x0000000002a7aa99: mov    %rbx,%rbp
  0x0000000002a7aa9c: mov    %r8d,0x20(%rsp)
  0x0000000002a7aaa1: mov    %r13d,0x28(%rsp)
  0x0000000002a7aaa6: nop
  0x0000000002a7aaa7: callq  0x00000000029a57a0  ; OopMap{rbp=Oop off=364}
                                                ;*if_icmpge
                                                ; - org.gallant.jitwatch.Summary::main@15 (line 20)
                                                ;   {runtime_call}
  0x0000000002a7aaac: int3                      ;*if_icmpge
                                                ; - org.gallant.jitwatch.Summary::main@15 (line 20)

  0x0000000002a7aaad: mov    %r13d,%r10d
  0x0000000002a7aab0: mov    %edi,%r13d
  0x0000000002a7aab3: mov    %r10d,%edi
  0x0000000002a7aab6: jmp    0x0000000002a7aa5f
  0x0000000002a7aab8: mov    %edi,%r13d
  0x0000000002a7aabb: inc    %r13d              ;*iinc
                                                ; - org.gallant.jitwatch.Summary::main@25 (line 20)

  0x0000000002a7aabe: jmp    0x0000000002a7aa94
  0x0000000002a7aac0: mov    $0xffffff9d,%edx
  0x0000000002a7aac5: mov    %rbx,0x20(%rsp)
  0x0000000002a7aaca: mov    %r13d,0x28(%rsp)
  0x0000000002a7aacf: callq  0x00000000029a57a0  ; OopMap{[32]=Oop off=404}
                                                ;*iload_3
                                                ; - org.gallant.jitwatch.Summary::main@12 (line 20)
                                                ;   {runtime_call}
  0x0000000002a7aad4: int3   
  0x0000000002a7aad5: mov    %ebp,%r8d
  0x0000000002a7aad8: jmp    0x0000000002a7aa94
  0x0000000002a7aada: mov    $0xffffff86,%edx
  0x0000000002a7aadf: mov    %r13d,0x20(%rsp)
  0x0000000002a7aae4: data16 xchg %ax,%ax
  0x0000000002a7aae7: callq  0x00000000029a57a0  ; OopMap{off=428}
                                                ;*iload_3
                                                ; - org.gallant.jitwatch.Summary::main@12 (line 20)
                                                ;   {runtime_call}
  0x0000000002a7aaec: int3                      ;*iinc
                                                ; - org.gallant.jitwatch.Summary::main@25 (line 20)

  0x0000000002a7aaed: hlt    
  0x0000000002a7aaee: hlt    
  0x0000000002a7aaef: hlt    
  0x0000000002a7aaf0: hlt    
  0x0000000002a7aaf1: hlt    
  0x0000000002a7aaf2: hlt    
  0x0000000002a7aaf3: hlt    
  0x0000000002a7aaf4: hlt    
  0x0000000002a7aaf5: hlt    
  0x0000000002a7aaf6: hlt    
  0x0000000002a7aaf7: hlt    
  0x0000000002a7aaf8: hlt    
  0x0000000002a7aaf9: hlt    
  0x0000000002a7aafa: hlt    
  0x0000000002a7aafb: hlt    
  0x0000000002a7aafc: hlt    
  0x0000000002a7aafd: hlt    
  0x0000000002a7aafe: hlt    
  0x0000000002a7aaff: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002a7ab00: jmpq   0x00000000029cf4a0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000002a7ab05: callq  0x0000000002a7ab0a
  0x0000000002a7ab0a: subq   $0x5,(%rsp)
  0x0000000002a7ab0f: jmpq   0x00000000029a7600  ;   {runtime_call}
  0x0000000002a7ab14: hlt    
  0x0000000002a7ab15: hlt    
  0x0000000002a7ab16: hlt    
  0x0000000002a7ab17: hlt    
<nmethod compile_id='35' compile_kind='osr' compiler='C2' level='4' entry='0x0000000002a7a940' size='1424' address='0x0000000002a7a810' relocation_offset='288' insts_offset='304' stub_offset='752' scopes_data_offset='808' scopes_pcs_offset='920' dependencies_offset='1400' nul_chk_table_offset='1408' oops_offset='776' method='org/gallant/jitwatch/Summary main ([Ljava/lang/String;)V' bytes='85' count='1' backedge_count='1000000' iicount='1' stamp='0.669'/>
<make_not_entrant thread='1064' compile_id='34' compile_kind='osr' compiler='C1' level='3' stamp='0.669'/>
<writer thread='1672'/>
<task_queued compile_id='36' method='java/util/concurrent/ConcurrentHashMap tabAt ([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' bytes='21' count='256' iicount='256' level='3' stamp='0.801' comment='tiered' hot_count='256'/>
Decoding compiled method 0x0000000002a789d0:
Code:
[Entry Point]
  # {method} {0x0000000016aaf358} &apos;getObjectVolatile&apos; &apos;(Ljava/lang/Object;J)Ljava/lang/Object;&apos; in &apos;sun/misc/Unsafe&apos;
  # this:     rdx:rdx   = &apos;sun/misc/Unsafe&apos;
  # parm0:    r8:r8     = &apos;java/lang/Object&apos;
  # parm1:    r9:r9     = long
  #           [sp+0x70]  (sp of caller)
  0x0000000002a78b40: mov    0x8(%rdx),%r10d
  0x0000000002a78b44: shl    $0x3,%r10
  0x0000000002a78b48: cmp    %r10,%rax
  0x0000000002a78b4b: je     0x0000000002a78b58
  0x0000000002a78b51: jmpq   0x00000000029a5f60  ;   {runtime_call}
  0x0000000002a78b56: xchg   %ax,%ax
[Verified Entry Point]
  0x0000000002a78b58: mov    %eax,-0x6000(%rsp)
  0x0000000002a78b5f: push   %rbp
  0x0000000002a78b60: mov    %rsp,%rbp
  0x0000000002a78b63: sub    $0x60,%rsp
  0x0000000002a78b67: mov    %r8,0x28(%rsp)
  0x0000000002a78b6c: cmp    $0x0,%r8
  0x0000000002a78b70: lea    0x28(%rsp),%r8
  0x0000000002a78b75: cmove  0x28(%rsp),%r8
  0x0000000002a78b7b: mov    %rdx,0x20(%rsp)
  0x0000000002a78b80: cmp    $0x0,%rdx
  0x0000000002a78b84: lea    0x20(%rsp),%rdx
  0x0000000002a78b89: cmove  0x20(%rsp),%rdx    ; OopMap{[40]=Oop [32]=Oop off=79}
  0x0000000002a78b8f: movabs $0x2a78b8f,%r10    ;   {section_word}
  0x0000000002a78b99: mov    %r10,0x1e0(%r15)
  0x0000000002a78ba0: mov    %rsp,0x1d8(%r15)
  0x0000000002a78ba7: cmpb   $0x0,0x5fb34c14(%rip)        # 0x00000000625ad7c2
                                                ;   {external_word}
  0x0000000002a78bae: je     0x0000000002a78bf6
  0x0000000002a78bb4: push   %rdx
  0x0000000002a78bb5: push   %r8
  0x0000000002a78bb7: push   %r9
  0x0000000002a78bb9: movabs $0x16aaf350,%rdx   ;   {metadata({method} {0x0000000016aaf358} &apos;getObjectVolatile&apos; &apos;(Ljava/lang/Object;J)Ljava/lang/Object;&apos; in &apos;sun/misc/Unsafe&apos;)}
  0x0000000002a78bc3: mov    %r15,%rcx
  0x0000000002a78bc6: sub    $0x20,%rsp
  0x0000000002a78bca: test   $0xf,%esp
  0x0000000002a78bd0: je     0x0000000002a78be8
  0x0000000002a78bd6: sub    $0x8,%rsp
  0x0000000002a78bda: callq  0x0000000061fccdd0  ;   {runtime_call}
  0x0000000002a78bdf: add    $0x8,%rsp
  0x0000000002a78be3: jmpq   0x0000000002a78bed
  0x0000000002a78be8: callq  0x0000000061fccdd0  ;   {runtime_call}
  0x0000000002a78bed: add    $0x20,%rsp
  0x0000000002a78bf1: pop    %r9
  0x0000000002a78bf3: pop    %r8
  0x0000000002a78bf5: pop    %rdx
  0x0000000002a78bf6: lea    0x1f8(%r15),%rcx
  0x0000000002a78bfd: movl   $0x4,0x270(%r15)
  0x0000000002a78c08: callq  0x0000000061f7e420  ;   {runtime_call}
  0x0000000002a78c0d: vzeroupper 
  0x0000000002a78c10: movl   $0x5,0x270(%r15)
  0x0000000002a78c1b: mov    %r15d,%ecx
  0x0000000002a78c1e: shr    $0x4,%ecx
  0x0000000002a78c21: and    $0xffc,%ecx
  0x0000000002a78c27: movabs $0x510000,%r10     ;   {external_word}
  0x0000000002a78c31: mov    %ecx,(%r10,%rcx,1)
  0x0000000002a78c35: cmpl   $0x0,0x5fb35761(%rip)        # 0x00000000625ae3a0
                                                ;   {external_word}
  0x0000000002a78c3f: jne    0x0000000002a78c53
  0x0000000002a78c45: cmpl   $0x0,0x30(%r15)
  0x0000000002a78c4d: je     0x0000000002a78c74
  0x0000000002a78c53: mov    %rax,-0x8(%rbp)
  0x0000000002a78c57: mov    %r15,%rcx
  0x0000000002a78c5a: mov    %rsp,%r12
  0x0000000002a78c5d: sub    $0x20,%rsp
  0x0000000002a78c61: and    $0xfffffffffffffff0,%rsp
  0x0000000002a78c65: callq  0x0000000061fe3f40  ;   {runtime_call}
  0x0000000002a78c6a: mov    %r12,%rsp
  0x0000000002a78c6d: xor    %r12,%r12
  0x0000000002a78c70: mov    -0x8(%rbp),%rax
  0x0000000002a78c74: movl   $0x8,0x270(%r15)
  0x0000000002a78c7f: cmpl   $0x1,0x29c(%r15)
  0x0000000002a78c8a: je     0x0000000002a78d2e
  0x0000000002a78c90: cmpb   $0x0,0x5fb34b2b(%rip)        # 0x00000000625ad7c2
                                                ;   {external_word}
  0x0000000002a78c97: je     0x0000000002a78cdd
  0x0000000002a78c9d: mov    %rax,-0x8(%rbp)
  0x0000000002a78ca1: movabs $0x16aaf350,%rdx   ;   {metadata({method} {0x0000000016aaf358} &apos;getObjectVolatile&apos; &apos;(Ljava/lang/Object;J)Ljava/lang/Object;&apos; in &apos;sun/misc/Unsafe&apos;)}
  0x0000000002a78cab: mov    %r15,%rcx
  0x0000000002a78cae: sub    $0x20,%rsp
  0x0000000002a78cb2: test   $0xf,%esp
  0x0000000002a78cb8: je     0x0000000002a78cd0
  0x0000000002a78cbe: sub    $0x8,%rsp
  0x0000000002a78cc2: callq  0x0000000061fccdd0  ;   {runtime_call}
  0x0000000002a78cc7: add    $0x8,%rsp
  0x0000000002a78ccb: jmpq   0x0000000002a78cd5
  0x0000000002a78cd0: callq  0x0000000061fccdd0  ;   {runtime_call}
  0x0000000002a78cd5: add    $0x20,%rsp
  0x0000000002a78cd9: mov    -0x8(%rbp),%rax
  0x0000000002a78cdd: movabs $0x0,%r10
  0x0000000002a78ce7: mov    %r10,0x1d8(%r15)
  0x0000000002a78cee: movabs $0x0,%r10
  0x0000000002a78cf8: mov    %r10,0x1e0(%r15)
  0x0000000002a78cff: test   %rax,%rax
  0x0000000002a78d02: je     0x0000000002a78d0b
  0x0000000002a78d08: mov    (%rax),%rax
  0x0000000002a78d0b: mov    0x38(%r15),%rcx
  0x0000000002a78d0f: movl   $0x0,0x100(%rcx)
  0x0000000002a78d19: leaveq 
  0x0000000002a78d1a: cmpq   $0x0,0x8(%r15)
  0x0000000002a78d22: jne    0x0000000002a78d29
  0x0000000002a78d28: retq   
  0x0000000002a78d29: jmpq   Stub::forward exception  ;   {runtime_call}
  0x0000000002a78d2e: mov    %rax,-0x8(%rbp)
  0x0000000002a78d32: mov    %rsp,%r12
  0x0000000002a78d35: sub    $0x20,%rsp
  0x0000000002a78d39: and    $0xfffffffffffffff0,%rsp
  0x0000000002a78d3d: callq  0x0000000061fccdf0  ;   {runtime_call}
  0x0000000002a78d42: mov    %r12,%rsp
  0x0000000002a78d45: xor    %r12,%r12
  0x0000000002a78d48: mov    -0x8(%rbp),%rax
  0x0000000002a78d4c: jmpq   0x0000000002a78c90
  0x0000000002a78d51: hlt    
  0x0000000002a78d52: hlt    
  0x0000000002a78d53: hlt    
  0x0000000002a78d54: hlt    
  0x0000000002a78d55: hlt    
  0x0000000002a78d56: hlt    
  0x0000000002a78d57: hlt    
<nmethod compile_id='37' compile_kind='c2n' level='0' entry='0x0000000002a78b40' size='904' address='0x0000000002a789d0' relocation_offset='288' consts_offset='904' insts_offset='368' method='sun/misc/Unsafe getObjectVolatile (Ljava/lang/Object;J)Ljava/lang/Object;' bytes='0' count='256' iicount='256' stamp='0.813'/>
<writer thread='14520'/>
Decoding compiled method 0x0000000002a78590:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000016bee1e8} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;
  # parm0:    rdx:rdx   = &apos;[Ljava/util/concurrent/ConcurrentHashMap$Node;&apos;
  # parm1:    r8        = int
  #           [sp+0x50]  (sp of caller)
  0x0000000002a786e0: mov    %eax,-0x6000(%rsp)
  0x0000000002a786e7: push   %rbp
  0x0000000002a786e8: sub    $0x40,%rsp
  0x0000000002a786ec: movabs $0x16d34a50,%rcx   ;   {metadata(method data for {method} {0x0000000016bee1e8} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x0000000002a786f6: mov    0xdc(%rcx),%eax
  0x0000000002a786fc: add    $0x8,%eax
  0x0000000002a786ff: mov    %eax,0xdc(%rcx)
  0x0000000002a78705: movabs $0x16bee1e0,%rcx   ;   {metadata({method} {0x0000000016bee1e8} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x0000000002a7870f: and    $0x1ff8,%eax
  0x0000000002a78715: cmp    $0x0,%eax
  0x0000000002a78718: je     0x0000000002a78826  ;*getstatic U
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@0 (line 755)

  0x0000000002a7871e: movslq %r8d,%r8
  0x0000000002a78721: mov    $0x2,%ecx
  0x0000000002a78726: shl    %cl,%r8
  0x0000000002a78729: movabs $0x10,%r10
  0x0000000002a78733: add    %r10,%r8
  0x0000000002a78736: mov    (%rdx,%r8,1),%eax
  0x0000000002a7873a: cmp    $0x0,%rax
  0x0000000002a7873e: jne    0x0000000002a78759
  0x0000000002a78740: movabs $0x16d34a50,%rdi   ;   {metadata(method data for {method} {0x0000000016bee1e8} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x0000000002a7874a: orl    $0x100,0x130(%rdi)
  0x0000000002a78754: jmpq   0x0000000002a7881a
  0x0000000002a78759: movabs $0x100037208,%rbx  ;   {metadata(&apos;java/util/concurrent/ConcurrentHashMap$Node&apos;)}
  0x0000000002a78763: mov    0x8(%rax),%edi
  0x0000000002a78766: shl    $0x3,%rdi
  0x0000000002a7876a: cmp    0x30(%rdi),%rbx
  0x0000000002a7876e: jne    0x0000000002a787fe
  0x0000000002a78774: movabs $0x16d34a50,%rdi   ;   {metadata(method data for {method} {0x0000000016bee1e8} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x0000000002a7877e: mov    0x8(%rax),%ebx
  0x0000000002a78781: shl    $0x3,%rbx
  0x0000000002a78785: cmp    0x140(%rdi),%rbx
  0x0000000002a7878c: jne    0x0000000002a7879b
  0x0000000002a7878e: addq   $0x1,0x148(%rdi)
  0x0000000002a78796: jmpq   0x0000000002a7881a
  0x0000000002a7879b: cmp    0x150(%rdi),%rbx
  0x0000000002a787a2: jne    0x0000000002a787b1
  0x0000000002a787a4: addq   $0x1,0x158(%rdi)
  0x0000000002a787ac: jmpq   0x0000000002a7881a
  0x0000000002a787b1: cmpq   $0x0,0x140(%rdi)
  0x0000000002a787bc: jne    0x0000000002a787d5
  0x0000000002a787be: mov    %rbx,0x140(%rdi)
  0x0000000002a787c5: movq   $0x1,0x148(%rdi)
  0x0000000002a787d0: jmpq   0x0000000002a7881a
  0x0000000002a787d5: cmpq   $0x0,0x150(%rdi)
  0x0000000002a787e0: jne    0x0000000002a787f9
  0x0000000002a787e2: mov    %rbx,0x150(%rdi)
  0x0000000002a787e9: movq   $0x1,0x158(%rdi)
  0x0000000002a787f4: jmpq   0x0000000002a7881a
  0x0000000002a787f9: jmpq   0x0000000002a7881a
  0x0000000002a787fe: movabs $0x16d34a50,%rdi   ;   {metadata(method data for {method} {0x0000000016bee1e8} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x0000000002a78808: subq   $0x1,0x138(%rdi)
  0x0000000002a78810: jmpq   0x0000000002a7883d
  0x0000000002a78815: jmpq   0x0000000002a7881a  ;*checkcast
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@17 (line 755)

  0x0000000002a7881a: add    $0x40,%rsp
  0x0000000002a7881e: pop    %rbp
  0x0000000002a7881f: test   %eax,-0x2888725(%rip)        # 0x00000000001f0100
                                                ;   {poll_return}
  0x0000000002a78825: retq   
  0x0000000002a78826: mov    %rcx,0x8(%rsp)
  0x0000000002a7882b: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002a78833: callq  0x0000000002a5f7a0  ; OopMap{rdx=Oop off=344}
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@-1 (line 755)
                                                ;   {runtime_call}
  0x0000000002a78838: jmpq   0x0000000002a7871e
  0x0000000002a7883d: mov    %rax,(%rsp)
  0x0000000002a78841: callq  0x00000000029cf700  ; OopMap{off=358}
                                                ;*checkcast
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@17 (line 755)
                                                ;   {runtime_call}
  0x0000000002a78846: nop
  0x0000000002a78847: nop
  0x0000000002a78848: mov    0x2a8(%r15),%rax
  0x0000000002a7884f: movabs $0x0,%r10
  0x0000000002a78859: mov    %r10,0x2a8(%r15)
  0x0000000002a78860: movabs $0x0,%r10
  0x0000000002a7886a: mov    %r10,0x2b0(%r15)
  0x0000000002a78871: add    $0x40,%rsp
  0x0000000002a78875: pop    %rbp
  0x0000000002a78876: jmpq   0x00000000029cf0e0  ;   {runtime_call}
  0x0000000002a7887b: hlt    
  0x0000000002a7887c: hlt    
  0x0000000002a7887d: hlt    
  0x0000000002a7887e: hlt    
  0x0000000002a7887f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002a78880: callq  0x00000000029cfc60  ;   {no_reloc}
  0x0000000002a78885: mov    %rsp,-0x28(%rsp)
  0x0000000002a7888a: sub    $0x80,%rsp
  0x0000000002a78891: mov    %rax,0x78(%rsp)
  0x0000000002a78896: mov    %rcx,0x70(%rsp)
  0x0000000002a7889b: mov    %rdx,0x68(%rsp)
  0x0000000002a788a0: mov    %rbx,0x60(%rsp)
  0x0000000002a788a5: mov    %rbp,0x50(%rsp)
  0x0000000002a788aa: mov    %rsi,0x48(%rsp)
  0x0000000002a788af: mov    %rdi,0x40(%rsp)
  0x0000000002a788b4: mov    %r8,0x38(%rsp)
  0x0000000002a788b9: mov    %r9,0x30(%rsp)
  0x0000000002a788be: mov    %r10,0x28(%rsp)
  0x0000000002a788c3: mov    %r11,0x20(%rsp)
  0x0000000002a788c8: mov    %r12,0x18(%rsp)
  0x0000000002a788cd: mov    %r13,0x10(%rsp)
  0x0000000002a788d2: mov    %r14,0x8(%rsp)
  0x0000000002a788d7: mov    %r15,(%rsp)
  0x0000000002a788db: movabs $0x623d8e30,%rcx   ;   {external_word}
  0x0000000002a788e5: movabs $0x2a78885,%rdx    ;   {internal_word}
  0x0000000002a788ef: mov    %rsp,%r8
  0x0000000002a788f2: and    $0xfffffffffffffff0,%rsp
  0x0000000002a788f6: callq  0x0000000062093d40  ;   {runtime_call}
  0x0000000002a788fb: hlt    
[Deopt Handler Code]
  0x0000000002a788fc: movabs $0x2a788fc,%r10    ;   {section_word}
  0x0000000002a78906: push   %r10
  0x0000000002a78908: jmpq   0x00000000029a7600  ;   {runtime_call}
  0x0000000002a7890d: hlt    
  0x0000000002a7890e: hlt    
  0x0000000002a7890f: hlt    
<nmethod compile_id='36' compiler='C1' level='3' entry='0x0000000002a786e0' size='1048' address='0x0000000002a78590' relocation_offset='288' insts_offset='336' stub_offset='752' scopes_data_offset='904' scopes_pcs_offset='944' dependencies_offset='1040' method='java/util/concurrent/ConcurrentHashMap tabAt ([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' bytes='21' count='384' iicount='384' stamp='0.819'/>
<writer thread='1672'/>
<task_queued compile_id='38' method='java/lang/String getChars (II[CI)V' bytes='62' count='896' iicount='896' level='3' stamp='0.820' comment='tiered' hot_count='896'/>
[Loaded java.lang.Shutdown from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
[Loaded java.lang.Shutdown$Lock from D:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar]
<writer thread='14520'/>
Decoding compiled method 0x0000000002a7b9d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000016a341c8} &apos;getChars&apos; &apos;(
<writer thread='3128'/>
<destroy_vm stamp='0.821'/>
<writer thread='14520'/>
II[CI)V&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8        = int
  # parm1:    r9        = int
  # parm2:    rdi:rdi   = &apos;[C&apos;
  # parm3:    rsi       = int
  #           [sp+0x70]  (sp of caller)
  0x0000000002a7bb80: mov    0x8(%rdx),%r10d
  0x0000000002a7bb84: shl    $0x3,%r10
  0x0000000002a7bb88: cmp    %rax,%r10
  0x0000000002a7bb8b: jne    0x00000000029a5f60  ;   {runtime_call}
  0x0000000002a7bb91: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002a7bb9c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002a7bba0: mov    %eax,-0x6000(%rsp)
  0x0000000002a7bba7: push   %rbp
  0x0000000002a7bba8: sub    $0x60,%rsp
  0x0000000002a7bbac: movabs $0x16c58de8,%rbx   ;   {metadata(method data for {method} {0x0000000016a341c8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a7bbb6: mov    0xdc(%rbx),%eax
  0x0000000002a7bbbc: add    $0x8,%eax
  0x0000000002a7bbbf: mov    %eax,0xdc(%rbx)
  0x0000000002a7bbc5: movabs $0x16a341c0,%rbx   ;   {metadata({method} {0x0000000016a341c8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a7bbcf: and    $0x1ff8,%eax
  0x0000000002a7bbd5: cmp    $0x0,%eax
  0x0000000002a7bbd8: je     0x0000000002a7be06  ;*iload_1
                                                ; - java.lang.String::getChars@0 (line 817)

  0x0000000002a7bbde: cmp    $0x0,%r8d
  0x0000000002a7bbe2: movabs $0x16c58de8,%rbx   ;   {metadata(method data for {method} {0x0000000016a341c8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a7bbec: movabs $0x108,%rax
  0x0000000002a7bbf6: jge    0x0000000002a7bc06
  0x0000000002a7bbfc: movabs $0x118,%rax
  0x0000000002a7bc06: mov    (%rbx,%rax,1),%rcx
  0x0000000002a7bc0a: lea    0x1(%rcx),%rcx
  0x0000000002a7bc0e: mov    %rcx,(%rbx,%rax,1)
  0x0000000002a7bc12: jl     0x0000000002a7bdc6  ;*ifge
                                                ; - java.lang.String::getChars@1 (line 817)

  0x0000000002a7bc18: mov    0xc(%rdx),%edx     ;*getfield value
                                                ; - java.lang.String::getChars@15 (line 820)

  0x0000000002a7bc1b: mov    0xc(%rdx),%ebx     ;*arraylength
                                                ; - java.lang.String::getChars@18 (line 820)
                                                ; implicit exception: dispatches to 0x0000000002a7be1d
  0x0000000002a7bc1e: cmp    %ebx,%r9d
  0x0000000002a7bc21: movabs $0x16c58de8,%rbx   ;   {metadata(method data for {method} {0x0000000016a341c8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a7bc2b: movabs $0x138,%rax
  0x0000000002a7bc35: jle    0x0000000002a7bc45
  0x0000000002a7bc3b: movabs $0x148,%rax
  0x0000000002a7bc45: mov    (%rbx,%rax,1),%rcx
  0x0000000002a7bc49: lea    0x1(%rcx),%rcx
  0x0000000002a7bc4d: mov    %rcx,(%rbx,%rax,1)
  0x0000000002a7bc51: jg     0x0000000002a7bd86  ;*if_icmple
                                                ; - java.lang.String::getChars@19 (line 820)

  0x0000000002a7bc57: cmp    %r9d,%r8d
  0x0000000002a7bc5a: movabs $0x16c58de8,%rbx   ;   {metadata(method data for {method} {0x0000000016a341c8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a7bc64: movabs $0x168,%rax
  0x0000000002a7bc6e: jle    0x0000000002a7bc7e
  0x0000000002a7bc74: movabs $0x178,%rax
  0x0000000002a7bc7e: mov    (%rbx,%rax,1),%rcx
  0x0000000002a7bc82: lea    0x1(%rcx),%rcx
  0x0000000002a7bc86: mov    %rcx,(%rbx,%rax,1)
  0x0000000002a7bc8a: jg     0x0000000002a7bd3e  ;*if_icmple
                                                ; - java.lang.String::getChars@33 (line 823)

  0x0000000002a7bc90: movabs $0x16c58de8,%rbx   ;   {metadata(method data for {method} {0x0000000016a341c8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a7bc9a: addq   $0x1,0x198(%rbx)
  0x0000000002a7bca2: mov    %r9,%rbx
  0x0000000002a7bca5: sub    %r8d,%ebx
  0x0000000002a7bca8: mov    %rdi,%r9
  0x0000000002a7bcab: mov    %rsi,%rdi
  0x0000000002a7bcae: mov    %rbx,%rsi
  0x0000000002a7bcb1: test   %r9,%r9
  0x0000000002a7bcb4: je     0x0000000002a7be22
  0x0000000002a7bcba: test   %r8d,%r8d
  0x0000000002a7bcbd: jl     0x0000000002a7be22
  0x0000000002a7bcc3: test   %edi,%edi
  0x0000000002a7bcc5: jl     0x0000000002a7be22
  0x0000000002a7bccb: lea    (%r8,%rsi,1),%rcx
  0x0000000002a7bccf: cmp    0xc(%rdx),%ecx
  0x0000000002a7bcd2: ja     0x0000000002a7be22
  0x0000000002a7bcd8: lea    (%rdi,%rsi,1),%rcx
  0x0000000002a7bcdc: cmp    0xc(%r9),%ecx
  0x0000000002a7bce0: ja     0x0000000002a7be22
  0x0000000002a7bce6: test   %esi,%esi
  0x0000000002a7bce8: jl     0x0000000002a7be22
  0x0000000002a7bcee: je     0x0000000002a7bd32
  0x0000000002a7bcf4: movslq %r8d,%r8
  0x0000000002a7bcf7: movslq %edi,%rdi
  0x0000000002a7bcfa: lea    0x10(%rdx,%r8,2),%rcx
  0x0000000002a7bcff: lea    0x10(%r9,%rdi,2),%rdx
  0x0000000002a7bd04: mov    %rsi,%r8
  0x0000000002a7bd07: sub    $0x20,%rsp
  0x0000000002a7bd0b: test   $0xf,%esp
  0x0000000002a7bd11: je     0x0000000002a7bd29
  0x0000000002a7bd17: sub    $0x8,%rsp
  0x0000000002a7bd1b: callq  Stub::jshort_arraycopy  ;   {runtime_call}
  0x0000000002a7bd20: add    $0x8,%rsp
  0x0000000002a7bd24: jmpq   0x0000000002a7bd2e
  0x0000000002a7bd29: callq  Stub::jshort_arraycopy  ;   {runtime_call}
  0x0000000002a7bd2e: add    $0x20,%rsp         ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)

  0x0000000002a7bd32: add    $0x60,%rsp
  0x0000000002a7bd36: pop    %rbp
  0x0000000002a7bd37: test   %eax,-0x288bc3d(%rip)        # 0x00000000001f0100
                                                ;   {poll_return}
  0x0000000002a7bd3d: retq                      ;*return
                                                ; - java.lang.String::getChars@61 (line 827)

  0x0000000002a7bd3e: xchg   %ax,%ax
  0x0000000002a7bd40: jmpq   0x0000000002a7be40  ;   {no_reloc}
  0x0000000002a7bd45: add    %al,(%rax)
  0x0000000002a7bd47: add    %al,(%rax)
  0x0000000002a7bd49: add    %ch,%cl
  0x0000000002a7bd4b: sti    
  0x0000000002a7bd4c: add    %al,(%rax)
  0x0000000002a7bd4e: add    %cl,-0x75(%rax)    ;*new  ; - java.lang.String::getChars@36 (line 824)

  0x0000000002a7bd51: rorb   -0x42(%rax)        ;   {metadata(method data for {method} {0x0000000016a341c8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a7bd54: callq  0x0000000002be82e6
  0x0000000002a7bd59: add    %al,(%rax)
  0x0000000002a7bd5b: add    %cl,-0x7d(%rax)
  0x0000000002a7bd5e: xchg   %cl,0x1000001(%rax)
  0x0000000002a7bd64: sub    %r8d,%r9d
  0x0000000002a7bd67: mov    %r9,%r8
  0x0000000002a7bd6a: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@43 (line 824)

  0x0000000002a7bd6d: mov    %rax,0x38(%rsp)
  0x0000000002a7bd72: nop
  0x0000000002a7bd73: nop
  0x0000000002a7bd74: nop
  0x0000000002a7bd75: nop
  0x0000000002a7bd76: nop
  0x0000000002a7bd77: callq  0x00000000029a61a0  ; OopMap{[56]=Oop off=508}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@43 (line 824)
                                                ;   {optimized virtual_call}
  0x0000000002a7bd7c: mov    0x38(%rsp),%rax
  0x0000000002a7bd81: jmpq   0x0000000002a7bece  ;*athrow
                                                ; - java.lang.String::getChars@46 (line 824)

  0x0000000002a7bd86: xchg   %ax,%ax
  0x0000000002a7bd88: jmpq   0x0000000002a7be66  ;   {no_reloc}
  0x0000000002a7bd8d: add    %al,(%rax)
  0x0000000002a7bd8f: add    %al,(%rax)
  0x0000000002a7bd91: add    %ch,%cl
  0x0000000002a7bd93: flds   (%rax)
  0x0000000002a7bd95: add    %al,(%rax)         ;*new  ; - java.lang.String::getChars@22 (line 821)

  0x0000000002a7bd97: mov    %rax,%r8
  0x0000000002a7bd9a: movabs $0x16c58de8,%rdx   ;   {metadata(method data for {method} {0x0000000016a341c8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a7bda4: addq   $0x1,0x158(%rdx)
  0x0000000002a7bdac: mov    %r9,%r8
  0x0000000002a7bdaf: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@27 (line 821)

  0x0000000002a7bdb2: mov    %rax,0x40(%rsp)
  0x0000000002a7bdb7: callq  0x00000000029a61a0  ; OopMap{[64]=Oop off=572}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@27 (line 821)
                                                ;   {optimized virtual_call}
  0x0000000002a7bdbc: mov    0x40(%rsp),%rax
  0x0000000002a7bdc1: jmpq   0x0000000002a7bece  ;*athrow
                                                ; - java.lang.String::getChars@30 (line 821)

  0x0000000002a7bdc6: xchg   %ax,%ax
  0x0000000002a7bdc8: jmpq   0x0000000002a7be8c  ;   {no_reloc}
  0x0000000002a7bdcd: add    %al,(%rax)
  0x0000000002a7bdcf: add    %al,(%rax)
  0x0000000002a7bdd1: add    %ch,%cl
  0x0000000002a7bdd3: mov    $0x48000000,%edi   ;*new  ; - java.lang.String::getChars@4 (line 818)

  0x0000000002a7bdd8: mov    %eax,%edx
  0x0000000002a7bdda: movabs $0x16c58de8,%rsi   ;   {metadata(method data for {method} {0x0000000016a341c8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002a7bde4: addq   $0x1,0x128(%rsi)
  0x0000000002a7bdec: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@9 (line 818)

  0x0000000002a7bdef: mov    %rax,0x48(%rsp)
  0x0000000002a7bdf4: nop
  0x0000000002a7bdf5: nop
  0x0000000002a7bdf6: nop
  0x0000000002a7bdf7: callq  0x00000000029a61a0  ; OopMap{[72]=Oop off=636}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@9 (line 818)
                                                ;   {optimized virtual_call}
  0x0000000002a7bdfc: mov    0x48(%rsp),%rax
  0x0000000002a7be01: jmpq   0x0000000002a7bece
  0x0000000002a7be06: mov    %rbx,0x8(%rsp)
  0x0000000002a7be0b: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002a7be13: callq  0x0000000002a5f7a0  ; OopMap{rdx=Oop rdi=Oop off=664}
                                                ;*synchronization entry
                                                ; - java.lang.String::getChars@-1 (line 817)
                                                ;   {runtime_call}
  0x0000000002a7be18: jmpq   0x0000000002a7bbde
  0x0000000002a7be1d: callq  0x00000000029d1b80  ; OopMap{rdi=Oop rdx=Oop off=674}
                                                ;*arraylength
                                                ; - java.lang.String::getChars@18 (line 820)
                                                ;   {runtime_call}
  0x0000000002a7be22: nop
  0x0000000002a7be23: nop
  0x0000000002a7be24: nop
  0x0000000002a7be25: nop
  0x0000000002a7be26: nop
  0x0000000002a7be27: callq  0x00000000029a6620  ; OopMap{off=684}
                                                ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ;   {static_call}
  0x0000000002a7be2c: jmpq   0x0000000002a7bd32
  0x0000000002a7be31: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002a7be3b: mov    $0xa050f00,%eax
  0x0000000002a7be40: callq  0x0000000002a606a0  ; OopMap{off=709}
                                                ;*new  ; - java.lang.String::getChars@36 (line 824)
                                                ;   {runtime_call}
  0x0000000002a7be45: jmpq   0x0000000002a7bd40
  0x0000000002a7be4a: mov    %rdx,%rdx
  0x0000000002a7be4d: callq  0x00000000029d1660  ; OopMap{off=722}
                                                ;*new  ; - java.lang.String::getChars@36 (line 824)
                                                ;   {runtime_call}
  0x0000000002a7be52: jmpq   0x0000000002a7bd4f
  0x0000000002a7be57: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002a7be61: mov    $0xa050f00,%eax
  0x0000000002a7be66: callq  0x0000000002a606a0  ; OopMap{off=747}
                                                ;*new  ; - java.lang.String::getChars@22 (line 821)
                                                ;   {runtime_call}
  0x0000000002a7be6b: jmpq   0x0000000002a7bd88
  0x0000000002a7be70: mov    %rdx,%rdx
  0x0000000002a7be73: callq  0x00000000029d1660  ; OopMap{off=760}
                                                ;*new  ; - java.lang.String::getChars@22 (line 821)
                                                ;   {runtime_call}
  0x0000000002a7be78: jmpq   0x0000000002a7bd97
  0x0000000002a7be7d: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002a7be87: mov    $0xa050f00,%eax
  0x0000000002a7be8c: callq  0x0000000002a606a0  ; OopMap{off=785}
                                                ;*new  ; - java.lang.String::getChars@4 (line 818)
                                                ;   {runtime_call}
  0x0000000002a7be91: jmpq   0x0000000002a7bdc8
  0x0000000002a7be96: mov    %rdx,%rdx
  0x0000000002a7be99: callq  0x00000000029d1660  ; OopMap{off=798}
                                                ;*new  ; - java.lang.String::getChars@4 (line 818)
                                                ;   {runtime_call}
  0x0000000002a7be9e: jmpq   0x0000000002a7bdd7
  0x0000000002a7bea3: nop
  0x0000000002a7bea4: nop
  0x0000000002a7bea5: mov    0x2a8(%r15),%rax
  0x0000000002a7beac: movabs $0x0,%r10
  0x0000000002a7beb6: mov    %r10,0x2a8(%r15)
  0x0000000002a7bebd: movabs $0x0,%r10
  0x0000000002a7bec7: mov    %r10,0x2b0(%r15)
  0x0000000002a7bece: add    $0x60,%rsp
  0x0000000002a7bed2: pop    %rbp
  0x0000000002a7bed3: jmpq   0x00000000029cf0e0  ;   {runtime_call}
  0x0000000002a7bed8: hlt    
  0x0000000002a7bed9: hlt    
  0x0000000002a7beda: hlt    
  0x0000000002a7bedb: hlt    
  0x0000000002a7bedc: hlt    
  0x0000000002a7bedd: hlt    
  0x0000000002a7bede: hlt    
  0x0000000002a7bedf: hlt    
[Stub Code]
  0x0000000002a7bee0: nop                       ;   {no_reloc}
  0x0000000002a7bee1: nop
  0x0000000002a7bee2: nop
  0x0000000002a7bee3: nop
  0x0000000002a7bee4: nop
  0x0000000002a7bee5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002a7beef: jmpq   0x0000000002a7beef  ;   {runtime_call}
  0x0000000002a7bef4: nop
  0x0000000002a7bef5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002a7beff: jmpq   0x0000000002a7beff  ;   {runtime_call}
  0x0000000002a7bf04: nop
  0x0000000002a7bf05: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002a7bf0f: jmpq   0x0000000002a7bf0f  ;   {runtime_call}
  0x0000000002a7bf14: nop
  0x0000000002a7bf15: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002a7bf1f: jmpq   0x0000000002a7bf1f  ;   {runtime_call}
[Exception Handler]
  0x0000000002a7bf24: callq  0x00000000029cfc60  ;   {runtime_call}
  0x0000000002a7bf29: mov    %rsp,-0x28(%rsp)
  0x0000000002a7bf2e: sub    $0x80,%rsp
  0x0000000002a7bf35: mov    %rax,0x78(%rsp)
  0x0000000002a7bf3a: mov    %rcx,0x70(%rsp)
  0x0000000002a7bf3f: mov    %rdx,0x68(%rsp)
  0x0000000002a7bf44: mov    %rbx,0x60(%rsp)
  0x0000000002a7bf49: mov    %rbp,0x50(%rsp)
  0x0000000002a7bf4e: mov    %rsi,0x48(%rsp)
  0x0000000002a7bf53: mov    %rdi,0x40(%rsp)
  0x0000000002a7bf58: mov    %r8,0x38(%rsp)
  0x0000000002a7bf5d: mov    %r9,0x30(%rsp)
  0x0000000002a7bf62: mov    %r10,0x28(%rsp)
  0x0000000002a7bf67: mov    %r11,0x20(%rsp)
  0x0000000002a7bf6c: mov    %r12,0x18(%rsp)
  0x0000000002a7bf71: mov    %r13,0x10(%rsp)
  0x0000000002a7bf76: mov    %r14,0x8(%rsp)
  0x0000000002a7bf7b: mov    %r15,(%rsp)
  0x0000000002a7bf7f: movabs $0x623d8e30,%rcx   ;   {external_word}
  0x0000000002a7bf89: movabs $0x2a7bf29,%rdx    ;   {internal_word}
  0x0000000002a7bf93: mov    %rsp,%r8
  0x0000000002a7bf96: and    $0xfffffffffffffff0,%rsp
  0x0000000002a7bf9a: callq  0x0000000062093d40  ;   {runtime_call}
  0x0000000002a7bf9f: hlt    
[Deopt Handler Code]
  0x0000000002a7bfa0: movabs $0x2a7bfa0,%r10    ;   {section_word}
  0x0000000002a7bfaa: push   %r10
  0x0000000002a7bfac: jmpq   0x00000000029a7600  ;   {runtime_call}
  0x0000000002a7bfb1: hlt    
  0x0000000002a7bfb2: hlt    
  0x0000000002a7bfb3: hlt    
  0x0000000002a7bfb4: hlt    
  0x0000000002a7bfb5: hlt    
  0x0000000002a7bfb6: hlt    
  0x0000000002a7bfb7: hlt    
<nmethod compile_id='38' compiler='C1' level='3' entry='0x0000000002a7bb80' size='2256' address='0x0000000002a7b9d0' relocation_offset='288' insts_offset='432' stub_offset='1296' scopes_data_offset='1520' scopes_pcs_offset='1752' dependencies_offset='2232' nul_chk_table_offset='2240' method='java/lang/String getChars (II[CI)V' bytes='62' count='896' iicount='896' stamp='0.833'/>
<tty_done stamp='1.172'/>
</tty>
<compilation_log thread='14520'>
<start_compile_thread name='C1 CompilerThread2' thread='14520' process='16140' stamp='0.276'/>
<task compile_id='1' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='4864' iicount='4864' level='3' stamp='0.285'>
<phase name='buildIR' stamp='0.285'>
<type id='724' name='void'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='832' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' iicount='4864'/>
<parse method='832'  stamp='0.285'>
<parse_done stamp='0.285'/>
</parse>
<phase name='optimize_blocks' stamp='0.285'>
<phase_done name='optimize_blocks' stamp='0.285'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.285'>
<phase_done name='rangeCheckElimination' stamp='0.285'/>
</phase>
<phase name='optimize_null_checks' stamp='0.285'>
<phase_done name='optimize_null_checks' stamp='0.285'/>
</phase>
<phase_done name='buildIR' stamp='0.285'/>
</phase>
<phase name='emit_lir' stamp='0.285'>
<phase name='lirGeneration' stamp='0.285'>
<phase_done name='lirGeneration' stamp='0.286'/>
</phase>
<phase name='linearScan' stamp='0.286'>
<phase_done name='linearScan' stamp='0.286'/>
</phase>
<phase_done name='emit_lir' stamp='0.286'/>
</phase>
<phase name='codeemit' stamp='0.286'>
<phase_done name='codeemit' stamp='0.286'/>
</phase>
<phase name='codeinstall' stamp='0.286'>
<phase_done name='codeinstall' stamp='0.290'/>
</phase>
<code_cache total_blobs='238' nmethods='1' adapters='152' free_code_cache='250596288'/>
<task_done success='1' nmsize='336' count='4868' stamp='0.290'/>
</task>
<task compile_id='2' method='java/lang/String hashCode ()I' bytes='55' count='839' backedge_count='17408' iicount='839' level='3' stamp='0.291'>
<phase name='buildIR' stamp='0.291'>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='hashCode' return='722' flags='1' bytes='55' iicount='839'/>
<parse method='832'  stamp='0.291'>
<parse_done stamp='0.291'/>
</parse>
<phase name='optimize_blocks' stamp='0.291'>
<phase_done name='optimize_blocks' stamp='0.291'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.291'>
<phase_done name='rangeCheckElimination' stamp='0.291'/>
</phase>
<phase name='optimize_null_checks' stamp='0.291'>
<phase_done name='optimize_null_checks' stamp='0.291'/>
</phase>
<phase_done name='buildIR' stamp='0.291'/>
</phase>
<phase name='emit_lir' stamp='0.291'>
<phase name='lirGeneration' stamp='0.291'>
<phase_done name='lirGeneration' stamp='0.291'/>
</phase>
<phase name='linearScan' stamp='0.291'>
<phase_done name='linearScan' stamp='0.291'/>
</phase>
<phase_done name='emit_lir' stamp='0.291'/>
</phase>
<phase name='codeemit' stamp='0.291'>
<phase_done name='codeemit' stamp='0.291'/>
</phase>
<phase name='codeinstall' stamp='0.291'>
<phase_done name='codeinstall' stamp='0.299'/>
</phase>
<code_cache total_blobs='241' nmethods='2' adapters='154' free_code_cache='250593792'/>
<task_done success='1' nmsize='656' count='844' backedge_count='17683' stamp='0.299'/>
</task>
<task compile_id='4' method='java/lang/String indexOf (II)I' bytes='70' count='648' backedge_count='22808' iicount='648' level='3' stamp='0.308'>
<phase name='buildIR' stamp='0.308'>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='indexOf' return='722' arguments='722 722' flags='1' bytes='70' iicount='659'/>
<parse method='832'  stamp='0.308'>
<bc code='183' bci='66'/>
<method id='834' holder='730' name='indexOfSupplementary' return='722' arguments='722 722' flags='2' bytes='71' iicount='1'/>
<call method='834' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.308'/>
</parse>
<phase name='optimize_blocks' stamp='0.308'>
<phase_done name='optimize_blocks' stamp='0.308'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.308'>
<phase_done name='rangeCheckElimination' stamp='0.308'/>
</phase>
<phase name='optimize_null_checks' stamp='0.308'>
<phase_done name='optimize_null_checks' stamp='0.308'/>
</phase>
<phase_done name='buildIR' stamp='0.308'/>
</phase>
<phase name='emit_lir' stamp='0.308'>
<phase name='lirGeneration' stamp='0.308'>
<phase_done name='lirGeneration' stamp='0.308'/>
</phase>
<phase name='linearScan' stamp='0.308'>
<phase_done name='linearScan' stamp='0.308'/>
</phase>
<phase_done name='emit_lir' stamp='0.308'/>
</phase>
<phase name='codeemit' stamp='0.308'>
<phase_done name='codeemit' stamp='0.308'/>
</phase>
<phase name='codeinstall' stamp='0.308'>
<phase_done name='codeinstall' stamp='0.317'/>
</phase>
<code_cache total_blobs='248' nmethods='4' adapters='158' free_code_cache='250556736'/>
<task_done success='1' nmsize='904' count='788' backedge_count='27533' stamp='0.317'/>
</task>
<task compile_id='7' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='1071' iicount='1071' level='3' stamp='0.317'>
<phase name='buildIR' stamp='0.317'>
<klass id='821' name='[C' flags='1041'/>
<type id='722' name='int'/>
<klass id='832' name='java/util/Arrays' flags='1'/>
<method id='833' holder='832' name='copyOfRange' return='821' arguments='821 722 722' flags='9' bytes='63' iicount='1071'/>
<parse method='833'  stamp='0.317'>
<bc code='183' bci='16'/>
<type id='724' name='void'/>
<klass id='795' name='java/lang/StringBuilder' flags='17'/>
<method id='836' holder='795' name='&lt;init&gt;' return='724' flags='1' bytes='7' iicount='268'/>
<call method='836' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='836'>
<bc code='183' bci='3'/>
<klass id='793' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='838' holder='793' name='&lt;init&gt;' return='724' arguments='722' flags='0' bytes='12' iicount='444'/>
<call method='838' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='838'>
<bc code='183' bci='1'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='840' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' compile_id='1' compiler='C1' level='3' iicount='5062'/>
<call method='840' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='840'>
<parse_done stamp='0.317'/>
</parse>
<parse_done stamp='0.318'/>
</parse>
<parse_done stamp='0.318'/>
</parse>
<bc code='182' bci='20'/>
<method id='842' holder='795' name='append' return='795' arguments='722' flags='1' bytes='8' iicount='1'/>
<call method='842' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='842'>
<bc code='183' bci='2'/>
<method id='844' holder='793' name='append' return='793' arguments='722' flags='1' bytes='62' iicount='1'/>
<call method='844' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.318'/>
</parse>
<bc code='182' bci='25'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='847' holder='795' name='append' return='795' arguments='730' flags='1' bytes='8' iicount='632'/>
<call method='847' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='847'>
<bc code='183' bci='2'/>
<method id='849' holder='793' name='append' return='793' arguments='730' flags='1' bytes='50' iicount='767'/>
<call method='849' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.318'/>
</parse>
<bc code='182' bci='29'/>
<call method='842' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='842'>
<bc code='183' bci='2'/>
<call method='844' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.318'/>
</parse>
<bc code='182' bci='32'/>
<method id='851' holder='795' name='toString' return='730' flags='1' bytes='17' iicount='316'/>
<call method='851' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='851'>
<bc code='183' bci='13'/>
<method id='853' holder='730' name='&lt;init&gt;' return='724' arguments='821 722 722' flags='1' bytes='82' iicount='947'/>
<call method='853' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.318'/>
</parse>
<bc code='183' bci='35'/>
<klass id='835' name='java/lang/IllegalArgumentException' flags='1'/>
<method id='855' holder='835' name='&lt;init&gt;' return='724' arguments='730' flags='1' bytes='6' iicount='1'/>
<call method='855' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<bc code='184' bci='54'/>
<klass id='857' name='java/lang/Math' flags='17'/>
<method id='858' holder='857' name='min' return='722' arguments='722 722' flags='9' bytes='11' iicount='2064'/>
<call method='858' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='858'>
<parse_done stamp='0.318'/>
</parse>
<bc code='184' bci='57'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='860' holder='735' name='arraycopy' return='724' arguments='729 722 729 722 722' flags='265' bytes='0' compile_id='3' compile_kind='c2n' level='0' iicount='2944'/>
<call method='860' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.318'/>
</parse>
<phase name='optimize_blocks' stamp='0.318'>
<phase_done name='optimize_blocks' stamp='0.318'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.318'>
<phase_done name='rangeCheckElimination' stamp='0.318'/>
</phase>
<phase name='optimize_null_checks' stamp='0.318'>
<phase_done name='optimize_null_checks' stamp='0.318'/>
</phase>
<phase_done name='buildIR' stamp='0.318'/>
</phase>
<phase name='emit_lir' stamp='0.318'>
<phase name='lirGeneration' stamp='0.318'>
<phase_done name='lirGeneration' stamp='0.318'/>
</phase>
<phase name='linearScan' stamp='0.318'>
<phase_done name='linearScan' stamp='0.319'/>
</phase>
<phase_done name='emit_lir' stamp='0.319'/>
</phase>
<phase name='codeemit' stamp='0.319'>
<phase_done name='codeemit' stamp='0.319'/>
</phase>
<phase name='codeinstall' stamp='0.319'>
<phase_done name='codeinstall' stamp='0.347'/>
</phase>
<code_cache total_blobs='251' nmethods='5' adapters='160' free_code_cache='250550720'/>
<task_done success='1' nmsize='2872' count='1071' inlined_bytes='72' stamp='0.347'/>
</task>
<task compile_id='8' method='java/lang/Math min (II)I' bytes='11' count='2064' iicount='2064' level='3' stamp='0.347'>
<phase name='buildIR' stamp='0.347'>
<type id='722' name='int'/>
<klass id='832' name='java/lang/Math' flags='17'/>
<method id='833' holder='832' name='min' return='722' arguments='722 722' flags='9' bytes='11' iicount='2064'/>
<parse method='833'  stamp='0.347'>
<parse_done stamp='0.347'/>
</parse>
<phase name='optimize_blocks' stamp='0.347'>
<phase_done name='optimize_blocks' stamp='0.347'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.347'>
<phase_done name='rangeCheckElimination' stamp='0.347'/>
</phase>
<phase name='optimize_null_checks' stamp='0.347'>
<phase_done name='optimize_null_checks' stamp='0.347'/>
</phase>
<phase_done name='buildIR' stamp='0.347'/>
</phase>
<phase name='emit_lir' stamp='0.347'>
<phase name='lirGeneration' stamp='0.347'>
<phase_done name='lirGeneration' stamp='0.347'/>
</phase>
<phase name='linearScan' stamp='0.347'>
<phase_done name='linearScan' stamp='0.347'/>
</phase>
<phase_done name='emit_lir' stamp='0.347'/>
</phase>
<phase name='codeemit' stamp='0.347'>
<phase_done name='codeemit' stamp='0.347'/>
</phase>
<phase name='codeinstall' stamp='0.347'>
<phase_done name='codeinstall' stamp='0.351'/>
</phase>
<code_cache total_blobs='252' nmethods='6' adapters='160' free_code_cache='250549760'/>
<task_done success='1' nmsize='400' count='2065' stamp='0.351'/>
</task>
<task compile_id='5' method='java/lang/String &lt;init&gt; ([CII)V' bytes='82' count='947' iicount='947' level='3' stamp='0.351'>
<phase name='buildIR' stamp='0.351'>
<type id='724' name='void'/>
<klass id='821' name='[C' flags='1041'/>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='&lt;init&gt;' return='724' arguments='821 722 722' flags='1' bytes='82' iicount='947'/>
<parse method='832'  stamp='0.351'>
<bc code='183' bci='1'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='834' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' compile_id='1' compiler='C1' level='3' iicount='5075'/>
<call method='834' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='834'>
<parse_done stamp='0.351'/>
</parse>
<bc code='183' bci='13'/>
<klass id='836' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<method id='837' holder='836' name='&lt;init&gt;' return='724' arguments='722' unloaded='1'/>
<call method='837' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='30'/>
<call method='837' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='65'/>
<call method='837' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='184' bci='75'/>
<klass id='839' name='java/util/Arrays' flags='1'/>
<method id='840' holder='839' name='copyOfRange' return='821' arguments='821 722 722' flags='9' bytes='63' compile_id='7' compiler='C1' level='3' iicount='1071'/>
<call method='840' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.351'/>
</parse>
<phase name='optimize_blocks' stamp='0.351'>
<phase_done name='optimize_blocks' stamp='0.351'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.351'>
<phase_done name='rangeCheckElimination' stamp='0.351'/>
</phase>
<phase name='optimize_null_checks' stamp='0.351'>
<phase_done name='optimize_null_checks' stamp='0.351'/>
</phase>
<phase_done name='buildIR' stamp='0.351'/>
</phase>
<phase name='emit_lir' stamp='0.351'>
<phase name='lirGeneration' stamp='0.351'>
<phase_done name='lirGeneration' stamp='0.351'/>
</phase>
<phase name='linearScan' stamp='0.351'>
<phase_done name='linearScan' stamp='0.352'/>
</phase>
<phase_done name='emit_lir' stamp='0.352'/>
</phase>
<phase name='codeemit' stamp='0.352'>
<phase_done name='codeemit' stamp='0.352'/>
</phase>
<phase name='codeinstall' stamp='0.352'>
<phase_done name='codeinstall' stamp='0.367'/>
</phase>
<code_cache total_blobs='253' nmethods='7' adapters='160' free_code_cache='250547008'/>
<task_done success='1' nmsize='1272' count='947' inlined_bytes='1' stamp='0.367'/>
</task>
<task compile_id='9' method='java/lang/CharacterData of (I)Ljava/lang/CharacterData;' bytes='120' count='4224' iicount='4224' level='3' stamp='0.367'>
<phase name='buildIR' stamp='0.367'>
<klass id='832' name='java/lang/CharacterData' flags='1024'/>
<type id='722' name='int'/>
<method id='833' holder='832' name='of' return='832' arguments='722' flags='24' bytes='120' iicount='4224'/>
<parse method='833'  stamp='0.367'>
<parse_done stamp='0.367'/>
</parse>
<phase name='optimize_blocks' stamp='0.367'>
<phase_done name='optimize_blocks' stamp='0.367'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.367'>
<phase_done name='rangeCheckElimination' stamp='0.367'/>
</phase>
<phase name='optimize_null_checks' stamp='0.367'>
<phase_done name='optimize_null_checks' stamp='0.367'/>
</phase>
<phase_done name='buildIR' stamp='0.367'/>
</phase>
<phase name='emit_lir' stamp='0.367'>
<phase name='lirGeneration' stamp='0.367'>
<phase_done name='lirGeneration' stamp='0.367'/>
</phase>
<phase name='linearScan' stamp='0.367'>
<phase_done name='linearScan' stamp='0.367'/>
</phase>
<phase_done name='emit_lir' stamp='0.367'/>
</phase>
<phase name='codeemit' stamp='0.367'>
<phase_done name='codeemit' stamp='0.368'/>
</phase>
<phase name='codeinstall' stamp='0.368'>
<phase_done name='codeinstall' stamp='0.385'/>
</phase>
<code_cache total_blobs='257' nmethods='8' adapters='161' free_code_cache='250532416'/>
<task_done success='1' nmsize='1456' count='4242' stamp='0.385'/>
</task>
<task compile_id='10' method='java/lang/CharacterDataLatin1 getProperties (I)I' bytes='11' count='4246' iicount='4246' level='3' stamp='0.388'>
<phase name='buildIR' stamp='0.388'>
<type id='722' name='int'/>
<klass id='832' name='java/lang/CharacterDataLatin1' flags='0'/>
<method id='833' holder='832' name='getProperties' return='722' arguments='722' flags='0' bytes='11' iicount='4268'/>
<parse method='833'  stamp='0.388'>
<parse_done stamp='0.388'/>
</parse>
<phase name='optimize_blocks' stamp='0.388'>
<phase_done name='optimize_blocks' stamp='0.388'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.388'>
<phase_done name='rangeCheckElimination' stamp='0.388'/>
</phase>
<phase name='optimize_null_checks' stamp='0.388'>
<phase_done name='optimize_null_checks' stamp='0.388'/>
</phase>
<phase_done name='buildIR' stamp='0.388'/>
</phase>
<phase name='emit_lir' stamp='0.388'>
<phase name='lirGeneration' stamp='0.388'>
<phase_done name='lirGeneration' stamp='0.388'/>
</phase>
<phase name='linearScan' stamp='0.388'>
<phase_done name='linearScan' stamp='0.388'/>
</phase>
<phase_done name='emit_lir' stamp='0.388'/>
</phase>
<phase name='codeemit' stamp='0.388'>
<phase_done name='codeemit' stamp='0.388'/>
</phase>
<phase name='codeinstall' stamp='0.388'>
<phase_done name='codeinstall' stamp='0.392'/>
</phase>
<code_cache total_blobs='260' nmethods='10' adapters='161' free_code_cache='250525376'/>
<task_done success='1' nmsize='400' count='4581' stamp='0.392'/>
</task>
<task compile_id='14' method='java/lang/Character toUpperCase (C)C' bytes='6' count='384' iicount='384' level='3' stamp='0.397'>
<phase name='buildIR' stamp='0.401'>
<type id='717' name='char'/>
<klass id='810' name='java/lang/Character' flags='17'/>
<method id='832' holder='810' name='toUpperCase' return='717' arguments='717' flags='9' bytes='6' iicount='384'/>
<parse method='832'  stamp='0.401'>
<bc code='184' bci='1'/>
<type id='722' name='int'/>
<method id='834' holder='810' name='toUpperCase' return='722' arguments='722' flags='9' bytes='9' iicount='384'/>
<call method='834' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='834'>
<bc code='184' bci='1'/>
<klass id='836' name='java/lang/CharacterData' flags='1024'/>
<method id='837' holder='836' name='of' return='836' arguments='722' flags='24' bytes='120' compile_id='9' compiler='C1' level='3' iicount='4582'/>
<call method='837' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='5'/>
<method id='839' holder='836' name='toUpperCase' return='722' arguments='722' flags='1024' bytes='0' iicount='1'/>
<call method='839' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.401'/>
</parse>
<parse_done stamp='0.401'/>
</parse>
<phase name='optimize_blocks' stamp='0.401'>
<phase_done name='optimize_blocks' stamp='0.401'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.401'>
<phase_done name='rangeCheckElimination' stamp='0.401'/>
</phase>
<phase name='optimize_null_checks' stamp='0.401'>
<phase_done name='optimize_null_checks' stamp='0.401'/>
</phase>
<phase_done name='buildIR' stamp='0.401'/>
</phase>
<phase name='emit_lir' stamp='0.401'>
<phase name='lirGeneration' stamp='0.401'>
<phase_done name='lirGeneration' stamp='0.401'/>
</phase>
<phase name='linearScan' stamp='0.401'>
<phase_done name='linearScan' stamp='0.401'/>
</phase>
<phase_done name='emit_lir' stamp='0.401'/>
</phase>
<phase name='codeemit' stamp='0.401'>
<phase_done name='codeemit' stamp='0.401'/>
</phase>
<phase name='codeinstall' stamp='0.401'>
<phase_done name='codeinstall' stamp='0.407'/>
</phase>
<code_cache total_blobs='260' nmethods='13' adapters='161' free_code_cache='250539200'/>
<task_done success='1' nmsize='664' count='384' inlined_bytes='9' stamp='0.407'/>
</task>
<task compile_id='15' method='java/lang/AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='50' count='774' iicount='774' level='3' stamp='0.407'>
<phase name='buildIR' stamp='0.407'>
<klass id='793' name='java/lang/AbstractStringBuilder' flags='1024'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='793' name='append' return='793' arguments='730' flags='1' bytes='50' iicount='774'/>
<parse method='832'  stamp='0.407'>
<bc code='183' bci='5'/>
<method id='834' holder='793' name='appendNull' return='793' flags='2' bytes='56' iicount='1'/>
<call method='834' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='10'/>
<type id='722' name='int'/>
<method id='836' holder='730' name='length' return='722' flags='1' bytes='6' compile_id='13' compiler='C2' level='4' iicount='28194'/>
<call method='836' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='836'>
<parse_done stamp='0.407'/>
</parse>
<bc code='183' bci='21'/>
<type id='724' name='void'/>
<method id='838' holder='793' name='ensureCapacityInternal' return='724' arguments='722' flags='2' bytes='27' iicount='8776'/>
<call method='838' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='838'>
<bc code='183' bci='17'/>
<method id='840' holder='793' name='newCapacity' return='722' arguments='722' flags='2' bytes='39' iicount='356'/>
<call method='840' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='20'/>
<klass id='821' name='[C' flags='1041'/>
<klass id='842' name='java/util/Arrays' flags='1'/>
<method id='843' holder='842' name='copyOf' return='821' arguments='821 722' flags='9' bytes='19' iicount='413'/>
<call method='843' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='843'>
<bc code='184' bci='11'/>
<klass id='845' name='java/lang/Math' flags='17'/>
<method id='846' holder='845' name='min' return='722' arguments='722 722' flags='9' bytes='11' compile_id='8' compiler='C1' level='3' iicount='2254'/>
<call method='846' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='846'>
<parse_done stamp='0.408'/>
</parse>
<bc code='184' bci='14'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='848' holder='735' name='arraycopy' return='724' arguments='729 722 729 722 722' flags='265' bytes='0' compile_id='3' compile_kind='c2n' level='0' iicount='2944'/>
<call method='848' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.408'/>
</parse>
<parse_done stamp='0.408'/>
</parse>
<bc code='182' bci='35'/>
<method id='850' holder='730' name='getChars' return='724' arguments='722 722 821 722' flags='1' bytes='62' iicount='846'/>
<call method='850' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.408'/>
</parse>
<phase name='optimize_blocks' stamp='0.408'>
<phase_done name='optimize_blocks' stamp='0.408'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.408'>
<phase_done name='rangeCheckElimination' stamp='0.408'/>
</phase>
<phase name='optimize_null_checks' stamp='0.408'>
<phase_done name='optimize_null_checks' stamp='0.408'/>
</phase>
<phase_done name='buildIR' stamp='0.408'/>
</phase>
<phase name='emit_lir' stamp='0.408'>
<phase name='lirGeneration' stamp='0.408'>
<phase_done name='lirGeneration' stamp='0.408'/>
</phase>
<phase name='linearScan' stamp='0.408'>
<phase_done name='linearScan' stamp='0.408'/>
</phase>
<phase_done name='emit_lir' stamp='0.408'/>
</phase>
<phase name='codeemit' stamp='0.408'>
<phase_done name='codeemit' stamp='0.408'/>
</phase>
<phase name='codeinstall' stamp='0.408'>
<phase_done name='codeinstall' stamp='0.431'/>
</phase>
<code_cache total_blobs='267' nmethods='14' adapters='167' free_code_cache='250532416'/>
<task_done success='1' nmsize='1880' count='777' inlined_bytes='63' stamp='0.431'/>
</task>
<task compile_id='18' method='java/lang/String indexOf (I)I' bytes='7' count='748' iicount='748' level='3' stamp='0.431'>
<phase name='buildIR' stamp='0.431'>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='indexOf' return='722' arguments='722' flags='1' bytes='7' iicount='748'/>
<parse method='832'  stamp='0.431'>
<bc code='182' bci='3'/>
<method id='834' holder='730' name='indexOf' return='722' arguments='722 722' flags='1' bytes='70' compile_id='4' compiler='C1' level='3' iicount='904'/>
<call method='834' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.431'/>
</parse>
<phase name='optimize_blocks' stamp='0.431'>
<phase_done name='optimize_blocks' stamp='0.431'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.431'>
<phase_done name='rangeCheckElimination' stamp='0.431'/>
</phase>
<phase name='optimize_null_checks' stamp='0.431'>
<phase_done name='optimize_null_checks' stamp='0.431'/>
</phase>
<phase_done name='buildIR' stamp='0.431'/>
</phase>
<phase name='emit_lir' stamp='0.431'>
<phase name='lirGeneration' stamp='0.431'>
<phase_done name='lirGeneration' stamp='0.431'/>
</phase>
<phase name='linearScan' stamp='0.431'>
<phase_done name='linearScan' stamp='0.431'/>
</phase>
<phase_done name='emit_lir' stamp='0.431'/>
</phase>
<phase name='codeemit' stamp='0.431'>
<phase_done name='codeemit' stamp='0.431'/>
</phase>
<phase name='codeinstall' stamp='0.431'>
<phase_done name='codeinstall' stamp='0.446'/>
</phase>
<code_cache total_blobs='268' nmethods='15' adapters='167' free_code_cache='250531328'/>
<task_done success='1' nmsize='520' count='748' stamp='0.446'/>
</task>
<task compile_id='17' method='java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder;' bytes='8' count='644' iicount='644' level='3' stamp='0.446'>
<phase name='buildIR' stamp='0.446'>
<klass id='795' name='java/lang/StringBuilder' flags='17'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='795' name='append' return='795' arguments='730' flags='1' bytes='8' iicount='644'/>
<parse method='832'  stamp='0.446'>
<bc code='183' bci='2'/>
<klass id='793' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='834' holder='793' name='append' return='793' arguments='730' flags='1' bytes='50' compile_id='15' compiler='C1' level='3' iicount='779'/>
<call method='834' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.447'/>
</parse>
<phase name='optimize_blocks' stamp='0.447'>
<phase_done name='optimize_blocks' stamp='0.447'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.447'>
<phase_done name='rangeCheckElimination' stamp='0.447'/>
</phase>
<phase name='optimize_null_checks' stamp='0.447'>
<phase_done name='optimize_null_checks' stamp='0.447'/>
</phase>
<phase_done name='buildIR' stamp='0.447'/>
</phase>
<phase name='emit_lir' stamp='0.447'>
<phase name='lirGeneration' stamp='0.447'>
<phase_done name='lirGeneration' stamp='0.447'/>
</phase>
<phase name='linearScan' stamp='0.447'>
<phase_done name='linearScan' stamp='0.447'/>
</phase>
<phase_done name='emit_lir' stamp='0.447'/>
</phase>
<phase name='codeemit' stamp='0.447'>
<phase_done name='codeemit' stamp='0.447'/>
</phase>
<phase name='codeinstall' stamp='0.447'>
<phase_done name='codeinstall' stamp='0.451'/>
</phase>
<code_cache total_blobs='269' nmethods='16' adapters='167' free_code_cache='250530368'/>
<task_done success='1' nmsize='392' count='654' stamp='0.451'/>
</task>
<task compile_id='20' method='java/lang/CharacterDataLatin1 getProperties (I)I' bytes='11' count='4718' iicount='4718' level='1' stamp='0.451'>
<phase name='buildIR' stamp='0.451'>
<type id='722' name='int'/>
<klass id='832' name='java/lang/CharacterDataLatin1' flags='0'/>
<method id='833' holder='832' name='getProperties' return='722' arguments='722' flags='0' bytes='11' compile_id='10' compiler='C1' level='3' iicount='4718'/>
<parse method='833'  stamp='0.451'>
<parse_done stamp='0.451'/>
</parse>
<phase name='optimize_blocks' stamp='0.451'>
<phase_done name='optimize_blocks' stamp='0.451'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.451'>
<phase_done name='rangeCheckElimination' stamp='0.451'/>
</phase>
<phase name='optimize_null_checks' stamp='0.451'>
<phase_done name='optimize_null_checks' stamp='0.451'/>
</phase>
<phase_done name='buildIR' stamp='0.451'/>
</phase>
<phase name='emit_lir' stamp='0.451'>
<phase name='lirGeneration' stamp='0.451'>
<phase_done name='lirGeneration' stamp='0.451'/>
</phase>
<phase name='linearScan' stamp='0.451'>
<phase_done name='linearScan' stamp='0.451'/>
</phase>
<phase_done name='emit_lir' stamp='0.451'/>
</phase>
<phase name='codeemit' stamp='0.451'>
<phase_done name='codeemit' stamp='0.451'/>
</phase>
<phase name='codeinstall' stamp='0.451'>
<phase_done name='codeinstall' stamp='0.455'/>
</phase>
<code_cache total_blobs='270' nmethods='17' adapters='167' free_code_cache='250529472'/>
<task_done success='1' nmsize='336' count='4727' stamp='0.455'/>
</task>
<task compile_id='16' method='java/lang/Character toUpperCase (I)I' bytes='9' count='498' iicount='498' level='3' stamp='0.455'>
<phase name='buildIR' stamp='0.455'>
<type id='722' name='int'/>
<klass id='810' name='java/lang/Character' flags='17'/>
<method id='832' holder='810' name='toUpperCase' return='722' arguments='722' flags='9' bytes='9' iicount='510'/>
<parse method='832'  stamp='0.455'>
<bc code='184' bci='1'/>
<klass id='835' name='java/lang/CharacterData' flags='1024'/>
<method id='836' holder='835' name='of' return='835' arguments='722' flags='24' bytes='120' compile_id='9' compiler='C1' level='3' iicount='4741'/>
<call method='836' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='5'/>
<method id='838' holder='835' name='toUpperCase' return='722' arguments='722' flags='1024' bytes='0' iicount='1'/>
<call method='838' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.456'/>
</parse>
<phase name='optimize_blocks' stamp='0.456'>
<phase_done name='optimize_blocks' stamp='0.456'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.456'>
<phase_done name='rangeCheckElimination' stamp='0.456'/>
</phase>
<phase name='optimize_null_checks' stamp='0.456'>
<phase_done name='optimize_null_checks' stamp='0.456'/>
</phase>
<phase_done name='buildIR' stamp='0.456'/>
</phase>
<phase name='emit_lir' stamp='0.456'>
<phase name='lirGeneration' stamp='0.456'>
<phase_done name='lirGeneration' stamp='0.456'/>
</phase>
<phase name='linearScan' stamp='0.456'>
<phase_done name='linearScan' stamp='0.456'/>
</phase>
<phase_done name='emit_lir' stamp='0.456'/>
</phase>
<phase name='codeemit' stamp='0.456'>
<phase_done name='codeemit' stamp='0.456'/>
</phase>
<phase name='codeinstall' stamp='0.456'>
<phase_done name='codeinstall' stamp='0.462'/>
</phase>
<code_cache total_blobs='273' nmethods='18' adapters='169' free_code_cache='250527168'/>
<task_done success='1' nmsize='568' count='510' stamp='0.462'/>
</task>
<task compile_id='22' method='java/lang/Character toLowerCase (I)I' bytes='9' count='3969' iicount='3969' level='3' stamp='0.462'>
<phase name='buildIR' stamp='0.462'>
<type id='722' name='int'/>
<klass id='810' name='java/lang/Character' flags='17'/>
<method id='832' holder='810' name='toLowerCase' return='722' arguments='722' flags='9' bytes='9' iicount='3969'/>
<parse method='832'  stamp='0.462'>
<bc code='184' bci='1'/>
<klass id='835' name='java/lang/CharacterData' flags='1024'/>
<method id='836' holder='835' name='of' return='835' arguments='722' flags='24' bytes='120' compile_id='9' compiler='C1' level='3' iicount='4741'/>
<call method='836' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='5'/>
<method id='838' holder='835' name='toLowerCase' return='722' arguments='722' flags='1024' bytes='0' iicount='1'/>
<call method='838' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.462'/>
</parse>
<phase name='optimize_blocks' stamp='0.462'>
<phase_done name='optimize_blocks' stamp='0.462'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.462'>
<phase_done name='rangeCheckElimination' stamp='0.462'/>
</phase>
<phase name='optimize_null_checks' stamp='0.462'>
<phase_done name='optimize_null_checks' stamp='0.462'/>
</phase>
<phase_done name='buildIR' stamp='0.462'/>
</phase>
<phase name='emit_lir' stamp='0.462'>
<phase name='lirGeneration' stamp='0.462'>
<phase_done name='lirGeneration' stamp='0.462'/>
</phase>
<phase name='linearScan' stamp='0.462'>
<phase_done name='linearScan' stamp='0.462'/>
</phase>
<phase_done name='emit_lir' stamp='0.462'/>
</phase>
<phase name='codeemit' stamp='0.462'>
<phase_done name='codeemit' stamp='0.462'/>
</phase>
<phase name='codeinstall' stamp='0.462'>
<phase_done name='codeinstall' stamp='0.467'/>
</phase>
<code_cache total_blobs='274' nmethods='19' adapters='169' free_code_cache='250525952'/>
<task_done success='1' nmsize='568' count='3969' stamp='0.467'/>
</task>
<task compile_id='23' method='java/lang/CharacterDataLatin1 toLowerCase (I)I' bytes='39' count='3969' iicount='3969' level='3' stamp='0.467'>
<phase name='buildIR' stamp='0.467'>
<type id='722' name='int'/>
<klass id='832' name='java/lang/CharacterDataLatin1' flags='0'/>
<method id='833' holder='832' name='toLowerCase' return='722' arguments='722' flags='0' bytes='39' iicount='3969'/>
<parse method='833'  stamp='0.468'>
<bc code='182' bci='4'/>
<method id='835' holder='832' name='getProperties' return='722' arguments='722' flags='0' bytes='11' compile_id='20' compiler='C1' level='1' iicount='4727'/>
<call method='835' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='832'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='832'/>
<parse method='835'>
<parse_done stamp='0.468'/>
</parse>
<parse_done stamp='0.468'/>
</parse>
<phase name='optimize_blocks' stamp='0.468'>
<phase_done name='optimize_blocks' stamp='0.468'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.468'>
<phase_done name='rangeCheckElimination' stamp='0.468'/>
</phase>
<phase name='optimize_null_checks' stamp='0.468'>
<phase_done name='optimize_null_checks' stamp='0.468'/>
</phase>
<phase_done name='buildIR' stamp='0.468'/>
</phase>
<phase name='emit_lir' stamp='0.468'>
<phase name='lirGeneration' stamp='0.468'>
<phase_done name='lirGeneration' stamp='0.468'/>
</phase>
<phase name='linearScan' stamp='0.468'>
<phase_done name='linearScan' stamp='0.468'/>
</phase>
<phase_done name='emit_lir' stamp='0.468'/>
</phase>
<phase name='codeemit' stamp='0.468'>
<phase_done name='codeemit' stamp='0.468'/>
</phase>
<phase name='codeinstall' stamp='0.468'>
<dependency type='leaf_type' ctxk='832'/>
<phase_done name='codeinstall' stamp='0.474'/>
</phase>
<code_cache total_blobs='277' nmethods='20' adapters='171' free_code_cache='250523520'/>
<task_done success='1' nmsize='624' count='3971' inlined_bytes='11' stamp='0.474'/>
</task>
<task compile_id='24' method='java/lang/String startsWith (Ljava/lang/String;I)Z' bytes='72' count='760' backedge_count='1219' iicount='760' level='3' stamp='0.474'>
<phase name='buildIR' stamp='0.474'>
<type id='716' name='boolean'/>
<klass id='730' name='java/lang/String' flags='17'/>
<type id='722' name='int'/>
<method id='832' holder='730' name='startsWith' return='716' arguments='730 722' flags='1' bytes='72' iicount='760'/>
<parse method='832'  stamp='0.474'>
<parse_done stamp='0.474'/>
</parse>
<phase name='optimize_blocks' stamp='0.474'>
<phase_done name='optimize_blocks' stamp='0.474'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.474'>
<phase_done name='rangeCheckElimination' stamp='0.474'/>
</phase>
<phase name='optimize_null_checks' stamp='0.474'>
<phase_done name='optimize_null_checks' stamp='0.474'/>
</phase>
<phase_done name='buildIR' stamp='0.474'/>
</phase>
<phase name='emit_lir' stamp='0.474'>
<phase name='lirGeneration' stamp='0.474'>
<phase_done name='lirGeneration' stamp='0.474'/>
</phase>
<phase name='linearScan' stamp='0.474'>
<phase_done name='linearScan' stamp='0.474'/>
</phase>
<phase_done name='emit_lir' stamp='0.474'/>
</phase>
<phase name='codeemit' stamp='0.474'>
<phase_done name='codeemit' stamp='0.474'/>
</phase>
<phase name='codeinstall' stamp='0.474'>
<phase_done name='codeinstall' stamp='0.483'/>
</phase>
<code_cache total_blobs='280' nmethods='21' adapters='171' free_code_cache='250510272'/>
<task_done success='1' nmsize='816' count='761' backedge_count='1219' stamp='0.483'/>
</task>
<task compile_id='29' method='java/lang/StringBuffer append (C)Ljava/lang/StringBuffer;' bytes='13' count='5248' iicount='5248' level='3' stamp='0.486'>
<phase name='buildIR' stamp='0.486'>
<klass id='794' name='java/lang/StringBuffer' flags='17'/>
<type id='717' name='char'/>
<method id='832' holder='794' name='append' return='794' arguments='717' flags='33' bytes='13' iicount='5248'/>
<parse method='832'  stamp='0.486'>
<bc code='183' bci='7'/>
<klass id='793' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='834' holder='793' name='append' return='793' arguments='717' flags='1' bytes='29' iicount='8052'/>
<call method='834' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='834'>
<bc code='183' bci='7'/>
<type id='724' name='void'/>
<type id='722' name='int'/>
<method id='836' holder='793' name='ensureCapacityInternal' return='724' arguments='722' flags='2' bytes='27' iicount='8868'/>
<call method='836' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='836'>
<bc code='183' bci='17'/>
<method id='838' holder='793' name='newCapacity' return='722' arguments='722' flags='2' bytes='39' iicount='372'/>
<call method='838' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='20'/>
<klass id='821' name='[C' flags='1041'/>
<klass id='840' name='java/util/Arrays' flags='1'/>
<method id='841' holder='840' name='copyOf' return='821' arguments='821 722' flags='9' bytes='19' iicount='437'/>
<call method='841' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='841'>
<bc code='184' bci='11'/>
<klass id='843' name='java/lang/Math' flags='17'/>
<method id='844' holder='843' name='min' return='722' arguments='722 722' flags='9' bytes='11' compile_id='8' compiler='C1' level='3' iicount='2401'/>
<call method='844' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='844'>
<parse_done stamp='0.486'/>
</parse>
<bc code='184' bci='14'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='846' holder='735' name='arraycopy' return='724' arguments='729 722 729 722 722' flags='265' bytes='0' compile_id='3' compile_kind='c2n' level='0' iicount='2944'/>
<call method='846' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.486'/>
</parse>
<parse_done stamp='0.486'/>
</parse>
<parse_done stamp='0.486'/>
</parse>
<parse_done stamp='0.486'/>
</parse>
<phase name='optimize_blocks' stamp='0.486'>
<phase_done name='optimize_blocks' stamp='0.486'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.486'>
<phase_done name='rangeCheckElimination' stamp='0.486'/>
</phase>
<phase name='optimize_null_checks' stamp='0.486'>
<phase_done name='optimize_null_checks' stamp='0.486'/>
</phase>
<phase_done name='buildIR' stamp='0.486'/>
</phase>
<phase name='emit_lir' stamp='0.486'>
<phase name='lirGeneration' stamp='0.486'>
<phase_done name='lirGeneration' stamp='0.486'/>
</phase>
<phase name='linearScan' stamp='0.486'>
<phase_done name='linearScan' stamp='0.487'/>
</phase>
<phase_done name='emit_lir' stamp='0.487'/>
</phase>
<phase name='codeemit' stamp='0.487'>
<phase_done name='codeemit' stamp='0.487'/>
</phase>
<phase name='codeinstall' stamp='0.487'>
<phase_done name='codeinstall' stamp='0.506'/>
</phase>
<code_cache total_blobs='281' nmethods='23' adapters='171' free_code_cache='250512384'/>
<task_done success='1' nmsize='1816' count='5259' inlined_bytes='86' stamp='0.506'/>
</task>
<task compile_id='21' method='java/util/TreeMap rightOf (Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;' bytes='13' count='641' iicount='641' level='3' stamp='0.506'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='641' stamp='0.506'/>
</task>
<task compile_id='26' method='java/lang/String startsWith (Ljava/lang/String;)Z' bytes='7' count='521' iicount='521' level='3' stamp='0.506'>
<phase name='buildIR' stamp='0.506'>
<type id='716' name='boolean'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='startsWith' return='716' arguments='730' flags='1' bytes='7' iicount='521'/>
<parse method='832'  stamp='0.506'>
<bc code='182' bci='3'/>
<type id='722' name='int'/>
<method id='834' holder='730' name='startsWith' return='716' arguments='730 722' flags='1' bytes='72' compile_id='24' compiler='C1' level='3' iicount='761'/>
<call method='834' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.506'/>
</parse>
<phase name='optimize_blocks' stamp='0.506'>
<phase_done name='optimize_blocks' stamp='0.506'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.507'>
<phase_done name='rangeCheckElimination' stamp='0.507'/>
</phase>
<phase name='optimize_null_checks' stamp='0.507'>
<phase_done name='optimize_null_checks' stamp='0.507'/>
</phase>
<phase_done name='buildIR' stamp='0.507'/>
</phase>
<phase name='emit_lir' stamp='0.507'>
<phase name='lirGeneration' stamp='0.507'>
<phase_done name='lirGeneration' stamp='0.507'/>
</phase>
<phase name='linearScan' stamp='0.507'>
<phase_done name='linearScan' stamp='0.507'/>
</phase>
<phase_done name='emit_lir' stamp='0.507'/>
</phase>
<phase name='codeemit' stamp='0.507'>
<phase_done name='codeemit' stamp='0.507'/>
</phase>
<phase name='codeinstall' stamp='0.507'>
<phase_done name='codeinstall' stamp='0.527'/>
</phase>
<code_cache total_blobs='282' nmethods='25' adapters='171' free_code_cache='250514560'/>
<task_done success='1' nmsize='520' count='521' stamp='0.527'/>
</task>
<task compile_id='25' method='java/util/ArrayList size ()I' bytes='5' count='269' iicount='269' level='1' stamp='0.527'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='269' stamp='0.527'/>
</task>
<task compile_id='19' method='java/lang/CharacterDataLatin1 toUpperCase (I)I' bytes='53' count='512' iicount='512' level='3' stamp='0.527'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='512' stamp='0.527'/>
</task>
<task compile_id='6' method='java/lang/String substring (II)Ljava/lang/String;' bytes='79' count='325' iicount='325' level='3' stamp='0.527'>
<phase name='buildIR' stamp='0.527'>
<klass id='730' name='java/lang/String' flags='17'/>
<type id='722' name='int'/>
<method id='832' holder='730' name='substring' return='730' arguments='722 722' flags='1' bytes='79' iicount='325'/>
<parse method='832'  stamp='0.527'>
<bc code='183' bci='9'/>
<type id='724' name='void'/>
<klass id='834' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<method id='835' holder='834' name='&lt;init&gt;' return='724' arguments='722' unloaded='1'/>
<call method='835' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='27'/>
<call method='835' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='44'/>
<call method='835' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='75'/>
<klass id='821' name='[C' flags='1041'/>
<method id='836' holder='730' name='&lt;init&gt;' return='724' arguments='821 722 722' flags='1' bytes='82' compile_id='5' compiler='C1' level='3' iicount='993'/>
<call method='836' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.527'/>
</parse>
<phase name='optimize_blocks' stamp='0.527'>
<phase_done name='optimize_blocks' stamp='0.527'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.527'>
<phase_done name='rangeCheckElimination' stamp='0.527'/>
</phase>
<phase name='optimize_null_checks' stamp='0.527'>
<phase_done name='optimize_null_checks' stamp='0.527'/>
</phase>
<phase_done name='buildIR' stamp='0.527'/>
</phase>
<phase name='emit_lir' stamp='0.527'>
<phase name='lirGeneration' stamp='0.527'>
<phase_done name='lirGeneration' stamp='0.527'/>
</phase>
<phase name='linearScan' stamp='0.527'>
<phase_done name='linearScan' stamp='0.527'/>
</phase>
<phase_done name='emit_lir' stamp='0.527'/>
</phase>
<phase name='codeemit' stamp='0.527'>
<phase_done name='codeemit' stamp='0.527'/>
</phase>
<phase name='codeinstall' stamp='0.527'>
<phase_done name='codeinstall' stamp='0.540'/>
</phase>
<code_cache total_blobs='283' nmethods='26' adapters='171' free_code_cache='250512064'/>
<task_done success='1' nmsize='1176' count='325' stamp='0.540'/>
</task>
<task compile_id='31' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='756' backedge_count='3528' iicount='756' level='3' stamp='0.567'>
<phase name='buildIR' stamp='0.567'>
<type id='716' name='boolean'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='equals' return='716' arguments='729' flags='1' bytes='81' iicount='756'/>
<parse method='832'  stamp='0.567'>
<parse_done stamp='0.567'/>
</parse>
<phase name='optimize_blocks' stamp='0.567'>
<phase_done name='optimize_blocks' stamp='0.567'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.567'>
<phase_done name='rangeCheckElimination' stamp='0.567'/>
</phase>
<phase name='optimize_null_checks' stamp='0.567'>
<phase_done name='optimize_null_checks' stamp='0.567'/>
</phase>
<phase_done name='buildIR' stamp='0.567'/>
</phase>
<phase name='emit_lir' stamp='0.567'>
<phase name='lirGeneration' stamp='0.567'>
<phase_done name='lirGeneration' stamp='0.567'/>
</phase>
<phase name='linearScan' stamp='0.567'>
<phase_done name='linearScan' stamp='0.567'/>
</phase>
<phase_done name='emit_lir' stamp='0.567'/>
</phase>
<phase name='codeemit' stamp='0.567'>
<phase_done name='codeemit' stamp='0.567'/>
</phase>
<phase name='codeinstall' stamp='0.567'>
<phase_done name='codeinstall' stamp='0.580'/>
</phase>
<code_cache total_blobs='285' nmethods='28' adapters='171' free_code_cache='250507136'/>
<task_done success='1' nmsize='1360' count='759' backedge_count='3528' stamp='0.580'/>
</task>
<task compile_id='32' method='org/gallant/jitwatch/Summary add (II)I' bytes='17' count='256' iicount='256' level='3' stamp='0.582'>
<phase name='buildIR' stamp='0.582'>
<type id='722' name='int'/>
<klass id='832' name='org/gallant/jitwatch/Summary' flags='1'/>
<method id='833' holder='832' name='add' return='722' arguments='722 722' flags='1' bytes='17' iicount='256'/>
<parse method='833'  stamp='0.582'>
<parse_done stamp='0.582'/>
</parse>
<phase name='optimize_blocks' stamp='0.582'>
<phase_done name='optimize_blocks' stamp='0.582'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.582'>
<phase_done name='rangeCheckElimination' stamp='0.582'/>
</phase>
<phase name='optimize_null_checks' stamp='0.582'>
<phase_done name='optimize_null_checks' stamp='0.582'/>
</phase>
<phase_done name='buildIR' stamp='0.582'/>
</phase>
<phase name='emit_lir' stamp='0.582'>
<phase name='lirGeneration' stamp='0.582'>
<phase_done name='lirGeneration' stamp='0.582'/>
</phase>
<phase name='linearScan' stamp='0.582'>
<phase_done name='linearScan' stamp='0.582'/>
</phase>
<phase_done name='emit_lir' stamp='0.582'/>
</phase>
<phase name='codeemit' stamp='0.582'>
<phase_done name='codeemit' stamp='0.583'/>
</phase>
<phase name='codeinstall' stamp='0.583'>
<phase_done name='codeinstall' stamp='0.603'/>
</phase>
<code_cache total_blobs='286' nmethods='29' adapters='171' free_code_cache='250506240'/>
<task_done success='1' nmsize='368' count='46197' stamp='0.603'/>
</task>
<task compile_id='34' compile_kind='osr' method='org/gallant/jitwatch/Summary main ([Ljava/lang/String;)V' bytes='85' count='1' backedge_count='60612' iicount='1' osr_bci='12' level='3' stamp='0.607'>
<phase name='buildIR' stamp='0.607'>
<type id='724' name='void'/>
<klass id='833' name='[Ljava/lang/String;' flags='1041'/>
<klass id='832' name='org/gallant/jitwatch/Summary' flags='1'/>
<method id='834' holder='832' name='main' return='724' arguments='833' flags='9' bytes='85' iicount='1'/>
<parse method='834'  stamp='0.607'>
<bc code='183' bci='4'/>
<method id='836' holder='832' name='&lt;init&gt;' return='724' flags='1' bytes='10' iicount='1'/>
<call method='836' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='836'>
<bc code='183' bci='1'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='838' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' compile_id='1' compiler='C1' level='3' iicount='5406'/>
<call method='838' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='838'>
<parse_done stamp='0.607'/>
</parse>
<parse_done stamp='0.607'/>
</parse>
<bc code='182' bci='21'/>
<type id='722' name='int'/>
<method id='840' holder='832' name='add' return='722' arguments='722 722' flags='1' bytes='17' compile_id='33' compiler='C2' level='4' iicount='60416'/>
<call method='840' instr='invokevirtual'/>
<dependency type='unique_concrete_method' ctxk='832' x='840'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='832'/>
<parse method='840'>
<parse_done stamp='0.607'/>
</parse>
<bc code='183' bci='38'/>
<klass id='844' name='java/lang/StringBuilder' unloaded='1'/>
<method id='845' holder='844' name='&lt;init&gt;' return='724' unloaded='1'/>
<call method='845' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='43'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='847' holder='844' name='append' return='844' arguments='730' unloaded='1'/>
<call method='847' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='47'/>
<method id='848' holder='844' name='append' return='844' arguments='722' unloaded='1'/>
<call method='848' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='50'/>
<method id='849' holder='844' name='toString' return='730' unloaded='1'/>
<call method='849' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='53'/>
<klass id='842' name='java/io/PrintStream' unloaded='1'/>
<method id='850' holder='842' name='println' return='724' arguments='730' unloaded='1'/>
<call method='850' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='63'/>
<call method='845' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='68'/>
<call method='847' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='75'/>
<type id='723' name='long'/>
<method id='852' holder='844' name='append' return='844' arguments='723' unloaded='1'/>
<call method='852' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='78'/>
<call method='849' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='81'/>
<call method='850' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='0.608'/>
</parse>
<phase name='optimize_blocks' stamp='0.608'>
<phase_done name='optimize_blocks' stamp='0.608'/>
</phase>
<phase name='optimize_null_checks' stamp='0.608'>
<phase_done name='optimize_null_checks' stamp='0.608'/>
</phase>
<phase_done name='buildIR' stamp='0.608'/>
</phase>
<phase name='emit_lir' stamp='0.608'>
<phase name='lirGeneration' stamp='0.608'>
<phase_done name='lirGeneration' stamp='0.608'/>
</phase>
<phase name='linearScan' stamp='0.608'>
<phase_done name='linearScan' stamp='0.608'/>
</phase>
<phase_done name='emit_lir' stamp='0.608'/>
</phase>
<phase name='codeemit' stamp='0.608'>
<phase_done name='codeemit' stamp='0.608'/>
</phase>
<phase name='codeinstall' stamp='0.608'>
<dependency type='leaf_type' ctxk='832'/>
<dependency type='unique_concrete_method' ctxk='832' x='840'/>
<phase_done name='codeinstall' stamp='0.644'/>
</phase>
<code_cache total_blobs='288' nmethods='31' adapters='171' free_code_cache='250500224'/>
<task_done success='1' nmsize='3128' count='1' backedge_count='298068' inlined_bytes='28' stamp='0.644'/>
</task>
<task compile_id='36' method='java/util/concurrent/ConcurrentHashMap tabAt ([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' bytes='21' count='256' iicount='256' level='3' stamp='0.801'>
<phase name='buildIR' stamp='0.801'>
<klass id='833' name='java/util/concurrent/ConcurrentHashMap$Node' flags='8'/>
<klass id='834' name='[Ljava/util/concurrent/ConcurrentHashMap$Node;' flags='1040'/>
<type id='722' name='int'/>
<klass id='832' name='java/util/concurrent/ConcurrentHashMap' flags='1'/>
<method id='835' holder='832' name='tabAt' return='833' arguments='834 722' flags='24' bytes='21' iicount='256'/>
<parse method='835'  stamp='0.801'>
<bc code='182' bci='14'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<type id='723' name='long'/>
<klass id='796' name='sun/misc/Unsafe' flags='17'/>
<method id='839' holder='796' name='getObjectVolatile' return='729' arguments='729 723' flags='257' bytes='0' iicount='256'/>
<call method='839' instr='invokevirtual'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.801'/>
</parse>
<phase name='optimize_blocks' stamp='0.801'>
<phase_done name='optimize_blocks' stamp='0.801'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.801'>
<phase_done name='rangeCheckElimination' stamp='0.801'/>
</phase>
<phase name='optimize_null_checks' stamp='0.801'>
<phase_done name='optimize_null_checks' stamp='0.801'/>
</phase>
<phase_done name='buildIR' stamp='0.801'/>
</phase>
<phase name='emit_lir' stamp='0.801'>
<phase name='lirGeneration' stamp='0.801'>
<phase_done name='lirGeneration' stamp='0.801'/>
</phase>
<phase name='linearScan' stamp='0.801'>
<phase_done name='linearScan' stamp='0.801'/>
</phase>
<phase_done name='emit_lir' stamp='0.801'/>
</phase>
<phase name='codeemit' stamp='0.801'>
<phase_done name='codeemit' stamp='0.801'/>
</phase>
<phase name='codeinstall' stamp='0.801'>
<phase_done name='codeinstall' stamp='0.819'/>
</phase>
<code_cache total_blobs='291' nmethods='34' adapters='171' free_code_cache='250496704'/>
<task_done success='1' nmsize='560' count='384' stamp='0.819'/>
</task>
<fragment>
<![CDATA[
<task compile_id='38' method='java/lang/String getChars (II[CI)V' bytes='62' count='896' iicount='896' level='3' stamp='0.820'>
<phase name='buildIR' stamp='0.820'>
<type id='724' name='void'/>
<type id='722' name='int'/>
<klass id='821' name='[C' flags='1041'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='getChars' return='724' arguments='722 722 821 722' flags='1' bytes='62' iicount='896'/>
<parse method='832'  stamp='0.820'>
<bc code='183' bci='9'/>
<klass id='834' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<method id='835' holder='834' name='&lt;init&gt;' return='724' arguments='722' unloaded='1'/>
<call method='835' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='27'/>
<call method='835' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='43'/>
<call method='835' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='184' bci='58'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='836' holder='735' name='arraycopy' return='724' arguments='729 722 729 722 722' flags='265' bytes='0' compile_id='3' compile_kind='c2n' level='0' iicount='2944'/>
<call method='836' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.820'/>
</parse>
<phase name='optimize_blocks' stamp='0.820'>
<phase_done name='optimize_blocks' stamp='0.820'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.820'>
<phase_done name='rangeCheckElimination' stamp='0.820'/>
</phase>
<phase name='optimize_null_checks' stamp='0.820'>
<phase_done name='optimize_null_checks' stamp='0.820'/>
</phase>
<phase_done name='buildIR' stamp='0.820'/>
</phase>
<phase name='emit_lir' stamp='0.820'>
<phase name='lirGeneration' stamp='0.820'>
<phase_done name='lirGeneration' stamp='0.820'/>
</phase>
<phase name='linearScan' stamp='0.820'>
<phase_done name='linearScan' stamp='0.820'/>
</phase>
<phase_done name='emit_lir' stamp='0.820'/>
</phase>
<phase name='codeemit' stamp='0.820'>
<phase_done name='codeemit' stamp='0.820'/>
</phase>
<phase name='codeinstall' stamp='0.820'>
]]>
</fragment>
</compilation_log>
<compilation_log thread='1064'>
<start_compile_thread name='C2 CompilerThread1' thread='1064' process='16140' stamp='0.275'/>
<task compile_id='12' method='java/lang/String charAt (I)C' bytes='29' count='105728' iicount='105728' stamp='0.367'>
<phase name='parse' nodes='3' live='3' stamp='0.368'>
<type id='717' name='char'/>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='charAt' return='717' arguments='722' flags='1' bytes='29' iicount='105728'/>
<klass id='834' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<uncommon_trap method='832' bci='13' reason='unloaded' action='reinterpret' index='245' klass='834'/>
<parse method='832' uses='105728' stamp='0.387'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='105727' cnt='105727' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='105727' not_taken='0' cnt='105727' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='102' live='97' memory='35040' stamp='0.388'/>
</parse>
<phase_done name='parse' nodes='103' live='63' stamp='0.388'/>
</phase>
<phase name='optimizer' nodes='103' live='63' stamp='0.388'>
<phase name='ccp' nodes='103' live='63' stamp='0.388'>
<phase_done name='ccp' nodes='103' live='63' stamp='0.388'/>
</phase>
<phase name='idealLoop' nodes='103' live='63' stamp='0.388'>
<phase_done name='idealLoop' nodes='103' live='63' stamp='0.388'/>
</phase>
<phase_done name='optimizer' nodes='107' live='63' stamp='0.388'/>
</phase>
<phase name='matcher' nodes='107' live='63' stamp='0.388'>
<phase_done name='matcher' nodes='53' live='53' stamp='0.388'/>
</phase>
<phase name='regalloc' nodes='68' live='67' stamp='0.388'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='78' live='73' stamp='0.389'/>
</phase>
<phase name='output' nodes='78' live='73' stamp='0.389'>
<phase_done name='output' nodes='91' live='83' stamp='0.392'/>
</phase>
<code_cache total_blobs='260' nmethods='12' adapters='161' free_code_cache='250535168'/>
<task_done success='1' nmsize='184' count='106497' stamp='0.401'/>
</task>
<task compile_id='28' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='27' count='8832' iicount='8832' stamp='0.474'>
<phase name='parse' nodes='3' live='3' stamp='0.474'>
<type id='724' name='void'/>
<type id='722' name='int'/>
<klass id='793' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='832' holder='793' name='ensureCapacityInternal' return='724' arguments='722' flags='2' bytes='27' iicount='8832'/>
<parse method='832' uses='8832' stamp='0.486'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='8614' not_taken='217' cnt='8831' prob='0.975427'/>
<bc code='183' bci='17'/>
<method id='834' holder='793' name='newCapacity' return='722' arguments='722' flags='2' bytes='39' iicount='372'/>
<call method='834' count='204' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='834' uses='217' stamp='0.486'>
<bc code='183' bci='31'/>
<method id='837' holder='793' name='hugeCapacity' return='722' arguments='722' flags='2' bytes='28' iicount='1'/>
<call method='837' count='-1' prof_factor='0.583333' inline='1'/>
<klass id='752' name='java/lang/OutOfMemoryError' flags='1'/>
<uncommon_trap method='837' bci='7' reason='unloaded' action='reinterpret' index='145' klass='752'/>
<inline_fail reason='never executed'/>
<direct_call bci='31'/>
<parse_done nodes='129' live='127' memory='41976' stamp='0.486'/>
</parse>
<bc code='184' bci='20'/>
<klass id='821' name='[C' flags='1041'/>
<klass id='835' name='java/util/Arrays' flags='1'/>
<method id='836' holder='835' name='copyOf' return='821' arguments='821 722' flags='9' bytes='19' iicount='437'/>
<call method='836' count='204' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='836' uses='217' stamp='0.486'>
<bc code='184' bci='11'/>
<klass id='839' name='java/lang/Math' flags='17'/>
<method id='840' holder='839' name='min' return='722' arguments='722 722' flags='9' bytes='11' compile_id='8' compiler='C1' level='3' iicount='2401'/>
<call method='840' count='-1' prof_factor='0.496568' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='841' holder='735' name='arraycopy' return='724' arguments='729 722 729 722 722' flags='265' bytes='0' compile_id='3' compile_kind='c2n' level='0' iicount='2944'/>
<call method='841' count='-1' prof_factor='0.496568' inline='1'/>
<intrinsic id='_arraycopy' nodes='106'/>
<parse_done nodes='307' live='304' memory='74912' stamp='0.486'/>
</parse>
<parse_done nodes='334' live='330' memory='80752' stamp='0.486'/>
</parse>
<phase_done name='parse' nodes='336' live='211' stamp='0.486'/>
</phase>
<phase name='optimizer' nodes='336' live='211' stamp='0.486'>
<phase name='escapeAnalysis' nodes='340' live='208' stamp='0.487'>
<phase name='connectionGraph' nodes='341' live='209' stamp='0.487'>
<phase_done name='connectionGraph' nodes='341' live='209' stamp='0.487'/>
</phase>
<phase_done name='escapeAnalysis' nodes='341' live='209' stamp='0.487'/>
</phase>
<phase name='ccp' nodes='341' live='209' stamp='0.487'>
<phase_done name='ccp' nodes='341' live='209' stamp='0.487'/>
</phase>
<phase name='idealLoop' nodes='341' live='208' stamp='0.487'>
<phase_done name='idealLoop' nodes='347' live='208' stamp='0.487'/>
</phase>
<phase_done name='optimizer' nodes='405' live='246' stamp='0.487'/>
</phase>
<phase name='matcher' nodes='405' live='246' stamp='0.487'>
<phase_done name='matcher' nodes='246' live='246' stamp='0.487'/>
</phase>
<phase name='regalloc' nodes='309' live='308' stamp='0.488'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='405' live='370' stamp='0.489'/>
</phase>
<phase name='output' nodes='405' live='370' stamp='0.489'>
<phase_done name='output' nodes='425' live='381' stamp='0.506'/>
</phase>
<code_cache total_blobs='282' nmethods='24' adapters='171' free_code_cache='250510272'/>
<task_done success='1' nmsize='744' count='8896' inlined_bytes='69' stamp='0.522'/>
</task>
<task compile_id='35' compile_kind='osr' method='org/gallant/jitwatch/Summary main ([Ljava/lang/String;)V' bytes='85' count='1' backedge_count='300303' iicount='1' osr_bci='12' stamp='0.644'>
<phase name='parse' nodes='3' live='3' stamp='0.644'>
<type id='724' name='void'/>
<klass id='833' name='[Ljava/lang/String;' flags='1041'/>
<klass id='832' name='org/gallant/jitwatch/Summary' flags='1'/>
<method id='834' holder='832' name='main' return='724' arguments='833' flags='9' bytes='85' iicount='1'/>
<klass id='735' name='java/lang/System' flags='17'/>
<uncommon_trap method='834' bci='31' reason='unloaded' action='reinterpret' index='47' klass='735'/>
<parse method='834' uses='1' osr_bci='12' stamp='0.644'>
<uncommon_trap method='834' bci='31' reason='unloaded' action='reinterpret' index='47' klass='735'/>
<dependency type='leaf_type' ctxk='832'/>
<dependency type='leaf_type' ctxk='832'/>
<uncommon_trap bci='12' reason='constraint' action='reinterpret'/>
<uncommon_trap bci='12' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='12' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='162' bci='15'/>
<branch target_bci='31' taken='0' not_taken='7549' cnt='7549' prob='never'/>
<uncommon_trap bci='15' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='182' bci='21'/>
<type id='722' name='int'/>
<method id='838' holder='832' name='add' return='722' arguments='722 722' flags='1' bytes='17' compile_id='33' compiler='C2' level='4' iicount='73906'/>
<dependency type='unique_concrete_method' ctxk='832' x='838'/>
<call method='838' count='7549' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='838' uses='7549' stamp='0.644'>
<uncommon_trap bci='21' reason='null_check' action='maybe_recompile'/>
<parse_done nodes='168' live='162' memory='47200' stamp='0.644'/>
</parse>
<parse_done nodes='171' live='165' memory='47840' stamp='0.644'/>
</parse>
<phase_done name='parse' nodes='171' live='118' stamp='0.644'/>
</phase>
<phase name='optimizer' nodes='171' live='118' stamp='0.644'>
<phase name='idealLoop' nodes='175' live='110' stamp='0.644'>
<loop_tree>
<loop idx='175' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='182' live='108' stamp='0.644'/>
</phase>
<phase name='idealLoop' nodes='182' live='108' stamp='0.644'>
<loop_tree>
<loop idx='175' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='225' live='120' stamp='0.645'/>
</phase>
<phase name='idealLoop' nodes='225' live='120' stamp='0.645'>
<loop_tree>
<loop idx='335' main_loop='335' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='360' live='204' stamp='0.645'/>
</phase>
<phase name='ccp' nodes='360' live='204' stamp='0.645'>
<phase_done name='ccp' nodes='360' live='204' stamp='0.645'/>
</phase>
<phase name='idealLoop' nodes='361' live='202' stamp='0.646'>
<loop_tree>
<loop idx='286' inner_loop='1' pre_loop='230' >
</loop>
<loop idx='335' inner_loop='1' main_loop='335' >
</loop>
<loop idx='246' inner_loop='1' post_loop='230' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='388' live='195' stamp='0.646'/>
</phase>
<phase name='idealLoop' nodes='388' live='195' stamp='0.646'>
<loop_tree>
<loop idx='286' inner_loop='1' pre_loop='230' >
</loop>
<loop idx='412' inner_loop='1' main_loop='412' >
</loop>
<loop idx='246' inner_loop='1' post_loop='230' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='442' live='232' stamp='0.646'/>
</phase>
<phase name='idealLoop' nodes='442' live='232' stamp='0.646'>
<loop_tree>
<loop idx='286' inner_loop='1' pre_loop='230' >
</loop>
<loop idx='412' inner_loop='1' main_loop='412' >
</loop>
<loop idx='246' inner_loop='1' post_loop='230' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='448' live='229' stamp='0.647'/>
</phase>
<phase_done name='optimizer' nodes='450' live='225' stamp='0.647'/>
</phase>
<phase name='matcher' nodes='450' live='225' stamp='0.647'>
<phase_done name='matcher' nodes='232' live='232' stamp='0.647'/>
</phase>
<phase name='regalloc' nodes='267' live='266' stamp='0.647'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='295' live='291' stamp='0.648'/>
</phase>
<phase name='output' nodes='295' live='291' stamp='0.649'>
<phase_done name='output' nodes='315' live='301' stamp='0.649'/>
</phase>
<dependency type='leaf_type' ctxk='832'/>
<dependency type='unique_concrete_method' ctxk='832' x='838'/>
<code_cache total_blobs='290' nmethods='32' adapters='171' free_code_cache='250493376'/>
<task_done success='1' nmsize='472' count='1' backedge_count='1000000' inlined_bytes='17' stamp='0.669'/>
</task>
</compilation_log>
<compilation_log thread='1572'>
<start_compile_thread name='C2 CompilerThread0' thread='1572' process='16140' stamp='0.275'/>
<task compile_id='11' method='java/util/TreeMap parentOf (Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;' bytes='13' count='9984' iicount='9984' stamp='0.367'>
<phase name='parse' nodes='3' live='3' stamp='0.367'>
<klass id='833' name='java/util/TreeMap$Entry' flags='24'/>
<klass id='832' name='java/util/TreeMap' flags='1'/>
<method id='834' holder='832' name='parentOf' return='833' arguments='833' flags='10' bytes='13' iicount='9984'/>
<parse method='834' uses='9984' stamp='0.367'>
<bc code='199' bci='1'/>
<branch target_bci='8' taken='9983' not_taken='0' cnt='9983' prob='always'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken always'/>
<parse_done nodes='43' live='41' memory='25800' stamp='0.368'/>
</parse>
<phase_done name='parse' nodes='44' live='25' stamp='0.368'/>
</phase>
<phase name='optimizer' nodes='44' live='25' stamp='0.368'>
<phase name='ccp' nodes='44' live='25' stamp='0.368'>
<phase_done name='ccp' nodes='44' live='25' stamp='0.368'/>
</phase>
<phase name='idealLoop' nodes='44' live='24' stamp='0.368'>
<phase_done name='idealLoop' nodes='44' live='24' stamp='0.368'/>
</phase>
<phase_done name='optimizer' nodes='44' live='24' stamp='0.368'/>
</phase>
<phase name='matcher' nodes='44' live='24' stamp='0.368'>
<phase_done name='matcher' nodes='24' live='24' stamp='0.368'/>
</phase>
<phase name='regalloc' nodes='30' live='29' stamp='0.368'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='33' live='30' stamp='0.368'/>
</phase>
<phase name='output' nodes='33' live='30' stamp='0.368'>
<phase_done name='output' nodes='39' live='36' stamp='0.385'/>
</phase>
<code_cache total_blobs='257' nmethods='9' adapters='161' free_code_cache='250537792'/>
<task_done success='1' nmsize='88' count='10022' stamp='0.387'/>
</task>
<task compile_id='13' method='java/lang/String length ()I' bytes='6' count='27904' iicount='27904' stamp='0.387'>
<phase name='parse' nodes='3' live='3' stamp='0.388'>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='length' return='722' flags='1' bytes='6' iicount='27922'/>
<parse method='832' uses='27922' stamp='0.388'>
<bc code='190' bci='4'/>
<uncommon_trap bci='4' reason='null_check' action='maybe_recompile'/>
<parse_done nodes='44' live='42' memory='25928' stamp='0.388'/>
</parse>
<phase_done name='parse' nodes='45' live='27' stamp='0.388'/>
</phase>
<phase name='optimizer' nodes='45' live='27' stamp='0.388'>
<phase name='ccp' nodes='45' live='27' stamp='0.388'>
<phase_done name='ccp' nodes='45' live='27' stamp='0.388'/>
</phase>
<phase name='idealLoop' nodes='45' live='27' stamp='0.388'>
<phase_done name='idealLoop' nodes='45' live='27' stamp='0.388'/>
</phase>
<phase_done name='optimizer' nodes='48' live='27' stamp='0.388'/>
</phase>
<phase name='matcher' nodes='48' live='27' stamp='0.388'>
<phase_done name='matcher' nodes='24' live='24' stamp='0.388'/>
</phase>
<phase name='regalloc' nodes='30' live='29' stamp='0.388'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='30' live='29' stamp='0.388'/>
</phase>
<phase name='output' nodes='30' live='29' stamp='0.388'>
<phase_done name='output' nodes='38' live='37' stamp='0.392'/>
</phase>
<code_cache total_blobs='261' nmethods='11' adapters='161' free_code_cache='250524672'/>
<task_done success='1' nmsize='120' count='28194' stamp='0.394'/>
</task>
<task compile_id='27' method='java/io/WinNTFileSystem isSlash (C)Z' bytes='18' count='5761' iicount='5761' stamp='0.474'>
<phase name='parse' nodes='3' live='3' stamp='0.474'>
<type id='716' name='boolean'/>
<type id='717' name='char'/>
<klass id='832' name='java/io/WinNTFileSystem' flags='0'/>
<method id='833' holder='832' name='isSlash' return='716' arguments='717' flags='2' bytes='18' iicount='5761'/>
<parse method='833' uses='5761' stamp='0.474'>
<bc code='159' bci='3'/>
<branch target_bci='12' taken='329' not_taken='5432' cnt='5761' prob='0.0571081'/>
<bc code='160' bci='9'/>
<branch target_bci='16' taken='5136' not_taken='295' cnt='5431' prob='0.945682'/>
<parse_done nodes='47' live='46' memory='26176' stamp='0.474'/>
</parse>
<phase_done name='parse' nodes='48' live='27' stamp='0.475'/>
</phase>
<phase name='optimizer' nodes='48' live='27' stamp='0.475'>
<phase name='ccp' nodes='48' live='27' stamp='0.475'>
<phase_done name='ccp' nodes='48' live='27' stamp='0.475'/>
</phase>
<phase name='idealLoop' nodes='48' live='27' stamp='0.475'>
<phase_done name='idealLoop' nodes='48' live='27' stamp='0.475'/>
</phase>
<phase_done name='optimizer' nodes='48' live='27' stamp='0.475'/>
</phase>
<phase name='matcher' nodes='48' live='27' stamp='0.475'>
<phase_done name='matcher' nodes='26' live='26' stamp='0.475'/>
</phase>
<phase name='regalloc' nodes='36' live='36' stamp='0.475'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='36' live='36' stamp='0.475'/>
</phase>
<phase name='output' nodes='36' live='36' stamp='0.475'>
<phase_done name='output' nodes='46' live='43' stamp='0.483'/>
</phase>
<code_cache total_blobs='280' nmethods='22' adapters='171' free_code_cache='250515648'/>
<task_done success='1' nmsize='120' count='5804' stamp='0.486'/>
</task>
<task compile_id='30' method='java/lang/AbstractStringBuilder append (C)Ljava/lang/AbstractStringBuilder;' bytes='29' count='8064' iicount='8064' stamp='0.506'>
<phase name='parse' nodes='3' live='3' stamp='0.506'>
<klass id='793' name='java/lang/AbstractStringBuilder' flags='1024'/>
<type id='717' name='char'/>
<method id='832' holder='793' name='append' return='793' arguments='717' flags='1' bytes='29' iicount='8064'/>
<parse method='832' uses='8064' stamp='0.506'>
<bc code='183' bci='7'/>
<type id='724' name='void'/>
<type id='722' name='int'/>
<method id='834' holder='793' name='ensureCapacityInternal' return='724' arguments='722' flags='2' bytes='27' iicount='8880'/>
<call method='834' count='7552' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='834' uses='8064' stamp='0.527'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='8664' not_taken='216' cnt='8880' prob='0.975676'/>
<bc code='183' bci='17'/>
<method id='835' holder='793' name='newCapacity' return='722' arguments='722' flags='2' bytes='39' iicount='372'/>
<call method='835' count='204' prof_factor='0.908108' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='835' uses='196' stamp='0.527'>
<bc code='183' bci='31'/>
<method id='839' holder='793' name='hugeCapacity' return='722' arguments='722' flags='2' bytes='28' iicount='1'/>
<call method='839' count='-1' prof_factor='0.526882' inline='1'/>
<klass id='752' name='java/lang/OutOfMemoryError' flags='1'/>
<uncommon_trap method='839' bci='7' reason='unloaded' action='reinterpret' index='145' klass='752'/>
<inline_fail reason='never executed'/>
<direct_call bci='31'/>
<parse_done nodes='147' live='145' memory='44832' stamp='0.527'/>
</parse>
<bc code='184' bci='20'/>
<klass id='821' name='[C' flags='1041'/>
<klass id='836' name='java/util/Arrays' flags='1'/>
<method id='837' holder='836' name='copyOf' return='821' arguments='821 722' flags='9' bytes='19' iicount='437'/>
<call method='837' count='204' prof_factor='0.908108' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='837' uses='196' stamp='0.527'>
<bc code='184' bci='11'/>
<klass id='841' name='java/lang/Math' flags='17'/>
<method id='842' holder='841' name='min' return='722' arguments='722 722' flags='9' bytes='11' compile_id='8' compiler='C1' level='3' iicount='2402'/>
<call method='842' count='-1' prof_factor='0.448513' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='843' holder='735' name='arraycopy' return='724' arguments='729 722 729 722 722' flags='265' bytes='0' compile_id='3' compile_kind='c2n' level='0' iicount='2944'/>
<call method='843' count='-1' prof_factor='0.448513' inline='1'/>
<intrinsic id='_arraycopy' nodes='106'/>
<parse_done nodes='325' live='322' memory='82512' stamp='0.528'/>
</parse>
<parse_done nodes='352' live='348' memory='87792' stamp='0.540'/>
</parse>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='401' live='394' memory='96520' stamp='0.541'/>
</parse>
<phase_done name='parse' nodes='403' live='249' stamp='0.541'/>
</phase>
<phase name='optimizer' nodes='403' live='249' stamp='0.541'>
<phase name='escapeAnalysis' nodes='407' live='245' stamp='0.541'>
<phase name='connectionGraph' nodes='408' live='246' stamp='0.541'>
<phase_done name='connectionGraph' nodes='408' live='246' stamp='0.541'/>
</phase>
<phase_done name='escapeAnalysis' nodes='408' live='246' stamp='0.541'/>
</phase>
<phase name='ccp' nodes='408' live='246' stamp='0.541'>
<phase_done name='ccp' nodes='408' live='246' stamp='0.541'/>
</phase>
<phase name='idealLoop' nodes='408' live='245' stamp='0.541'>
<phase_done name='idealLoop' nodes='426' live='246' stamp='0.541'/>
</phase>
<phase_done name='optimizer' nodes='485' live='285' stamp='0.542'/>
</phase>
<phase name='matcher' nodes='485' live='285' stamp='0.542'>
<phase_done name='matcher' nodes='284' live='284' stamp='0.542'/>
</phase>
<phase name='regalloc' nodes='353' live='352' stamp='0.542'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='467' live='423' stamp='0.545'/>
</phase>
<phase name='output' nodes='467' live='423' stamp='0.545'>
<phase_done name='output' nodes='486' live='435' stamp='0.545'/>
</phase>
<code_cache total_blobs='285' nmethods='27' adapters='171' free_code_cache='250504320'/>
<task_done success='1' nmsize='904' count='8080' inlined_bytes='96' stamp='0.565'/>
</task>
<task compile_id='33' method='org/gallant/jitwatch/Summary add (II)I' bytes='17' count='46504' iicount='46504' stamp='0.603'>
<phase name='parse' nodes='3' live='3' stamp='0.603'>
<type id='722' name='int'/>
<klass id='832' name='org/gallant/jitwatch/Summary' flags='1'/>
<method id='833' holder='832' name='add' return='722' arguments='722 722' flags='1' bytes='17' compile_id='32' compiler='C1' level='3' iicount='46695'/>
<parse method='833' uses='46695' stamp='0.603'>
<parse_done nodes='45' live='44' memory='25888' stamp='0.603'/>
</parse>
<phase_done name='parse' nodes='46' live='29' stamp='0.603'/>
</phase>
<phase name='optimizer' nodes='46' live='29' stamp='0.603'>
<phase name='ccp' nodes='46' live='29' stamp='0.603'>
<phase_done name='ccp' nodes='46' live='29' stamp='0.603'/>
</phase>
<phase name='idealLoop' nodes='46' live='29' stamp='0.603'>
<phase_done name='idealLoop' nodes='46' live='29' stamp='0.603'/>
</phase>
<phase_done name='optimizer' nodes='46' live='29' stamp='0.603'/>
</phase>
<phase name='matcher' nodes='46' live='29' stamp='0.603'>
<phase_done name='matcher' nodes='32' live='32' stamp='0.603'/>
</phase>
<phase name='regalloc' nodes='34' live='34' stamp='0.603'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='35' live='35' stamp='0.604'/>
</phase>
<phase name='output' nodes='35' live='35' stamp='0.604'>
<phase_done name='output' nodes='42' live='42' stamp='0.604'/>
</phase>
<code_cache total_blobs='288' nmethods='30' adapters='171' free_code_cache='250500160'/>
<task_done success='1' nmsize='120' count='60416' stamp='0.605'/>
</task>
</compilation_log>
<hotspot_log_done stamp='1.175'/>
</hotspot_log>
